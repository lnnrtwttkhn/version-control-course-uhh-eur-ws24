[
  {
    "objectID": "mechanics.html",
    "href": "mechanics.html",
    "title": "Mechanics",
    "section": "",
    "text": "Date: Winter semester 2024/25 (October to January)\n\n Event: Seminar\n\n Time: Fridays, 10:15 - 11:45 (90 Minutes)\n\n Credits: 4,0\n\n Place: Online (Zoom)\n\n Language: English\n\n Instructor: Dr.¬†Lennart Wittkuhn\n\n Tag: PsyM14-PsyWB-K01\n\n Registration: The registration period starts on September 2nd 2024 at 09:00 and ends on September 19th 2024 at 13:00. MSc Psychology students at University of Hamburg can enroll via Stine."
  },
  {
    "objectID": "mechanics.html#overview",
    "href": "mechanics.html#overview",
    "title": "Mechanics",
    "section": "",
    "text": "Date: Winter semester 2024/25 (October to January)\n\n Event: Seminar\n\n Time: Fridays, 10:15 - 11:45 (90 Minutes)\n\n Credits: 4,0\n\n Place: Online (Zoom)\n\n Language: English\n\n Instructor: Dr.¬†Lennart Wittkuhn\n\n Tag: PsyM14-PsyWB-K01\n\n Registration: The registration period starts on September 2nd 2024 at 09:00 and ends on September 19th 2024 at 13:00. MSc Psychology students at University of Hamburg can enroll via Stine."
  },
  {
    "objectID": "mechanics.html#what-will-the-average-seminar-session-look-like",
    "href": "mechanics.html#what-will-the-average-seminar-session-look-like",
    "title": "Mechanics",
    "section": "What will the average seminar session look like?",
    "text": "What will the average seminar session look like?\nThe course will consist of a maximum of 14 sessions, each lasting 90 minutes (for more details, please refer to the schedule). Each course session follows a roughly structured format as outlined below:\n\n Content Review (up to 30 minutes):  Course participants engage with the online materials, supplemented by concise presentations by the instructors. Some course preparation may occur outside of the class.\n Interactive Discussions & Quizzes (up to 15 minutes): Course participants collectively address any inquiries related to the session‚Äôs content and online materials. Instructor-led quiz questions may also be interspersed throughout.\n Exercises & Implementation (up to 60 minutes): Course participants actively work on hands-on exercises and assignments.\n\nNote, that course participants are sometimes required to work on course materials outside of class time. Not all course contents will be covered during class time."
  },
  {
    "objectID": "mechanics.html#course-materials",
    "href": "mechanics.html#course-materials",
    "title": "Mechanics",
    "section": "Course Materials",
    "text": "Course Materials\n\nTextbook: Version Control Book\nCourse participants will be asked to study specific chapters in the ‚ÄúVersion Control Book‚Äù. The Version Control Book aims to summarize all the relevant course contents for the students, effectively serving as a textbook for the course. In addition, we will provide references to multiple other learning resources, allowing students to pick from those learning resources that they feel supports their learning process best."
  },
  {
    "objectID": "mechanics.html#prerequisites",
    "href": "mechanics.html#prerequisites",
    "title": "Mechanics",
    "section": "Prerequisites",
    "text": "Prerequisites\nThere are no prerequisites to take part in this course. Programming experience (any language) can be beneficial but is not required to follow the course contents."
  },
  {
    "objectID": "mechanics.html#active-learning",
    "href": "mechanics.html#active-learning",
    "title": "Mechanics",
    "section": "Active Learning",
    "text": "Active Learning\nActive learning in this class involves engaging in hands-on coding activities during class time. Research on active learning indicates that this approach promotes a greater understanding and retention of the material compared to passive teaching methods (see e.g., Deslauriers et al., 2019)."
  },
  {
    "objectID": "mechanics.html#assignments",
    "href": "mechanics.html#assignments",
    "title": "Mechanics",
    "section": "Assignments",
    "text": "Assignments\nCourse participants will work on assignments (individually or in pairs) during class."
  },
  {
    "objectID": "mechanics.html#pair-programming",
    "href": "mechanics.html#pair-programming",
    "title": "Mechanics",
    "section": "Pair Programming",
    "text": "Pair Programming\nOur course assignments are inspired by the concept of ‚Äúpair programming‚Äù. For the hands-on exercises, we actively encourage or even require course participants to work in pairs or small groups.\n\nPair programming is a software development technique in which two programmers work together at one workstation. One, the driver, writes code while the other, the observer or navigator (Williams, 2001), reviews each line of code as it is typed in. The two programmers switch roles frequently. ‚Äì Source: Wikipedia"
  },
  {
    "objectID": "mechanics.html#references",
    "href": "mechanics.html#references",
    "title": "Mechanics",
    "section": "References",
    "text": "References\n\n\nDeslauriers, L., McCarty, L. S., Miller, K., Callaghan, K., & Kestin, G. (2019). Measuring actual learning versus feeling of learning in response to being actively engaged in the classroom. Proceedings of the National Academy of Sciences, 116(39), 19251‚Äì19257. https://doi.org/10.1073/pnas.1821936116. License: CC BY-NC-ND.\n\n\nMillman, K. J., Brett, M., Barnowski, R., & Poline, J.-B. (2018). Teaching computational reproducibility for neuroimaging. Frontiers in Neuroscience, 12. https://doi.org/10.3389/fnins.2018.00727.\n\n\nWilliams, L. (2001). Integrating pair programming into a software development process. Proceedings 14th Conference on Software Engineering Education and Training. ‚ÄôIn Search of a Software Engineering Profession‚Äô (Cat. No.PR01059). https://doi.org/10.1109/csee.2001.913816. License: Unknown.\n\n\nWilson, R. C. (2021). NSCS 344 ‚Äî modeling the mind. University of Arizona. https://u.arizona.edu/~bob/web_NSCS344/. License: Unknown."
  },
  {
    "objectID": "sessions/session09.html",
    "href": "sessions/session09.html",
    "title": "GitHub - Collaboration",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: GitHub - Advanced\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session09.html#learning-objectives",
    "href": "sessions/session09.html#learning-objectives",
    "title": "GitHub - Collaboration",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch."
  },
  {
    "objectID": "sessions/session09.html#var-course.project-project",
    "href": "sessions/session09.html#var-course.project-project",
    "title": "GitHub - Collaboration",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou collaborated successfully on a shared project by adding and committing changes to a partner‚Äôs repository.\nYou created and reviewed a pull request to integrate new content from a partner.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session09.html#exercises",
    "href": "sessions/session09.html#exercises",
    "title": "GitHub - Collaboration",
    "section": "Exercises",
    "text": "Exercises\n\n‚ÄúPrivate‚Äù collaboration with pull requests (using GitHub Flow)\n\nAdd your exercise partner as a collaborator to your project repository on GitHub.\nClone your partner‚Äôs repository.\nCreate a new branch in your collaborator‚Äôs repository.\nAdd a new entry to your collaborator‚Äôs project file (e.g., .txt or .qmd (if you are unsure, where to add the entry, ask your collaborator!)\nAdd and commit the changes.\nPush the changes on the new branch to the remote repository.\nCreate a Pull Request (on GitLab: Merge Request).\nReview the Pull Request that your collaborator made in your repository.\nüöÄ Optional: Add additional changes on the branch pushed by your collaborator.\nMerge the pull request into your repository.\n\n\n\n\nAdd a README.md\n\nFind the option to create a new file on your remote repository in the browser.\nName the file README.md, add a brief description, and provide a commit message.\nüöÄ Optional: Play around with Markdown syntax.\nSave the README.md file to the repository.\nPull the changes to your local repository."
  },
  {
    "objectID": "sessions/session09.html#slides",
    "href": "sessions/session09.html#slides",
    "title": "GitHub - Collaboration",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session09.html#cheatsheet",
    "href": "sessions/session09.html#cheatsheet",
    "title": "GitHub - Collaboration",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit blame\nShows the authorship and commit information of each line in a file"
  },
  {
    "objectID": "sessions/tasks-template.html",
    "href": "sessions/tasks-template.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "In this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ?meta:chapter in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session07.html",
    "href": "sessions/session07.html",
    "title": "Quarto",
    "section": "",
    "text": "Slides"
  },
  {
    "objectID": "sessions/session07.html#var-course.project-project",
    "href": "sessions/session07.html#var-course.project-project",
    "title": "Quarto",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nTask 1\n\nYou created a new quarto branch in your city-guide repository and switched to it.\n\n\n\nTask 2\n\nYou created a new empty Quarto file called city-guide.qmd and saved it in your city-guide repository.\nYou wrote a short introduction note to your city-guide repository.\nYou switched between Quarto‚Äôs visual and source mode.\nYou rendered the file to HTML.\nYou staged and committed your changes.\n\n\n\nTask 2.1\nQuarto and RStudio might create a bunch of extra files:\n.Rproj.user\n.Rhistory\n.RData\n.Ruserdata\n/_site/\n/.quarto/\nThe are temporary or user specific files and should therefore not be tracked in Git.\n\nAdd any file that is not the .qmd file to your .gitignore file.\nStage and commit the changes to your .gitignore file.\n\n\n\nTask 3\n\nYou added a new entry to the city-guide.qmd file.\nTopic: Interview each other about your favorite cinema or theater.\nYou formatted the text by applying at least three types of Markdown syntax.\nYou staged and committed your changes.\n\n\n\nTask 4\n\nYou added a YAML header to your Quarto file.\nYou included your name, a title, an output format (e.g., HTML) and a theme.\nYou staged and committed your changes.\n\n\nTask 5\n\nYou merged your quarto branch into your main branch\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session07.html#slides",
    "href": "sessions/session07.html#slides",
    "title": "Quarto",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/index.html",
    "href": "sessions/index.html",
    "title": "Sessions",
    "section": "",
    "text": "Session 13\n\n\n\n\n\n\nJanuary 24, 2025\n\n\n\n\n\n\n\n\n\nSession 12\n\n\n\n\n\n\nJanuary 17, 2025\n\n\n\n\n\n\n\n\n\nSession 11\n\n\n\n\n\n\nJanuary 10, 2025\n\n\n\n\n\n\n\n\n\nSession 10\n\n\n\n\n\n\nDecember 20, 2024\n\n\n\n\n\n\n\n\n\nSession 09\n\n\n\n\n\n\nDecember 13, 2024\n\n\n\n\n\n\n\n\n\nSession 08\n\n\n\n\n\n\nDecember 6, 2024\n\n\n\n\n\n\n\n\n\nSession 07\n\n\n\n\n\n\nNovember 29, 2024\n\n\n\n\n\n\n\n\n\nSession 06\n\n\n\n\n\n\nNovember 22, 2024\n\n\n\n\n\n\n\n\n\nSession 05\n\n\n\n\n\n\nNovember 15, 2024\n\n\n\n\n\n\n\n\n\nSession 04\n\n\n\n\n\n\nNovember 8, 2024\n\n\n\n\n\n\n\n\n\nSession 03\n\n\n\n\n\n\nNovember 1, 2024\n\n\n\n\n\n\n\n\n\nSession 02\n\n\n\n\n\n\nOctober 25, 2024\n\n\n\n\n\n\n\n\n\nSession 01\n\n\n\n\n\n\nOctober 18, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "sessions/index.html#from-session-1-your-role",
    "href": "sessions/index.html#from-session-1-your-role",
    "title": "Sessions",
    "section": "From session 1: Your role",
    "text": "From session 1: Your role\n\n\nActive participation\n\nThis is a pass / fail course. You pass if you fulfill all course requirements:\nRequirement 1: Come to at least 12 out of 14 sessions (85%)\nRequirement 2: Complete all surveys/quizzes\nRequirement 3: Complete all mandatory exercises (implemented in Git)\n\n\n\n\n\nHow do we verify the course requirements?\n\nRequirement 1: Sign the attendance list\nRequirement 2: Provide a personal codeword. At the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor). We will send our secretary a list of personal codewords and she will return a list of names.\nRequirement 3: We check your GitHub repositories."
  },
  {
    "objectID": "sessions/index.html#your-tasks",
    "href": "sessions/index.html#your-tasks",
    "title": "Sessions",
    "section": "Your tasks",
    "text": "Your tasks\nIn order to pass this course, you should have accomplished the following tasks:\n\n\nYou have a public city-guide repository on GitHub (Sessions 03, 08, 12).\nYou added a text file (e.g., .qmd or .txt) with at least one city recommendation to the repository (Session 03).\nYou added a .gitignore file (ignoring a random file like an image) to the repository (Sessions 04, 05).\nYou created and merged a branch in your repository (Session 06).\nYou created a pull request in a partner‚Äôs repository, e.g., by adding a new recommendation (Sessions 09, 10).\nYou reviewed and merged the pull request of a partner in your city-guide repository (Sessions 09, 10).\nYou created an issue in Lennart‚Äôs city-guide repository, a pull request from a fork fixing the issue, you implemented all additional requests and your pull request was approved and merged by Lennart (Session 11).\nYou created a release of your city-guide repository on GitHub (Session 12).\nYou completed all quizzes (see next slide).\nYou completed the extra assignment (if necessary, see next slide)."
  },
  {
    "objectID": "sessions/index.html#quiz-participation",
    "href": "sessions/index.html#quiz-participation",
    "title": "Sessions",
    "section": "Quiz participation",
    "text": "Quiz participation\nIn order to pass this course, you should have completed all quizzes:\n\nIntro\nCommand Line\nGit Basics\nBranches\nGitHub\n\n\n\nHow to verify participation\n\nAt the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor), not to us!\nOur secretary sends us an unsorted list with codewords.\nWe verify the quiz participation for each codeword and send Christine a list with codewords that completed all quizzes.\nChristine compares the codewords with your names and send us an unsorted list with names."
  },
  {
    "objectID": "sessions/index.html#missed-more-than-two-sessions",
    "href": "sessions/index.html#missed-more-than-two-sessions",
    "title": "Sessions",
    "section": "Missed more than two sessions?",
    "text": "Missed more than two sessions?\nWe will send you an email with an extra assignment."
  },
  {
    "objectID": "sessions/session05.html",
    "href": "sessions/session05.html",
    "title": "Git Essentials",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: First steps with Git\n  \n  \n    \n     Chapter: Git Essentials\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session05.html#this-session",
    "href": "sessions/session05.html#this-session",
    "title": "Git Essentials",
    "section": "This session",
    "text": "This session\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúGit Essentials‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session05.html#learning-objectives",
    "href": "sessions/session05.html#learning-objectives",
    "title": "Git Essentials",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description.\n\n\nGit Essentials\nüí° You know how to explore the commit history. üí° You can compare different commits. üí° You know how to use and create a .gitignore file. üí° You can discuss which files can (not) be tracked well with Git and why. üí° You know how to track empty folders in Git repositories."
  },
  {
    "objectID": "sessions/session05.html#var-course.project-project",
    "href": "sessions/session05.html#var-course.project-project",
    "title": "Git Essentials",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nCommit at least three changes in city-guide.txt.\nMake at least one commit using git commit --amend.\n\nFor example, add a a new entry without a title first, commit, then add a title and use git commit --amend to add the title change to the same commit.\n\nCreate a .gitignore file.\n\nEveryone: Create a random file that you want to ignore, for example image.jpg.\nAll macOS users: Let your repository ignore .DS_Store.\n\nüöÄ Optional: Commit .gitkeep in an otherwise empty directory.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session05.html#exercises",
    "href": "sessions/session05.html#exercises",
    "title": "Git Essentials",
    "section": "Exercises",
    "text": "Exercises\n\nAmend a commit\n\nIf needed, navigate to the project folder using the command line.\nMake additional changes to your project text file.\nStage the changes.\nAmend the previous commit to include the new changes.\nCheck the commit history to verify that the last commit message has not changed.\n\nFor example, add a new entry without a title first, commit, then add a title and amend the previous commit to add the title change to the same commit.\n\n\nCreate a .gitignore file\n\nIf needed, navigate to the project folder using the command line.\nAdd a random file to your repository that you want to ignore, for example an image file like image.jpg.\nCheck the state of your repository to confirm that Git noticed the added file.\nCreate a .gitignore file.\nAdd the random file to the .gitignore file.\nCheck the state of your repository again to confirm that Git now ignores the added file.\nStage the changes in your repository.\nCommit the .gitignore file using a descriptive commit message.\nüöÄ All macOS users: Let your repository ignore .DS_Store."
  },
  {
    "objectID": "sessions/session05.html#slides",
    "href": "sessions/session05.html#slides",
    "title": "Git Essentials",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session05.html#cheatsheet",
    "href": "sessions/session05.html#cheatsheet",
    "title": "Git Essentials",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\nFirst steps with Git\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit init\nInitializes a folder as a Git repository\n\n\ngit status\nShows Git tracking status of files in the repository\n\n\ngit add\nAdds file(s) to the staging area\n\n\ngit commit\nCommits staged files\n\n\ngit commit -m \"commit message\"\nCommits staged files with a commit message\n\n\n\n\n\n\n\nGit Essentials\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit log\nViews past commits\n\n\ngit diff\nViews made changes compared to the last commit\n\n\ngit mv\nRenames or moves files and automatically stages the changes"
  },
  {
    "objectID": "sessions/session08.html",
    "href": "sessions/session08.html",
    "title": "Remotes - Intro",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: Remotes - Introduction\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session08.html#this-session",
    "href": "sessions/session08.html#this-session",
    "title": "Remotes - Intro",
    "section": "This session",
    "text": "This session\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúRemotes: Introduction‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session08.html#learning-objectives",
    "href": "sessions/session08.html#learning-objectives",
    "title": "Remotes - Intro",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You can create a remote repository. üí° You can connect your local Git repository to a remote repository service like GitHub or GitLab. üí° You can pull and push changes to and from a remote repository. üí° You can clone a repository from a remote repository."
  },
  {
    "objectID": "sessions/session08.html#var-course.project-project",
    "href": "sessions/session08.html#var-course.project-project",
    "title": "Remotes - Intro",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou created a new private(!) GitHub repository using SSH.\nYou set the remote URL of your local city-guide Git repository.\nYou uploaded (i.e., ‚Äúpushed‚Äù) the default branch (main or master) of your city-guide project to GitHub.\nYou invited Lennart (lnnrtwttkhn) and Reza (rezahakimazar) to your city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session08.html#exercises",
    "href": "sessions/session08.html#exercises",
    "title": "Remotes - Intro",
    "section": "Exercises",
    "text": "Exercises\n\nConnect to remote repositories using SSH\n\nGenerate an SSH key.\nCopy the SSH key to your clipboard.\nAdd the SSH key to the remote repository (for example, GitHub or GitLab).\n\n\n\n\n\n\n\nSolutions\n\n\n\n\n\nConnect to remote repositories using SSH\n\n\n\nCode\n\n#!/bin/bash\n\nssh-keygen -t ed25519 -C \"your_email@example.com\" # &lt;1&gt;\ncat ~/.ssh/id_ed25519.pub # &lt;2&gt;\n# Copy the SSh key to your account # &lt;3&gt;\n\n\n\nIn the command line, create a new SSH key. Make sure to change the example email to your email address. Optionally, provide a passphrase.\nCopy the SSH key to your clipboard. Here, we use cat to print the contents of the SSH key to the command line. Copy the contents displayed in the Terminal to your clipboard.\nAdd the SSH key to your remote repository account.\n\n\n\n\n\n\nUpload your local repository to a remote repository\n\nCreate an empty repository on the remote repository hosting platform, for example GitHub or GitLab. Make sure to not initialize the repository with any files!\nIf needed, navigate to your project repository using the command line.\nSet the remote URL of your local repository to your remote repository.\nPush the changes on your default branch (main or master) to your remote repository.\n\n\n\n\n\n\n\nSolutions\n\n\n\n\n\nUpload your local repository to a remote repository\n\n\n\nCode\n\n#!/bin/bash\n\n# create an empty remote repository # &lt;1&gt;\ncd my-project # &lt;2&gt;\ngit remote add origin https://github.com/your-username/your-repo-name.git # &lt;3&gt;\ngit push -u origin main # &lt;4&gt;\n\n\n\nTo create an empty repository on GitHub: (1) Go to GitHub and click the + icon in the upper-right corner, then select New repository. (2) Name your repository. (3) Do not select Initialize this repository with a README. (4) Click Create repository.\nOptional: Navigate into the project repository using cd (or a similar path).\nSet the remote URL of the local repository to the repository using git remote add origin &lt;URL&gt;. Remember to use the correct &lt;URL&gt; depending on whether you authentication method (typically SSH or PAT).\nPush the changes on the default branch (here, main) to the remote repository using git push -u origin main.\n\n\n\n\n\n\nüöÄ Optional: Add a README.md\n\nFind the option to create a new file on your remote repository in the browser.\nName the file README.md, add a brief description, and provide a commit message.\nüöÄ Optional: Play around with Markdown syntax.\nSave the README.md file to the repository.\nPull the changes to your local repository.\n\n\n\n\n\n\n\nSolutions\n\n\n\n\n\n\nIn your browser, go to your remote repository (for example, on GitHub), click Add file, and select Create new file.\nName the file README.md. Add a brief description of your project. Provide a descriptive commit message at the bottom.\nPlay around with Markdown syntax\nClick the green Commit new file button to save the README.md file to the repository.\nUse git pull origin main to pull the changes to your local repository.\n\n\n\n\n\n\nüöÄ Optional: Clone and sync your repository\n\nMove to a location on your computer where you want to clone a repository.\nClone your remote repository to a different location on your computer.\nStage and commit changes in the new location (consider using a new branch).\nPush these new changes to GitHub.\nPull the changes to the repository in the original location.\nDelete your newly cloned repository.\n\n\n\n\n\n\n\nSolutions\n\n\n\n\n\n\n\n\nCode\n\n#!/bin/bash\n\ncd /new/location/for/repo # &lt;1&gt;\ngit clone https://github.com/your-username/your-repo-name.git /new/location/for/repo # &lt;2&gt;\ngit checkout -b new-branch # &lt;3&gt;\necho \"New Recipe\" &gt;&gt; recipes.txt # &lt;3&gt;\ngit add recipes.txt  # &lt;3&gt;\ngit commit -m \"Add new recipe to recipes.txt\" # &lt;3&gt;\ngit push -u origin new-branch # &lt;4&gt;\ncd /original/location/for/repo # &lt;5&gt;\ngit fetch # &lt;5&gt;\ngit switch new-branch # &lt;5&gt;\nrm -rf /new/location/for/repo # &lt;6&gt;\n\n\n\nMove to the location on your computer where you would like to clone your own repository into, using cd in the command line.\nClone your repository from GitHub to a different location on your computer.\nStage and commit changes in the new location (consider using a new branch).\nPush the new changes to GitHub.\nFetch these new changes to the repository in the original location.\nDelete your newly cloned repository."
  },
  {
    "objectID": "sessions/session08.html#slides",
    "href": "sessions/session08.html#slides",
    "title": "Remotes - Intro",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session08.html#cheatsheet",
    "href": "sessions/session08.html#cheatsheet",
    "title": "Remotes - Intro",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit remote\nManages remote repositories\n\n\ngit clone\nCreates a local copy of a repository\n\n\ngit pull\nFetches and merges the latest changes from a remote repository into the current branch\n\n\ngit fetch\nUpdates remote tracking branches\n\n\ngit push\nUploads local commits to a remote repository"
  },
  {
    "objectID": "sessions/session08.html#email",
    "href": "sessions/session08.html#email",
    "title": "Remotes - Intro",
    "section": "Email",
    "text": "Email\nDear course participants,\nWe have a last-minute preparation request for our seminar today (sorry, for the short notice, it will only take a few minutes):\nPlease ensure you have a working GitHub account before our next session tomorrow. If you do not have one yet, please create an account at https://github.com/. If you need help, check out the section ‚ÄúCreating an account‚Äù in the Version Control Book: https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html#creating-an-account.\nIf you encounter any issues or have any questions, feel free to contact us via email.\nWe look forward to seeing you later!\nBest wishes,\nLennart Wittkuhn (Instructor) & Reza Hakimazar (Teaching Assistant)"
  },
  {
    "objectID": "sessions/session11.html",
    "href": "sessions/session11.html",
    "title": "Git(Hub) with the world",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: GitHub - Advanced\n  \n  \n    \n     Chapter: Issues\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session11.html#learning-objectives",
    "href": "sessions/session11.html#learning-objectives",
    "title": "Git(Hub) with the world",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nGitHub Advanced\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch.\n\n\nIssues\nüí° You understand the purpose of GitHub Issues. üí° You can create and manage Issues. üí° You can reference an Issue in another issue. üí° You can close an Issue with a commit or pull request."
  },
  {
    "objectID": "sessions/session11.html#var-course.project-project",
    "href": "sessions/session11.html#var-course.project-project",
    "title": "Git(Hub) with the world",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou contributed successfully to a public project by adding and committing changes to a forked repository.\nYou created and reviewed a pull request to integrate new content from a fork.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session11.html#exercises",
    "href": "sessions/session11.html#exercises",
    "title": "Git(Hub) with the world",
    "section": "Exercises",
    "text": "Exercises\n\n‚ÄúPublic‚Äù collaboration with pull requests (using a fork and GitHub Flow)\n\nFind out what forking is.\nFork the project repository of the course instructor or another course participant (ideally, someone who is not your collaborator from the previous exercise).\nCreate an Issue in your new collaborator‚Äôs repository, indicating an entry that you think is still missing in their repository.\nRepeat the steps from the exercise on collaboration with remote repositories using the forked repository:\n\nClone the forked repository to a sensible location on your computer.\nCreate a new branch and make one or multiple commits ‚Äúfixing‚Äù the Issue that you opened. If available, follow the contributing guide of your collaborator‚Äôs repository.\nPush your changes to the remote repository.\nCreate a pull/merge request with your changes (hint: from the forked to the original repository) and refer to the Issue in your pull/merge request."
  },
  {
    "objectID": "sessions/session11.html#slides",
    "href": "sessions/session11.html#slides",
    "title": "Git(Hub) with the world",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/slides_session03.html#schedule",
    "href": "sessions/slides_session03.html#schedule",
    "title": "Session 3: First steps with Git",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session03.html#last-session-the-command-line-1",
    "href": "sessions/slides_session03.html#last-session-the-command-line-1",
    "title": "Session 3: First steps with Git",
    "section": "Last session: The command line",
    "text": "Last session: The command line\n\nSource: Wikimedia Commons (free license)"
  },
  {
    "objectID": "sessions/slides_session03.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session03.html#last-sessions-learning-objectives",
    "title": "Session 3: First steps with Git",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nAfter the last session, you should now be able to answer the following questions / do the following:\nüí° You can navigate directories using the command line. üí° You can use shortcuts like the tilde or dots to navigate your file system. üí° You can explain the difference between absolute and relative paths. üí° You can use arguments and flags to modify command-line commands. üí° You understand the concept of wild cards (*) and can use it for system navigation.\n\n\ncity-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou used the command line to create a folder on your computer called city-guide.\nYou used the command line to create a file called city-guide.txt inside the city-guide folder.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session03.html#reading",
    "href": "sessions/slides_session03.html#reading",
    "title": "Session 3: First steps with Git",
    "section": "Reading",
    "text": "Reading\n ‚ÄúSetup‚Äù and ‚ÄúFirst steps with Git‚Äù"
  },
  {
    "objectID": "sessions/slides_session03.html#learning-objectives",
    "href": "sessions/slides_session03.html#learning-objectives",
    "title": "Session 3: First steps with Git",
    "section": "Learning objectives",
    "text": "Learning objectives\n\n\nSetup\nüí° You know how to set up Git for the first time üí° You have set up Git on your computer üí° You understand the difference between the three Git configuration levels üí° You know how to configure your username and email address in Git üí° You have set up your preferred text editor when working with Git üí° You can escape the command-line text editor Vim\n\n\n\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description.\n\n\nNote: These are the learning objectives for this and next week."
  },
  {
    "objectID": "sessions/slides_session03.html#tasks",
    "href": "sessions/slides_session03.html#tasks",
    "title": "Session 3: First steps with Git",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúSetup‚Äù and ‚ÄúFirst steps with Git‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session03.html#var-course.project-project-1",
    "href": "sessions/slides_session03.html#var-course.project-project-1",
    "title": "Session 3: First steps with Git",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou set up Git.\nYou initialized your city-guide folder as a Git repository.\nYou committed your first file to the city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your favorite cultural place (e.g., museum, art gallery, cultural center)\nAdd the recommendation of your partner to your text file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session03.html#conversation-starter",
    "href": "sessions/slides_session03.html#conversation-starter",
    "title": "Session 3: First steps with Git",
    "section": "Conversation starter",
    "text": "Conversation starter\n\n\n\nYour name?\nAre you based in Hamburg or Rotterdam?\nA (fun) fact about you? For example:\n\nWhat did you study before and where?\nWhat do you expect from this course?\nWhat‚Äôs your hobby?\nDo you have a pet?\nWhat‚Äôs your favorite color?\nYour mood on a cat scale?"
  },
  {
    "objectID": "sessions/slides_session03.html#exercises",
    "href": "sessions/slides_session03.html#exercises",
    "title": "Session 3: First steps with Git",
    "section": "Exercises",
    "text": "Exercises\nConfigure Git\n\nIf needed, navigate into the project folder using the command line.\nSet your Git username.\nSet your Git email address.\nChange the default name of the initial branch to main\nüöÄ Optional: Change your default text editor.\nList the Git configuration settings.\n\nInitialize a Git repository\n\nIf needed, navigate to the project folder using the command line.\nInitialize a new Git repository in the project folder.\n\nAdd content and commit changes\n\nCreate a new text file and name it appropriately.\nAdd a short entry to the text file (any favorite or an intriguing AI-generated one).\nStage the new file.\nCommit the changes in the text file with a descriptive commit message.\n\nüöÄ Optional: Commit at least three additional changes in your new file.\n\nNote: There are several terms in these instructions that might still be unfamiliar to you, for example ‚Äúrepository‚Äù, ‚Äústage‚Äù or ‚Äúcommit‚Äù. Don‚Äôt worry, you will learn about what these terms mean in the chapters."
  },
  {
    "objectID": "sessions/slides_session03.html#solutions-setup",
    "href": "sessions/slides_session03.html#solutions-setup",
    "title": "Session 3: First steps with Git",
    "section": "Solutions: Setup",
    "text": "Solutions: Setup\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\ngit config --global user.name \"Your Name\" # &lt;2&gt;\ngit config --global user.email \"your.email@example.com\" # &lt;3&gt;\ngit config --global init.defaultBranch main # &lt;4&gt;\ngit config --global core.editor \"vim\" # &lt;5&gt;\ngit config --list # &lt;6&gt;\n\n\n\nOptional: Use cd (in combination with absolute or relative paths) to navigate into the project subfolder.\nSet your global Git username using git config --global user.name \"Your Name\". Replace Your Name with your name and don‚Äôt remove the quotation marks.\nSet your global Git email address using git config --global user.email \"your.email@example.com\". Replace your.email@example.com with your email address and don‚Äôt remove the quotation marks.\nChange the default name of the initial branch to main using git config --global init.defaultBranch main.\nOptional: Change your default text editor. In this example, the default text editor is changed to Vim using git config --global core.editor \"vim\".\nList the Git configuration."
  },
  {
    "objectID": "sessions/slides_session03.html#solutions-first-steps-with-git",
    "href": "sessions/slides_session03.html#solutions-first-steps-with-git",
    "title": "Session 3: First steps with Git",
    "section": "Solutions: First steps with Git",
    "text": "Solutions: First steps with Git\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\ngit init # &lt;2&gt;\ntouch city-guide.txt # &lt;3&gt;\ncat &gt; city-guide.txt &lt;&lt;- EOM # &lt;4&gt;\nHamburg Planetarium\n\n- It is one of the world's oldest, and one of Europe's most visited planetariums.\n- It is located in the district of Winterhude, Hamburg, Germany.\nEOM\ngit add city-guide.txt # &lt;5&gt;\ngit commit -m \"Add Hamburg Planetarium to city-guide.txt\" # &lt;6&gt;\n\n\n\nIf needed, navigate into the city-guide subfolder using cd city-guide (or a similar path).\nInitialize a new Git repository in the city-guide folder using git init.\nCreate a new file called city-guide.txt using touch. Note that you can also use a regular text editor to do this.\nAdd a short entry to city-guide.txt. In this example, cat is used to add text to city-guide.txt. This command would also create the file if city-guide.txt wouldn‚Äôt exist yet. Note that you can also use a regular text editor to do this.\nStage the new city-guide.txt file using git add.\nCommit the changes in city-guide.txt with a descriptive commit message using git commit.\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/session10.html",
    "href": "sessions/session10.html",
    "title": "Repetition & Practice",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: GitHub - Advanced\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session10.html#learning-objectives",
    "href": "sessions/session10.html#learning-objectives",
    "title": "Repetition & Practice",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch."
  },
  {
    "objectID": "sessions/session10.html#var-course.project-project",
    "href": "sessions/session10.html#var-course.project-project",
    "title": "Repetition & Practice",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou collaborated successfully on a shared project by adding and committing changes to a partner‚Äôs repository.\nYou created and reviewed a pull request to integrate new content from a partner.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session10.html#exercises",
    "href": "sessions/session10.html#exercises",
    "title": "Repetition & Practice",
    "section": "Exercises",
    "text": "Exercises\n\n‚ÄúPrivate‚Äù collaboration with pull requests (using GitHub Flow)\n\nAdd your exercise partner as a collaborator to your project repository on GitHub.\nClone your partner‚Äôs repository.\nCreate a new branch in your collaborator‚Äôs repository.\nAdd a new entry to your collaborator‚Äôs project file (e.g., .txt or .qmd (if you are unsure, where to add the entry, ask your collaborator!)\nAdd and commit the changes.\nPush the changes on the new branch to the remote repository.\nCreate a Pull Request (on GitLab: Merge Request).\nReview the Pull Request that your collaborator made in your repository.\nüöÄ Optional: Add additional changes on the branch pushed by your collaborator.\nMerge the pull request into your repository.\n\n\n\n\nAdd a README.md\n\nFind the option to create a new file on your remote repository in the browser.\nName the file README.md, add a brief description, and provide a commit message.\nüöÄ Optional: Play around with Markdown syntax.\nSave the README.md file to the repository.\nPull the changes to your local repository."
  },
  {
    "objectID": "sessions/session10.html#slides",
    "href": "sessions/session10.html#slides",
    "title": "Repetition & Practice",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session10.html#cheatsheet",
    "href": "sessions/session10.html#cheatsheet",
    "title": "Repetition & Practice",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit blame\nShows the authorship and commit information of each line in a file"
  },
  {
    "objectID": "sessions/slides_session02.html#schedule",
    "href": "sessions/slides_session02.html#schedule",
    "title": "Session 2: Basics of the Command Line",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session02.html#last-weeks-learning-objectives",
    "href": "sessions/slides_session02.html#last-weeks-learning-objectives",
    "title": "Session 2: Basics of the Command Line",
    "section": "Last week‚Äôs learning objectives",
    "text": "Last week‚Äôs learning objectives\nAfter the last session, you should now be able to answer the following questions:\nüí° You know what version control is. üí° You can argue why version control is useful (for research). üí° You can name benefits of Git compared to other approaches to version control. üí° You can explain the difference between Git and GitHub.\n\n\nAny questions?"
  },
  {
    "objectID": "sessions/slides_session02.html#homework",
    "href": "sessions/slides_session02.html#homework",
    "title": "Session 2: Basics of the Command Line",
    "section": "Homework",
    "text": "Homework\n\n\n1. Check if you have Git / a command line installed\n\n\nWindows Users \n\nDownload and install Git for Windows\nYou can find a tutorial in the Version Control Book\n\n\nApple  or Linux Users \n\nDownload and install Git (might already be installed)\nYou can find a tutorial in our Version Control Book"
  },
  {
    "objectID": "sessions/slides_session02.html#pair-programming-variant",
    "href": "sessions/slides_session02.html#pair-programming-variant",
    "title": "Session 2: Basics of the Command Line",
    "section": "Pair Programming (variant)",
    "text": "Pair Programming (variant)\n\n\n\nWe will assign you to Zoom breakout rooms\nIntroduce yourself to your partner (see conversation starters on later slide)\nComplete the exercises together\nHelp each other out\nLennart and Reza will move between breakout rooms to offer help\nSend a message in the chat to Lennart or Reza if you need help\nWe will meet again in the main room about 10 minutes before the end of the session to discuss any remaining questions in the group.\n\n\n\n\n\nThis illustration is created by Scriberia with The Turing Way community. Used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807"
  },
  {
    "objectID": "sessions/slides_session02.html#course-exercise-building-an-online-var-course.project-book",
    "href": "sessions/slides_session02.html#course-exercise-building-an-online-var-course.project-book",
    "title": "Session 2: Basics of the Command Line",
    "section": "Course exercise: Building an online city-guide book",
    "text": "Course exercise: Building an online city-guide book\n https://lennartwittkuhn.com/city-guide/"
  },
  {
    "objectID": "sessions/slides_session02.html#this-session-meta-session-title",
    "href": "sessions/slides_session02.html#this-session-meta-session-title",
    "title": "Session 2: Basics of the Command Line",
    "section": "This session: Basics of the Command Line",
    "text": "This session: Basics of the Command Line\n\nSource: Wikimedia Commons (free license)"
  },
  {
    "objectID": "sessions/slides_session02.html#learning-objectives",
    "href": "sessions/slides_session02.html#learning-objectives",
    "title": "Session 2: Basics of the Command Line",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You can navigate directories using the command line. üí° You can use shortcuts like the tilde or dots to navigate your file system. üí° You can explain the difference between absolute and relative paths. üí° You can use arguments and flags to modify command-line commands. üí° You understand the concept of wild cards (*) and can use it for system navigation."
  },
  {
    "objectID": "sessions/slides_session02.html#reading",
    "href": "sessions/slides_session02.html#reading",
    "title": "Session 2: Basics of the Command Line",
    "section": "Reading",
    "text": "Reading\n Command Line"
  },
  {
    "objectID": "sessions/slides_session02.html#cheatsheet",
    "href": "sessions/slides_session02.html#cheatsheet",
    "title": "Session 2: Basics of the Command Line",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\npwd\nDisplays the path of the current working directory\n\n\ncd &lt;PATH&gt;\nChanges the current working directory to &lt;PATH&gt;\n\n\ncd ~\nChanges the current working directory to the user‚Äôs home directory\n\n\ncd ..\nMoves up one folder\n\n\ncd ../..\nMoves up two folders\n\n\nclear\nClears the contents of your command line window\n\n\nls\nLists files and folders in the current working directory\n\n\nls &lt;PATH&gt;\nLists files and folders in &lt;PATH&gt;\n\n\nls -a\nLists all files (including hidden files) in the current working directory\n\n\nls -alh\nLists all files in a long format that is easy to read for humans\n\n\n[Command] --help\nDisplays all possible flags for a specific command (on Windows)\n\n\nman [Command]\nDisplays all possible flags for a specific command (on macOS)\n\n\nmkdir &lt;FOLDER&gt;\nCreates a new folder called &lt;FOLDER&gt;\n\n\nmkdir &lt;FOLDER1&gt; &lt;FOLDER2&gt;\nCreates two separate folders called &lt;FOLDER1&gt; and &lt;FOLDER2&gt;\n\n\ntouch &lt;FILE&gt;\nCreates a new empty file called &lt;FILE&gt;\n\n\nopen &lt;FILE&gt;\nOpens the file called &lt;FILE&gt; (on macOS)\n\n\nstart &lt;FILE&gt;\nOpens the file called &lt;FILE&gt; (on Windows)\n\n\necho \"example text\" &gt;&gt; file.txt\nWrites ‚Äúexample text‚Äù into file.txt\n\n\ncat &lt;FILE&gt;\nDisplays the content of &lt;FILE&gt;\n\n\nmv FILE.txt &lt;FOLDER&gt;\nMove FILE.txt into &lt;FOLDER&gt;\n\n\nmv &lt;FOLDER_OLD&gt; &lt;FOLDER_NEW&gt;\nRenames &lt;FOLDER_OLD&gt; to &lt;FOLDER_NEW&gt;\n\n\nls -alh *.csv\nUses a wildcard to list all .csv files in the current working directory\n\n\nrm -r &lt;FOLDER&gt;\nRemoves the folder &lt;FOLDER&gt;\n\n\nhistory\nDisplay the command history of the current terminal session\n\n\nhistory &gt; history.txt\nSaves the entire command history to a file named history.txt (overwrites existing content in history.txt)\n\n\nhistory &gt;&gt; history.txt\nAdds the entire command history to the end of the file named history.txt\n\n\ntree\nDisplays a graphical representation of the directory structure\n\n\nwget &lt;URL&gt;\nDownloads a file from the specified  to the current directory"
  },
  {
    "objectID": "sessions/slides_session02.html#tasks",
    "href": "sessions/slides_session02.html#tasks",
    "title": "Session 2: Basics of the Command Line",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) Command Line in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session02.html#var-course.project-project",
    "href": "sessions/slides_session02.html#var-course.project-project",
    "title": "Session 2: Basics of the Command Line",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou used the command line to create a folder on your computer called city-guide.\nYou used the command line to create a file called city-guide.txt inside the city-guide folder.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session02.html#conversation-starter",
    "href": "sessions/slides_session02.html#conversation-starter",
    "title": "Session 2: Basics of the Command Line",
    "section": "Conversation starter",
    "text": "Conversation starter\n\n\n\nYour name?\nAre you based in Hamburg or Rotterdam?\nA (fun) fact about you? For example:\n\nWhat did you study before and where?\nWhat do you expect from this course?\nWhat‚Äôs your hobby?\nDo you have a pet?\nWhat‚Äôs your favorite color?\nYour mood on sheep scale?"
  },
  {
    "objectID": "sessions/slides_session02.html#exercises",
    "href": "sessions/slides_session02.html#exercises",
    "title": "Session 2: Basics of the Command Line",
    "section": "Exercises",
    "text": "Exercises\nNavigate the file system\nIdentify a folder on your computer where you (want to) keep course-related files. If you don‚Äôt have one, choose a suitable location in your file system.\n\nNavigate into the chosen location using the command line.\nUse the command line to display the path of your chosen folder. What is the output?\n\nCreate files and folders\n\nWithin your chosen folder, create a new subfolder and give it a relevant name.\nNavigate into the newly created subfolder.\nCreate a new text file and name it appropriately.\nConfirm that the files was created by listing the contents of the folder."
  },
  {
    "objectID": "sessions/slides_session02.html#solutions",
    "href": "sessions/slides_session02.html#solutions",
    "title": "Session 2: Basics of the Command Line",
    "section": "Solutions",
    "text": "Solutions\nNavigate the file system\n\n\n\nCode\n\ncd /path/to/your/chosen/directory # &lt;1&gt;\n\n\n\nNavigate into the chosen location. Replace /path/to/your/chosen/directory with a path on your computer. A good location might be within your /Documents folder or a dedicated /Projects or /University folder. This can help to easily find course-related files on your computer.\n\nCreate files and folders\n\n\n\nCode\n\n#!/bin/bash\n\npwd # &lt;2&gt;\nmkdir city-guide # &lt;3&gt;\ncd city-guide # &lt;4&gt;\ntouch city-guide.txt # &lt;5&gt;\nls # &lt;6&gt;\n\n\n\nUse pwd to display the path of your current working directory.\nUse mkdir to create a new subfolder and give it a name, within your chosen folder.\nUse cd to navigate into the newly created subfolder.\nUse touch to create a new file and name it appropriately.\nUse ls to confirm that the files was created by listing the contents of the folder.\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/session13.html",
    "href": "sessions/session13.html",
    "title": "Graphical User Interfaces",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: Graphical User Interfaces"
  },
  {
    "objectID": "sessions/session13.html#learning-objectives",
    "href": "sessions/session13.html#learning-objectives",
    "title": "Graphical User Interfaces",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You understand the benefits of Git GUIs compared to the command line üí° You can name at least two Git operations that can be considered easier in a GUI compared to the command line üí° You try out different GUIs and become familiar with their features üí° You know how to manage branches in a GUI"
  },
  {
    "objectID": "sessions/session13.html#slides",
    "href": "sessions/session13.html#slides",
    "title": "Graphical User Interfaces",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/project/project-remotes-intro.html",
    "href": "sessions/project/project-remotes-intro.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou created a new private(!) GitHub repository using SSH.\nYou set the remote URL of your local city-guide Git repository.\nYou uploaded (i.e., ‚Äúpushed‚Äù) the default branch (main or master) of your city-guide project to GitHub.\nYou invited Lennart (lnnrtwttkhn) and Reza (rezahakimazar) to your city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-github-forking.html",
    "href": "sessions/project/project-github-forking.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou contributed successfully to a public project by adding and committing changes to a forked repository.\nYou created and reviewed a pull request to integrate new content from a fork.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-cli.html",
    "href": "sessions/project/project-cli.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou used the command line to create a folder on your computer called city-guide.\nYou used the command line to create a file called city-guide.txt inside the city-guide folder.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-branches.html",
    "href": "sessions/project/project-branches.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou created a new branch and merged changes into your default branch (main or master).\nYou created and resolved a merge conflict.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session13.html#schedule",
    "href": "sessions/slides_session13.html#schedule",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session13.html#course-evaluation-1",
    "href": "sessions/slides_session13.html#course-evaluation-1",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Course evaluation",
    "text": "Course evaluation\n\nCheck your emails for the link to the evaluation form!\nBoth Hamburg and Rotterdam students can complete the evaluation.\nThe evaluation is also available in English (you can change the language at the top-right).\nOnce you are done, you can start working on today‚Äôs exercises (see later slide)."
  },
  {
    "objectID": "sessions/slides_session13.html#last-session-tags-releases-publication-1",
    "href": "sessions/slides_session13.html#last-session-tags-releases-publication-1",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Last session: Tags, Releases & Publication",
    "text": "Last session: Tags, Releases & Publication\n https://lennartwittkuhn.com/version-control-book/chapters/tags-and-releases.html"
  },
  {
    "objectID": "sessions/slides_session13.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session13.html#last-sessions-learning-objectives",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nüí° You understand why Git Tags matter in version control and project management. üí° You know the difference between lightweight and annotated tags and how to apply them. üí° You can push and pull tags to a remote repository (e.g., GitHub). üí° You understand how GitHub releases complement Git Tags. üí° You can use Zenodo to archive your repository and make your work citable."
  },
  {
    "objectID": "sessions/slides_session13.html#questions-about-the-last-session",
    "href": "sessions/slides_session13.html#questions-about-the-last-session",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Questions about the last session?",
    "text": "Questions about the last session?"
  },
  {
    "objectID": "sessions/slides_session13.html#from-session-1-your-role",
    "href": "sessions/slides_session13.html#from-session-1-your-role",
    "title": "Session 13: Graphical User Interfaces",
    "section": "From session 1: Your role",
    "text": "From session 1: Your role\n\n\nActive participation\n\nThis is a pass / fail course. You pass if you fulfill all course requirements:\nRequirement 1: Come to at least 12 out of 14 sessions (85%)\nRequirement 2: Complete all surveys/quizzes\nRequirement 3: Complete all mandatory exercises (implemented in Git)\n\n\n\n\nHow do we verify the course requirements?\n\nRequirement 1: Sign the attendance list\nRequirement 2: Provide a personal codeword. At the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor). We will send our secretary a list of personal codewords and she will return a list of names.\nRequirement 3: We check your GitHub repositories."
  },
  {
    "objectID": "sessions/slides_session13.html#your-tasks",
    "href": "sessions/slides_session13.html#your-tasks",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Your tasks",
    "text": "Your tasks\nIn order to pass this course, you should have accomplished the following tasks:\n\n\nYou have a public city-guide repository on GitHub (Sessions 03, 08, 12).\nYou added a text file (e.g., .qmd or .txt) with at least one city recommendation to the repository (Session 03).\nYou added a .gitignore file (ignoring a random file like an image) to the repository (Sessions 04, 05).\nYou created and merged a branch in your repository (Session 06).\nYou created a pull request in a partner‚Äôs repository, e.g., by adding a new recommendation (Sessions 09, 10).\nYou reviewed and merged the pull request of a partner in your city-guide repository (Sessions 09, 10).\nYou created an issue in Lennart‚Äôs city-guide repository, a pull request from a fork fixing the issue, you implemented all additional requests and your pull request was approved and merged by Lennart (Session 11).\nYou created a release of your city-guide repository on GitHub (Session 12).\nYou completed all quizzes (see next slide).\nYou completed the extra assignment (if necessary, see next slide)."
  },
  {
    "objectID": "sessions/slides_session13.html#quiz-participation",
    "href": "sessions/slides_session13.html#quiz-participation",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Quiz participation",
    "text": "Quiz participation\nIn order to pass this course, you should have completed all quizzes:\n\nIntro\nCommand Line\nGit Basics\nBranches\nGitHub\n\n\n\nHow to verify participation\n\nAt the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor), not to us!\nOur secretary sends us an unsorted list with codewords.\nWe verify the quiz participation for each codeword and send Christine a list with codewords that completed all quizzes.\nChristine compares the codewords with your names and send us an unsorted list with names."
  },
  {
    "objectID": "sessions/slides_session13.html#missed-more-than-two-sessions",
    "href": "sessions/slides_session13.html#missed-more-than-two-sessions",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Missed more than two sessions?",
    "text": "Missed more than two sessions?\nWe will send you an email with an extra assignment."
  },
  {
    "objectID": "sessions/slides_session13.html#graphical-user-interfaces-guis-for-git-1",
    "href": "sessions/slides_session13.html#graphical-user-interfaces-guis-for-git-1",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Graphical User Interfaces (GUIs) for Git",
    "text": "Graphical User Interfaces (GUIs) for Git\n\n\n\n\nIntegrated Development Environments (IDEs)\nRStudio\n\n\n\n\n\n\n\n\nMATLAB\n\n\n\n\n\n\n\n\n\nGit Clients\nGitKraken\n\n\n\n\n\n\n\n\nGitHub Desktop\n\n\n\n\n\n\n\n\n\nMobile\nWorking Copy (iOS)"
  },
  {
    "objectID": "sessions/slides_session13.html#learning-objectives",
    "href": "sessions/slides_session13.html#learning-objectives",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You understand the benefits of Git GUIs compared to the command line üí° You can name at least two Git operations that can be considered easier in a GUI compared to the command line üí° You try out different GUIs and become familiar with their features üí° You know how to manage branches in a GUI"
  },
  {
    "objectID": "sessions/slides_session13.html#reading",
    "href": "sessions/slides_session13.html#reading",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Reading",
    "text": "Reading\n ‚ÄúGraphical User Interfaces‚Äù"
  },
  {
    "objectID": "sessions/slides_session13.html#tasks",
    "href": "sessions/slides_session13.html#tasks",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúGraphical User Interfaces‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n\nAs always:\n\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session13.html#exercises",
    "href": "sessions/slides_session13.html#exercises",
    "title": "Session 13: Graphical User Interfaces",
    "section": "Exercises",
    "text": "Exercises\n\n\nOption 1: Complete the course requirements\n\nWe are here to help!\n\n\n\n\nOption 2: Collaborate with pull requests (using GUIs)\n\nFork your partner‚Äôs repository on GitHub.\nUsing a GUI, clone the forked repository.\nCreate and switch to a new branch.\nAdd a surprise recommendation to their city-guide repository.\nStage and commit the changes.\nCreate a Pull Request from the forked to the original repository.\nReview the Pull Request from your partner and create a coherent recipe.\nMerge the Pull Request that your partner created in your repository."
  },
  {
    "objectID": "sessions/session14.html",
    "href": "sessions/session14.html",
    "title": "Summary & Wrap-Up",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: GUIs"
  },
  {
    "objectID": "sessions/session14.html#learning-objectives",
    "href": "sessions/session14.html#learning-objectives",
    "title": "Summary & Wrap-Up",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You understand the benefits of Git GUIs compared to the command line üí° You can name at least two Git operations that can be considered easier in a GUI compared to the command line üí° You try out different GUIs and become familiar with their features üí° You know how to manage branches in a GUI"
  },
  {
    "objectID": "sessions/session14.html#slides",
    "href": "sessions/session14.html#slides",
    "title": "Summary & Wrap-Up",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session14.html#email",
    "href": "sessions/session14.html#email",
    "title": "Summary & Wrap-Up",
    "section": "Email",
    "text": "Email\nDear course participants,\nThank you for your participation in the course ‚ÄúTrack, organize and share your work: An introduction to Git for psychological research‚Äù. It was a pleasure for us teaching this course and we hope that you learned something useful. Following up on our last session yesterday, we have a few important announcements and tasks for you to complete:\nFirst, please make sure to complete the course evaluation using the following link:\nhttps://evasys-online.uni-hamburg.de/evasys/online.php?pswd=NWSWC\nYour feedback is very valuable to us and will help us to improve the course even further. Also, course evaluations are relevant for Lennart‚Äôs academic career, so you would do him a great favor. Thank you!\nSecond, please remember to complete all tasks relevant for passing the course, mainly completing the quizzes and all recipes repository tasks:\nRegarding the quizzes: Almost everyone has completed all the necessary quizzes. Attached to this email is a list of missing quizzes associated with each personal codeword. Note, that only the quizzes in bold text need to be completed to pass. If anything seems incorrect, please let us know immediately. Additionally, please remember to send our secretary (Christine Manor) an email with your personal codeword at sekretariat-luv.psych@uni-hamburg.de.\nRegarding the exercises: Most of you have also completed all implementation tasks in your own repository. Here is the list of required tasks again with instructions on how you can check if you have completed them or not:\n\nYou have a public recipes repository on GitHub.\nYou added a text file (e.g., .qmd or .txt) with at least one recipe to the repository.\nYou created a pull request in a partner‚Äôs repository (e.g., adding a new recipe).\nYou merged the pull request of a partner in your recipes repository.\nYou created a pull request in Lennart‚Äôs recipes repository, you implemented all additional requests and your pull request was merged by Lennart.\nYou implemented the changes suggested by Konrad in your recipes repository and closed the issue.\nYou created a release of your recipes repository on GitHub.\n\nWe will review your repositories in a week, and you will receive an email then if you have not already completed everything. Importantly, as mentioned during the seminar: Please don‚Äôt worry too much about the pass/fail requirements. We will make sure that everyone has had enough time and help to complete all these tasks.\nThird, for everyone who missed more than two sessions: You will receive a separate email with an additional task shortly that we ask you to complete to make up for any additional missed sessions. Completing this assignment is an extra task for you in order to pass the course requirements. We will continuously mark everyone as passed on Stine who completed all tasks.\nFinally, we really hope that you found the course useful and that you will have future opportunities to apply your new skills in a project. Using Git in a ‚Äúreal-world project‚Äù will bring new challenges but we promise that it will be immensely beneficial in the long run and an invaluable chance to further practice your Git skills. The Version Control Book and course website will stay online for the foreseeable future and we will continue developing these materials so you can always go back to these materials for later reference. Also, and we really mean this, always feel free to reach out to us if you have any further questions or problems using Git.\nThank you again for your participation in the course and enjoy the summer!\nBest wishes,\nLennart Wittkuhn (Instructor) & Konrad Pagenstedt (Teaching Assistant)"
  },
  {
    "objectID": "sessions/session14.html#email-2",
    "href": "sessions/session14.html#email-2",
    "title": "Summary & Wrap-Up",
    "section": "Email 2",
    "text": "Email 2\nDear ‚Ä¶ and ‚Ä¶ ,\nWe noticed that you have missed more than two sessions of our course ‚ÄúTrack, organize and share your work: An introduction to Git for psychological research‚Äù.\nTo meet the course requirements, we kindly ask you to complete an additional exercise:\nPlease work together to each add a recipe to your partner‚Äôs repository following GitHub Flow. Detailed instructions can be found in the slides for session 9 (Task 1) and session 10. We leave it up to you whether you add each other as collaborators to your repositories or use a fork. Please don‚Äôt forget to open an issue in your partner‚Äôs repository first and, ideally, close the issue by referencing it in your pull request or commit. The assignment is completed once your PR is merged.\nPlease complete this extra assignment together with the other requirements by the end of July.\nIf you encounter any issues or have any questions, feel free to contact us directly via email.\nBest wishes,\nLennart Wittkuhn (Instructor) & Konrad Pagenstedt (Teaching Assistant)"
  },
  {
    "objectID": "sessions/session02.html",
    "href": "sessions/session02.html",
    "title": "Command Line",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter\n  \n  \n    \n     Exercises"
  },
  {
    "objectID": "sessions/session02.html#this-session",
    "href": "sessions/session02.html#this-session",
    "title": "Command Line",
    "section": "This session",
    "text": "This session\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) Command Line in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session02.html#learning-objectives",
    "href": "sessions/session02.html#learning-objectives",
    "title": "Command Line",
    "section": "Learning objectives",
    "text": "Learning objectives\nAt the end of this session, you should be able to answer the following questions and / or achieve the following learning objectives:\nüí° You can navigate directories using the command line. üí° You can use shortcuts like the tilde or dots to navigate your file system. üí° You can explain the difference between absolute and relative paths. üí° You can use arguments and flags to modify command-line commands. üí° You understand the concept of wild cards (*) and can use it for system navigation."
  },
  {
    "objectID": "sessions/session02.html#var-course.project-project",
    "href": "sessions/session02.html#var-course.project-project",
    "title": "Command Line",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou used the command line to create a folder on your computer called city-guide.\nYou used the command line to create a file called city-guide.txt inside the city-guide folder.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session02.html#slides",
    "href": "sessions/session02.html#slides",
    "title": "Command Line",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session02.html#cheatsheet",
    "href": "sessions/session02.html#cheatsheet",
    "title": "Command Line",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\npwd\nDisplays the path of the current working directory\n\n\ncd &lt;PATH&gt;\nChanges the current working directory to &lt;PATH&gt;\n\n\ncd ~\nChanges the current working directory to the user‚Äôs home directory\n\n\ncd ..\nMoves up one folder\n\n\ncd ../..\nMoves up two folders\n\n\nclear\nClears the contents of your command line window\n\n\nls\nLists files and folders in the current working directory\n\n\nls &lt;PATH&gt;\nLists files and folders in &lt;PATH&gt;\n\n\nls -a\nLists all files (including hidden files) in the current working directory\n\n\nls -alh\nLists all files in a long format that is easy to read for humans\n\n\n[Command] --help\nDisplays all possible flags for a specific command (on Windows)\n\n\nman [Command]\nDisplays all possible flags for a specific command (on macOS)\n\n\nmkdir &lt;FOLDER&gt;\nCreates a new folder called &lt;FOLDER&gt;\n\n\nmkdir &lt;FOLDER1&gt; &lt;FOLDER2&gt;\nCreates two separate folders called &lt;FOLDER1&gt; and &lt;FOLDER2&gt;\n\n\ntouch &lt;FILE&gt;\nCreates a new empty file called &lt;FILE&gt;\n\n\nopen &lt;FILE&gt;\nOpens the file called &lt;FILE&gt; (on macOS)\n\n\nstart &lt;FILE&gt;\nOpens the file called &lt;FILE&gt; (on Windows)\n\n\necho \"example text\" &gt;&gt; file.txt\nWrites ‚Äúexample text‚Äù into file.txt\n\n\ncat &lt;FILE&gt;\nDisplays the content of &lt;FILE&gt;\n\n\nmv FILE.txt &lt;FOLDER&gt;\nMove FILE.txt into &lt;FOLDER&gt;\n\n\nmv &lt;FOLDER_OLD&gt; &lt;FOLDER_NEW&gt;\nRenames &lt;FOLDER_OLD&gt; to &lt;FOLDER_NEW&gt;\n\n\nls -alh *.csv\nUses a wildcard to list all .csv files in the current working directory\n\n\nrm -r &lt;FOLDER&gt;\nRemoves the folder &lt;FOLDER&gt;\n\n\nhistory\nDisplay the command history of the current terminal session\n\n\nhistory &gt; history.txt\nSaves the entire command history to a file named history.txt (overwrites existing content in history.txt)\n\n\nhistory &gt;&gt; history.txt\nAdds the entire command history to the end of the file named history.txt\n\n\ntree\nDisplays a graphical representation of the directory structure\n\n\nwget &lt;URL&gt;\nDownloads a file from the specified  to the current directory"
  },
  {
    "objectID": "sessions/session01.html",
    "href": "sessions/session01.html",
    "title": "Introduction to Version Control",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter\n  \n  \n    \n     Exercises"
  },
  {
    "objectID": "sessions/session01.html#this-session",
    "href": "sessions/session01.html#this-session",
    "title": "Introduction to Version Control",
    "section": "This session",
    "text": "This session\nIn this session, you will complete the following tasks:\n\nComplete the pre-course survey.\nRead the chapter ‚ÄúIntroduction‚Äù of the Version Control Book.\nCheck whether you have achieved the learning objectives.\nAfter the session: complete the homework."
  },
  {
    "objectID": "sessions/session01.html#homework",
    "href": "sessions/session01.html#homework",
    "title": "Introduction to Version Control",
    "section": "Homework",
    "text": "Homework\nCheck if you have Git and / or a command line installed. For detailed instructions for Windows and macOS users, see the chapter ‚ÄúInstallation‚Äù of the Version Control Book."
  },
  {
    "objectID": "sessions/session01.html#learning-objectives",
    "href": "sessions/session01.html#learning-objectives",
    "title": "Introduction to Version Control",
    "section": "Learning objectives",
    "text": "Learning objectives\nAt the end of this session, you should be able to answer the following questions and / or achieve the following learning objectives:\nüí° You know what version control is. üí° You can argue why version control is useful (for research). üí° You can name benefits of Git compared to other approaches to version control. üí° You can explain the difference between Git and GitHub."
  },
  {
    "objectID": "sessions/session01.html#slides",
    "href": "sessions/session01.html#slides",
    "title": "Introduction to Version Control",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session01.html#email",
    "href": "sessions/session01.html#email",
    "title": "Introduction to Version Control",
    "section": "Email",
    "text": "Email\nDear course participant,\nYou are receiving this email because you have signed up for the course ‚ÄúTrack, organize and share your work: An introduction to Git for research‚Äù, taking place this Winter semester 2024/25 (October to January), Fridays, 10:15 - 11:45 (90 Minutes), at University of Hamburg & Erasmus University Rotterdam. We are excited that you have signed up for this course and can‚Äôt wait to delve into the world of version control with you! Our first session takes place next Friday, October 18, 2024, from 10:15 to 11:45 online via Zoom (see access details below).\nCompared to previous versions of this course, which were held in person at the University of Hamburg, this semester‚Äôs course is special. Supported by funding from the International Office at the University of Hamburg, this course will take place fully online, with participants from both the University of Hamburg and our partner institution, Erasmus University Rotterdam. Students from both universities, Hamburg and Rotterdam, will come together in this online course, thereby not only having the opportunity to learn about effective version control and collaboration with Git but also getting to know each other and strengthening the intercultural and academic exchange between the partner institutions. In order to tailor the course to your prior experience and needs, we have prepared a survey with a few questions. Please complete the survey before our first session, ideally by Thursday evening (October 17, 2024). This will give us enough time to review your responses before our first session on Friday. In total, the survey should take about 20 minutes (not much longer).\nThe survey can be accessed here: https://version-control-intro.formr.org\nA few technical remarks about the survey: The survey will ask you for two codewords: a personal codeword and a course codeword.\nThe personal codeword is used to associate your responses with a unique identifier. This will allow us to identify and relate your responses across all surveys used in the course while ensuring anonymity. By providing a personal codeword, you will allow us to draw more detailed insights from your responses that will help us improve the course for you. The survey will contain an explanation at the beginning on how to generate your personal codeword. For students at University of Hamburg: The surveys are part of your mandatory course work. We will later use your personal codeword to confirm the completion of all mandatory surveys. More details about this procedure will be shared in our first course session.\nThe course codeword is used to tag your responses as coming from a course participant at University of Hamburg & Erasmus University Rotterdam. We might also use the survey to collect responses from participants in other course settings. The course codeword therefore allows us to distinguish responses from different course settings.\nThe course codeword is: -------- (course password will be announced during the course).\nPlease note that you might be asked for the codewords repeatedly. This is not an error in the survey but the result of combining separate smaller surveys into a longer one. If this happens, please just enter the personal and course codeword again.\nFurther information about the course can be found on our course website: https://lennartwittkuhn.com/version-control-course-uhh-eur-ws24.\nIf you have any questions, feel free to contact us directly via email.\nWe are looking forward to seeing you for the first session on Monday!\nBest wishes,\nLennart Wittkuhn (Instructor) & Ana Martinovici (Teaching Collaborator)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Track, organize and share your work: An introduction to Git for research",
    "section": "",
    "text": "Welcome!\nThis is the website for the full-semester course ‚ÄúTrack, organize and share your work: An introduction to Git for research‚Äù at University of Hamburg & Erasmus University Rotterdam, instructed by Dr.¬†Lennart Wittkuhn.\n\n What? A full-semester course about version control and collaboration in psychological research with Git\n When? Winter 2024/25 (Oct-Jan), Fridays, 10:15 - 11:45\n Where? University of Hamburg & Erasmus University Rotterdam (Online, Zoom)\n Who? Master‚Äôs and PhD students\n How? Read about how this course will work\n\n Code? Find all source code on GitHub!\n Bug? Open an issue or send an email!\n Questions? Open an issue or send an email!\n Thanks! Thanks to our supporters!\n\n\nThe illustration on this website is created by Scriberia with The Turing Way community. Used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807"
  },
  {
    "objectID": "implementation.html",
    "href": "implementation.html",
    "title": "Implementation",
    "section": "",
    "text": "In the Supporting Information S2 ‚ÄúTips for course organizers‚Äù of their article ‚ÄúTen simple rules for implementing open and reproducible research practices after attending a training course‚Äù (License: CC BY 4.0), Heise et al. (2023) outline actions that course organizers can take to prepare and support course participants in implementing what they have learned once they return to their research environment."
  },
  {
    "objectID": "implementation.html#when-designing-a-course",
    "href": "implementation.html#when-designing-a-course",
    "title": "Implementation",
    "section": "When designing a course",
    "text": "When designing a course\n\n1. Consider participants‚Äô background and research type when designing materials.\n\n\n2. Cover a range of topics in your course.\n\n\n3. Talk about top-down robust research policies.\n\n\n4. Include information on ‚Äúsoft skills‚Äù related to behavioral change in research groups.\n\n\n5. Give participants time to start implementing practices.\n\n\n6. Consider offering a series of sessions, instead of covering many topics in a short period of time."
  },
  {
    "objectID": "implementation.html#when-participants-return-to-their-own-research-environments",
    "href": "implementation.html#when-participants-return-to-their-own-research-environments",
    "title": "Implementation",
    "section": "When participants return to their own research environments",
    "text": "When participants return to their own research environments\n\n1. Make your teaching materials and resources open and reusable.\n\n\n2. Create (and support) communities.\n\n\n3. Support implementation.\n\n\n4. Consider follow-up events"
  },
  {
    "objectID": "implementation.html#references",
    "href": "implementation.html#references",
    "title": "Implementation",
    "section": "References",
    "text": "References\n\n\nHeise, V., Holman, C., Lo, H., Lyras, E. M., Adkins, M. C., Aquino, M. R. J., Bougioukas, K. I., Bray, K. O., Gajos, M., Guo, X., Hartling, C., Huerta-Gutierrez, R., Jindrov√°, M., Kenney, J. P. M., Kƒôpi≈Ñska, A. P., Kneller, L., Lopez-Rodriguez, E., M√ºhlensiepen, F., Richards, A., ‚Ä¶ Weissgerber, T. L. (2023). Ten simple rules for implementing open and reproducible research practices after attending a training course. PLOS Computational Biology, 19(1), e1010750. https://doi.org/10.1371/journal.pcbi.1010750. License: CC BY 4.0."
  },
  {
    "objectID": "code-of-conduct.html",
    "href": "code-of-conduct.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "During this course, we want to ensure a safe, productive, and welcoming environment for everyone who attends. All participants and speakers are expected to abide by this code of conduct. We do not tolerate any form of discrimination or harassment in any form or by any means. If you experience harassment or hear of any incidents of unacceptable behavior, please reach out to the course instructor, Lennart Wittkuhn (lennart.wittkuhn@uni-hamburg.de), so that we can take the appropriate action.\nUnacceptable behavior is defined as:\n\nHarassment, intimidation, or discrimination in any form, verbal abuse of any attendee, speaker, or other person. Examples include, but are not limited to, verbal comments related to gender, sexual orientation, disability, physical appearance, body size, race, religion, national origin, inappropriate use of nudity and/or sexual images in public spaces or in presentations, or threatening or stalking.\nDisruption of presentations throughout the course. We ask all participants to comply to the instructions of the speaker with regard to dedicated discussion space and time.\nParticipants should not take pictures of any activity in the course room without asking all involved participants for consent and receiving this consent.\n\nA first violation of this code of conduct will result in a warning, and subsequent violations by the same person can result in the immediate removal from the course without further warning. The organizers also reserve the right to prohibit attendance of excluded participants from similar future workshops, courses or meetings they organize."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "What? This is the course website for the full-semester course ‚ÄúTrack, organize and share your work: An introduction to Git for research‚Äù\n When? Winter 2024/25 (October to January), every Friday, 10:15 to 11:45 (detailed schedule)\n Where? University of Hamburg & Erasmus University Rotterdam (Online, Zoom)\n Who? This course is offered to Master‚Äôs and PhD students at University of Hamburg & Erasmus University Rotterdam.\n How? Read more about how the course will work."
  },
  {
    "objectID": "about.html#overview",
    "href": "about.html#overview",
    "title": "About",
    "section": "",
    "text": "What? This is the course website for the full-semester course ‚ÄúTrack, organize and share your work: An introduction to Git for research‚Äù\n When? Winter 2024/25 (October to January), every Friday, 10:15 to 11:45 (detailed schedule)\n Where? University of Hamburg & Erasmus University Rotterdam (Online, Zoom)\n Who? This course is offered to Master‚Äôs and PhD students at University of Hamburg & Erasmus University Rotterdam.\n How? Read more about how the course will work."
  },
  {
    "objectID": "about.html#description",
    "href": "about.html#description",
    "title": "About",
    "section": "Description",
    "text": "Description\n\n\n\n\n\n\nSame information as on Stine\n\n\n\nFor course participants enrolled at University of Hamburg: The information provided in this section are the same as on Stine.\n\n\n\nContent\nIn today‚Äôs digital age, the majority of scientific insights in quantitative research are gained from the analysis of data using programming code. Although data and code are integral parts of their work, scientists often handle digital objects on their computers in a somewhat chaotic, unreliable, and irreproducible manner. It‚Äôs not uncommon to hear researchers wondering, ‚ÄúWhich version of my data and code did I use to get this result?‚Äù or ‚ÄúI found a bug in my code. Since when was it there?‚Äù and ‚ÄúThis code used to work! What did I change?‚Äù. This not only affects the reproducibility and trustworthiness of science but also frequently leads to frustration, a waste of time, and, at worst, the loss of painstakingly accumulated work. The good news is that scientists can learn about practices and tools from other disciplines, particularly software engineering, that have significantly professionalized collaborative work on digital objects like programming code. At the core of this toolkit is the free and open-source software Git, a so-called version control system that allows tracking and organizing the evolution of digital objects on computers and sharing them via platforms like GitHub. In this hands-on course with practical exercises, participants will learn how to track, organize and share their work using Git.\n\n\nGoals\nThe main goal of this course is to empower students with the skills to efficiently organize projects on their computers using Git and GitHub. Participants will actively engage in hands-on experiences with these tools, exploring both the command-line and Graphical User Interfaces. Proficiency in Git and GitHub not only enhances students‚Äô effectiveness in conducting research projects by ensuring organized and reproducible workflows but also elevates their employability. The technical skills acquired in this course are increasingly sought after in various work settings, providing students with a competitive edge in today‚Äôs dynamic job market.\n\n\nMechanics\nThis course is an international teaching collaboration between the University of Hamburg and Erasmus University Rotterdam. Course participants from both sites will interact online (via Zoom) and work together on the course exercises. This course is therefore also aimed at fostering intercultural exchange among the course participants from both institutions. Guided by the seminar instructor, course participants will receive input while working through a dedicated Git Handbook (https://lennartwittkuhn.com/version-control-book/) that is tuned to the structure of the course and needs of the course participants, as well as engaging in practical hands-on exercises with Git and GitHub.\n\n\nLiterature\nThe main textbook for this course is the ‚ÄúVersion Control Book‚Äù (https://lennartwittkuhn.com/version-control-book/) that is developed for this course. The reading materials relevant for each session will be announced in the respective session.\n\n\nExamination\nThis is a pass/fail course. Course participants pass if they fulfill all course requirements:\n\nActive participation in at least 12 out of 14 course sessions (~ 85%)\nCompletion of all surveys and quizzes throughout the course\nCompletion of all mandatory exercises (implemented in Git) throughout the course\n\nFurther details will be announced in the first course session."
  },
  {
    "objectID": "acknowledgements.html",
    "href": "acknowledgements.html",
    "title": "Acknowledgements & Attribution",
    "section": "",
    "text": "This project is currently funded by the Federal Ministry of Education and Research (BMBF) and the Free and Hanseatic City of Hamburg under the Excellence Strategy of the Federal Government and the L√§nder as part of the International Teaching and Learning Formats (ILLF@home) program at University of Hamburg. Our ILLF@home project proposal can be found here.\nThe project was previously funded by the Digital and Data Literacy in Teaching Lab (DDLitLab), an initiative by the ISA-Zentrum at the University of Hamburg. The Digital and Data Literacy in Teaching Lab program is in turn funded by the Stiftung Innovation in der Hochschullehre (details can be found here). Our DDLitLab project proposal can be found here (in German). Special thanks to Carolin Scharfenberg as well as Moritz Kreinsen and S√∂ren-Kristian Berger for help with project coordination, administration, and the grant application process."
  },
  {
    "objectID": "acknowledgements.html#funding",
    "href": "acknowledgements.html#funding",
    "title": "Acknowledgements & Attribution",
    "section": "",
    "text": "This project is currently funded by the Federal Ministry of Education and Research (BMBF) and the Free and Hanseatic City of Hamburg under the Excellence Strategy of the Federal Government and the L√§nder as part of the International Teaching and Learning Formats (ILLF@home) program at University of Hamburg. Our ILLF@home project proposal can be found here.\nThe project was previously funded by the Digital and Data Literacy in Teaching Lab (DDLitLab), an initiative by the ISA-Zentrum at the University of Hamburg. The Digital and Data Literacy in Teaching Lab program is in turn funded by the Stiftung Innovation in der Hochschullehre (details can be found here). Our DDLitLab project proposal can be found here (in German). Special thanks to Carolin Scharfenberg as well as Moritz Kreinsen and S√∂ren-Kristian Berger for help with project coordination, administration, and the grant application process."
  },
  {
    "objectID": "acknowledgements.html#website",
    "href": "acknowledgements.html#website",
    "title": "Acknowledgements & Attribution",
    "section": "Website",
    "text": "Website\n\nCode\nThis website is made with üñ§ and Quarto.\nThe source code for this website can be found on GitHub .\n\n\nImages\nImages are stored on Nextcloud (UHH Cloud). They can be retrieved using make images.\n\n\nClick here to view the full Makefile of this project.\n\n\n\n\nMakefile\n\nIMAGES_URL=https://cloud.uni-hamburg.de/s/ZndexSjSH9ZqxTG/download\nIMAGES_ARCHIVE=version-control-course.zip\nIMAGES_DIR=images/\nCHEATSHEET_URL=https://raw.githubusercontent.com/lnnrtwttkhn/version-control-book/main/cheatsheet.json\n\n.PHONY: preview\npreview:\n    quarto preview\n\n.PHONY: render\nrender: clean images\n    quarto render\n\n.PHONY: deploy\ndeploy: clean images\n    quarto publish gh-pages\n\n.PHONY: images\nimages:\n    wget $(IMAGES_URL) -O $(IMAGES_ARCHIVE)\n    unzip -j -o $(IMAGES_ARCHIVE) -d $(IMAGES_DIR)\n    rm -f $(IMAGES_ARCHIVE)\n\n.PHONY: objectives\nobjectives: objectives.txt\n    rm -rf ./objectives\n    mkdir -p objectives\n    wget -P ./objectives -i objectives.txt  \n\n.PHONY: exercises\nexercises: exercises.txt\n    rm -rf ./exercises\n    mkdir -p exercises\n    wget -P ./exercises -i exercises.txt \n\n.PHONY: cheatsheet\ncheatsheet:\n    rm -rf cheatsheet.json\n    wget $(CHEATSHEET_URL)\n\n.PHONY: clean\nclean:\n    rm -rf _site $(IMAGES_DIR)*\n\n\n\nThe illustration on the homepage is an illustration created by Scriberia with The Turing Way community. It is used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807.\n\n\nFont\nThis website uses the Atkinson Hyperlegible font. Copyright ¬© 2020, Braille Institute of America, Inc., https://www.brailleinstitute.org/freefont with Reserved Typeface Name Atkinson Hyperlegible Font. Details of the license can be found here.\n\n\nAnalytics\nWe use Plausible for website analytics. Plausible is an ‚Äúintuitive, lightweight and open source web analytics‚Äù, does not use cookies and is fully compliant with GDPR, CCPA and PECR.\n\n\nLicense\nAll contents are licensed under CC BY 4.0, unless indicated otherwise.\n\n\nContact\nDid you spot an error? Is there an issue with the website? Do you have feedback, questions or comments? We would love to hear from you! Open an issue on GitHub or write an email."
  },
  {
    "objectID": "resources.html#all",
    "href": "resources.html#all",
    "title": "Resources",
    "section": "All",
    "text": "All\n\n\n\n\n\ntitle\nauthors\nyear\nsource\nlicense\ncategory\n\n\n\n\nBecome a git guru\nAtlassian\nNA\nNA\nNA\nguide\n\n\nExperimentology - An Open Science Approach to Experimental Psychology Methods (Appendix A)\nMichael C. Frank et al.\n2023\n\n\nguide\n\n\nExperimentology - An Open Science Approach to Experimental Psychology Methods (Chapter 13 on Project Management)\nMichael C. Frank et al.\n2023\n\n\nguide\n\n\nRemoving sensitive data from a repository\nGitHub Team\n2023\n\n\narticle\n\n\n‚ÄúGit & GitHub‚Äù - Chapter in the R Packages Book (2nd edition)\nHadley Wickham & Jenny Bryan\n2023\n\n\nbook\n\n\nIntroduction to version control with Git\nCodeRefinery\n2022\n\n\nworkshop\n\n\nCollaborative distributed version control\nCodeRefinery\n2022\n\n\nworkshop\n\n\nUsing Git to Code, Collaborate and Share\nImperial College Research Computing Service\n2022\n\n\nguide\n\n\nOh Shit, Git!?!\nKatie Sylor-Miller\n2021\n\nNA\nwebsite\n\n\nData Science for Economists - Lecture 2: Version control with Git(Hub)\nGrant McDermott\n2021\n\n\nslides\n\n\nHappy Git and GitHub for the useR\nJennifer Bryan et al.\n2021\n\n\nbook\n\n\nThe Turing Way - Chapter on Version Control\nThe Turing Way Community\n2021\n\n\nguide\n\n\nReproducible Research Data and Project Management in R - Chapter on Version Control with Git\nAnna Krystalli\n2021\n\n\nguide\n\n\nThe Missing Semester of Your CS Education - Chapter on Version Control\nThe Missing Semester Team\n2020\n\nNA\nguide\n\n\nHow to Teach Git Commits & GitHub to Teenagers\nJeff Olson\n2020\nNA\nNA\narticle\n\n\nGit for Scientists\nMiles McBain\n2019\n\n\ncourse\n\n\nVersion Control with Git\nThe Carpentries\n2019\n\n\nguide\n\n\nExcuse Me, Do You Have a Moment to Talk About Version Control?\nJennifer Bryan\n2017\nNA\nNA\npaper\n\n\nA Quick Introduction to Version Control with Git and GitHub\nJohn D. Blischak et al.\n2016\nNA\n\npaper\n\n\nGit for Humans\nAlice Bartlett\n2016\nNA\nNA\nslides\n\n\nA Friendly Github Intro Workshop\nKirstie Whitaker\n2016\n\n\nworkshop\n\n\nPro Git (2nd edition)\nScott Chacon & Ben Straub\n2014\nNA\n\nbook\n\n\nHow to Write a Git Commit Message\ncbeams\n2014\nNA\nNA\narticle"
  },
  {
    "objectID": "resources.html#guides",
    "href": "resources.html#guides",
    "title": "Resources",
    "section": "Guides",
    "text": "Guides\nTBA"
  },
  {
    "objectID": "resources.html#courses",
    "href": "resources.html#courses",
    "title": "Resources",
    "section": "Courses",
    "text": "Courses\nTBA"
  },
  {
    "objectID": "resources.html#papers",
    "href": "resources.html#papers",
    "title": "Resources",
    "section": "Papers",
    "text": "Papers\nTBA"
  },
  {
    "objectID": "team.html#project-leader-instructor",
    "href": "team.html#project-leader-instructor",
    "title": "Team",
    "section": "Project Leader & Instructor",
    "text": "Project Leader & Instructor\n\n\n\n\n\nDr.¬†Lennart Wittkuhn\nLennart is a Postdoctoral Researcher and Lab Manager in the Research Group ‚ÄúMechanisms of Learning and Change‚Äù at the University of Hamburg and the Max Planck Research Group NeuroCode at the Max Planck Institute for Human Development in Berlin. In his scientific work, Lennart investigates neural replay of task representations in the human brain using functional magnetic resonance imaging (fMRI). He is also passionate about open science, research data management, reproducibility and tools that improve the scientific workflow."
  },
  {
    "objectID": "team.html#teaching-collaborator",
    "href": "team.html#teaching-collaborator",
    "title": "Team",
    "section": "Teaching Collaborator",
    "text": "Teaching Collaborator\n\n\n\n\n\nDr.¬†Ana Martinovici\nAna is an Assistant Professor of Marketing at the Rotterdam School of Management, Erasmus University (The Netherlands). She holds a PhD degree in Marketing and two master‚Äôs degrees (Econometrics and Mathematical Economics, and Marketing), from Tilburg University (The Netherlands). Ana‚Äôs research focuses on the role of attention in consumer choice processes. She develops dynamic Bayesian models calibrated on eye-tracking data to gain access to otherwise unobservable utility accumulation processes that take place during choice. For more information, please visit https://anamartinovici.com/."
  },
  {
    "objectID": "team.html#student-research-teaching-assistant",
    "href": "team.html#student-research-teaching-assistant",
    "title": "Team",
    "section": "Student Research & Teaching Assistant",
    "text": "Student Research & Teaching Assistant\nTBA"
  },
  {
    "objectID": "repos.html",
    "href": "repos.html",
    "title": "Repos",
    "section": "",
    "text": "Order By\n       Default\n         \n          Author\n        \n         \n          URL\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nAuthor\n\n\nURL\n\n\n\n\n\n\navaaz99\n\n\nhttps://github.com/avaaz99/Cityguide\n\n\n\n\nCarFis84\n\n\nhttps://github.com/CarFis84/city-guide-\n\n\n\n\nAlbertoTombaHH\n\n\nhttps://github.com/AlbertoTombaHH/repo-city\n\n\n\n\naunenua\n\n\nhttps://github.com/aunenua/Recommendations\n\n\n\n\nNikossor\n\n\nhttps://github.com/Nikossor/city-guide\n\n\n\n\nlea-schumacher\n\n\nhttps://github.com/lea-schumacher/city-guide\n\n\n\n\nRhonus\n\n\nhttps://github.com/Rhonus/city-project\n\n\n\n\nmiriamlucie\n\n\nhttps://github.com/miriamlucie/mastercityguide\n\n\n\n\njoyce-shi-github\n\n\nhttps://github.com/joyce-shi-github/Y2_Version_Control_city-guide\n\n\n\n\nsepehr-e\n\n\nhttps://github.com/sepehr-e/city-guide\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "When? Winter 2024/25 (October to January), every Friday, 10:15 to 11:45 (detailed schedule below)\n Where? University of Hamburg & Erasmus University Rotterdam (Online, Zoom)\n\n\n\n\n\n\nThe course schedule is under constant development! \n\n\n\n\n\nWe are continuously updating information on this website. If you have any urgent questions, always feel free to write an email. Note, that this syllabus provides a comprehensive outline of the topics to be covered in the course. The actual pace and content covered may vary based on the instructor‚Äôs discretion and the needs of the students.\n\n\n\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/session_extraexercise.html",
    "href": "sessions/session_extraexercise.html",
    "title": "Extra Assignment: Advanced GitHub",
    "section": "",
    "text": "Chapter: GitHub\n  \n  \n    \n     Survey: GitHub"
  },
  {
    "objectID": "sessions/session_extraexercise.html#background",
    "href": "sessions/session_extraexercise.html#background",
    "title": "Extra Assignment: Advanced GitHub",
    "section": "1 Background",
    "text": "1 Background\nIf you missed more than two course sessions, you are asked to complete an additional assignment. This additional assignment builds on the contents of previous course sessions and is (roughly) the equivalent of what you would complete in a regular course session. If you need help, please consult the relevant chapters in the Version Control Book (in particular the chapter on GitHub). While the assignment covers many aspects of our course, it‚Äôs not an exam. So please get in touch if you are getting stuck or have any questions about the assignment or the course contents.\nSubmission Deadline: Friday, Feb 2nd, 2024"
  },
  {
    "objectID": "sessions/session_extraexercise.html#assignment",
    "href": "sessions/session_extraexercise.html#assignment",
    "title": "Extra Assignment: Advanced GitHub",
    "section": "2 Assignment",
    "text": "2 Assignment\n\n2.1 Editing content on GitHub\n\n2.1.1 Create a README.md file\nIf you did not create a README.md file in your recipes repository already:\n\nGo to your recipes repository‚Äôs main page and click on ‚ÄúAdd a README‚Äù.\nUse Markdown syntax and add the most important facts about the repository.\nClick on ‚ÄúCommit changes‚Äù and write a relevant commit message.\n\n\n\n2.1.2 Clean up your recipes repository\nIf you have unnecessary files in your recipes repository:\n\nClick on the file you want to delete and choose ‚ÄúDelete file‚Äù.\nCommit the change and choose a commit message.\nPull the changes to your local repository (i.e., to your computer).\n\nYou complete this assignment by sending a link to your recipes repository to Lennart.\n\n\n\n2.2 Forking\n\nFind out what forking is.\nFork Lennart‚Äôs recipes repository.\nCreate an issue in Lennart‚Äôs repository (maybe the repo is missing a great recipe?).\nClone the forked repository to your computer.\nCreate a new branch and make one or multiple commits, ‚Äúfixing‚Äù the issue.\nPush your changes to GitHub.\nCreate a pull request with your changes (hint: from the forked to the original repository) and refer to the issue.\n\nYou complete this assignment by sending a pull request to Lennart‚Äôs recipes repository from a fork.\nHint: Check out Matteo‚Äôs contribution to Lennart‚Äôs recipes repository for a similar procedure."
  },
  {
    "objectID": "sessions/session_extraexercise.html#bonus-tags-and-releases",
    "href": "sessions/session_extraexercise.html#bonus-tags-and-releases",
    "title": "Extra Assignment: Advanced GitHub",
    "section": "3 Bonus: Tags and Releases",
    "text": "3 Bonus: Tags and Releases\nThis is a bonus assignment. It‚Äôs not required to make up for more that two missed course sessions. But maybe you are on a roll now, so why not?\n\nRead the Tags and Releases chapter.\nCreate a tag, marking the current version of your recipes repository.\nCreate a release of your tagged repository version on GitHub.\nTry out the Zenodo Sandbox to generate a DOI for your repository."
  },
  {
    "objectID": "sessions/slides_session04.html#fa-circle-question-when-do-i-have-to-take-the-quiz",
    "href": "sessions/slides_session04.html#fa-circle-question-when-do-i-have-to-take-the-quiz",
    "title": "Session 4: Basic Git workflow",
    "section": " When do I have to ‚ÄúTake the quiz‚Äù?",
    "text": "When do I have to ‚ÄúTake the quiz‚Äù?\n\nMany chapters contain a ‚ÄúTake the quiz!‚Äù button\nThese are the same quizzes that we assign to your as part of the sessions‚Äô learning objectives.\nTake the quiz when you feel ready, i.e., when you believe that you reached the learning objectives.\nAlternative: We‚Äôll let you know during the course when we think it‚Äôs a good time to take the quiz.\nRemember: The quizzes are part of your mandatory course work!"
  },
  {
    "objectID": "sessions/slides_session04.html#fa-circle-question-will-we-also-learn-about-python-or-r",
    "href": "sessions/slides_session04.html#fa-circle-question-will-we-also-learn-about-python-or-r",
    "title": "Session 4: Basic Git workflow",
    "section": " Will we also learn about Python or R?",
    "text": "Will we also learn about Python or R?\n\nNo, not directly, but you are free to use Git to track Python or R files that you use for other projects\nWe will have a Quarto workshop in a later session:"
  },
  {
    "objectID": "sessions/slides_session04.html#more-questions-from-last-session",
    "href": "sessions/slides_session04.html#more-questions-from-last-session",
    "title": "Session 4: Basic Git workflow",
    "section": "More questions from last session",
    "text": "More questions from last session\n\n\n ‚ÄúHow can I enable copy-paste in Git Bash?‚Äù\n\nClick on the Git Bash icon in the top-left corner.\nChoose Options.\nGo to Keys menu.\nEnable Copy and Paste (Ctrl/Shift + Ins) option.\nClick Apply and Save.\n\n\n\n\n ‚ÄúHow do I find the Users folder on Windows?‚Äù\n\nUse ~\nIf pwd is at /: you can still use cd C:\n\n\n\n\n ‚ÄúWhat should my city-guide folder look like?‚Äù\nAt least, a folder with city-guide.txt inside with at least one commit."
  },
  {
    "objectID": "sessions/slides_session04.html#even-more-questions-from-last-session",
    "href": "sessions/slides_session04.html#even-more-questions-from-last-session",
    "title": "Session 4: Basic Git workflow",
    "section": "Even more questions from last session",
    "text": "Even more questions from last session\n\n\n ‚ÄúHow can I check if my folder is a Git repository?‚Äù\n\nUse ls -a (to also show hidden files) and look for the .git folder\n\n\n\n\n ‚ÄúThe command line does not give feedback!‚Äù\n\nYes, I‚Äôm sorry ‚Ä¶\nExample: After mkdir city-guide, use ls to check if the /city-guide folder was created.\n\n\n\n\n ‚ÄúWhy can‚Äôt I see my repository on my GitHub account?‚Äù\n\nYou need to explicitly connect the repository on your computer to GitHub.\nWe will cover this topic in the sessions about GitHub (see schedule)."
  },
  {
    "objectID": "sessions/slides_session04.html#important-notes",
    "href": "sessions/slides_session04.html#important-notes",
    "title": "Session 4: Basic Git workflow",
    "section": "Important notes",
    "text": "Important notes\n\n\n Make sure that there is no Git repository in your home directory!\n\nYour home directory is at /Users/yourname (macOS) or C:\\Users\\yourname (Windows).\nThere should be no .git folder in your home directory (check with ls -a; see previous slide).\nIf you find a .git folder in your home directory, don‚Äôt do anything and talk to us first!\nWe want to make sure that you don‚Äôt accidentally track files in Git that you don‚Äôt want to track.\n\n\n\n\n After you open a fresh terminal, you always need to navigate to your repository first!\n\nYes, I‚Äôm sorry ‚Ä¶\nUse pwd to check your current location and cd to move to another directory.\n\n\n\n\n Use a Git user.name and user.email that you are comfortable with\n\nWe will eventually practice to share Git repositories publicly on GitHub.\nYour user.name and user.email will be part of your commit history.\nA public repository will therefore reveal your user.name and user.email."
  },
  {
    "objectID": "sessions/slides_session04.html#tip-if-you-feel-lost-solutions",
    "href": "sessions/slides_session04.html#tip-if-you-feel-lost-solutions",
    "title": "Session 4: Basic Git workflow",
    "section": "Tip if you feel lost: Solutions",
    "text": "Tip if you feel lost: Solutions\n\nAll course exercises are documented in a dedicated chapter: https://lennartwittkuhn.com/version-control-book/misc/exercises.html, including solutions!\nExercise solutions can also be found at the end of the slides\n\n\n\nCaveats\n\nThe solutions are just one way to implement the exercises.\nAs always: Copy-pasting solutions might not help your understanding."
  },
  {
    "objectID": "sessions/slides_session04.html#schedule",
    "href": "sessions/slides_session04.html#schedule",
    "title": "Session 4: Basic Git workflow",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session04.html#last-session-setup-and-first-steps-with-git-1",
    "href": "sessions/slides_session04.html#last-session-setup-and-first-steps-with-git-1",
    "title": "Session 4: Basic Git workflow",
    "section": "Last session: Setup and first steps with Git",
    "text": "Last session: Setup and first steps with Git\n lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html"
  },
  {
    "objectID": "sessions/slides_session04.html#last-and-partly-this-sessions-learning-objectives",
    "href": "sessions/slides_session04.html#last-and-partly-this-sessions-learning-objectives",
    "title": "Session 4: Basic Git workflow",
    "section": "Last and (partly) this session‚Äôs learning objectives",
    "text": "Last and (partly) this session‚Äôs learning objectives\nAfter the last session, you should now be able to answer the following questions / do the following:\n\n\nSetup\nüí° You know how to set up Git for the first time üí° You have set up Git on your computer üí° You understand the difference between the three Git configuration levels üí° You know how to configure your username and email address in Git üí° You have set up your preferred text editor when working with Git üí° You can escape the command-line text editor Vim\n\n\n\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description.\n\n\n\ncity-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou set up Git.\nYou initialized your city-guide folder as a Git repository.\nYou committed your first file to the city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session04.html#reading",
    "href": "sessions/slides_session04.html#reading",
    "title": "Session 4: Basic Git workflow",
    "section": "Reading",
    "text": "Reading\n ‚ÄúFirst steps with Git‚Äù and ‚ÄúGit Essentials‚Äù"
  },
  {
    "objectID": "sessions/slides_session04.html#learning-objectives",
    "href": "sessions/slides_session04.html#learning-objectives",
    "title": "Session 4: Basic Git workflow",
    "section": "Learning objectives",
    "text": "Learning objectives\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description.\nGit Essentials\nüí° You know how to explore the commit history. üí° You can compare different commits. üí° You know how to use and create a .gitignore file. üí° You can discuss which files can (not) be tracked well with Git and why. üí° You know how to track empty folders in Git repositories."
  },
  {
    "objectID": "sessions/slides_session04.html#tasks",
    "href": "sessions/slides_session04.html#tasks",
    "title": "Session 4: Basic Git workflow",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúFirst steps with Git‚Äù and ‚ÄúGit Essentials‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session04.html#var-course.project-project-1",
    "href": "sessions/slides_session04.html#var-course.project-project-1",
    "title": "Session 4: Basic Git workflow",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nCommit at least three changes in city-guide.txt.\nMake at least one commit using git commit --amend.\n\nFor example, add a a new entry without a title first, commit, then add a title and use git commit --amend to add the title change to the same commit.\n\nCreate a .gitignore file.\n\nEveryone: Create a random file that you want to ignore, for example image.jpg.\nAll macOS users: Let your repository ignore .DS_Store.\n\nüöÄ Optional: Commit .gitkeep in an otherwise empty directory.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your favorite caf√©.\nAdd the recommendation of your partner to your text file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session04.html#conversation-starter",
    "href": "sessions/slides_session04.html#conversation-starter",
    "title": "Session 4: Basic Git workflow",
    "section": "Conversation starter",
    "text": "Conversation starter\n\n\n\nYour name?\nAre you based in Hamburg or Rotterdam?\nA (fun) fact about you? For example:\n\nWhat did you study before and where?\nWhat do you expect from this course?\nWhat‚Äôs your hobby?\nDo you have a pet?\nWhat‚Äôs your favorite color?\nYour mood on a paintings scale?"
  },
  {
    "objectID": "sessions/slides_session04.html#exercises-1",
    "href": "sessions/slides_session04.html#exercises-1",
    "title": "Session 4: Basic Git workflow",
    "section": "Exercises 1",
    "text": "Exercises 1\nInitialize a Git repository\n\nIf needed, navigate to the project folder using the command line.\nInitialize a new Git repository in the project folder.\n\nAdd content and commit changes\n\nCreate a new text file and name it appropriately.\nAdd a short entry to the text file (any favorite or an intriguing AI-generated one).\nStage the new file.\nCommit the changes in the text file with a descriptive commit message.\n\nüöÄ Optional: Commit at least three additional changes in your new file."
  },
  {
    "objectID": "sessions/slides_session04.html#exercises-2",
    "href": "sessions/slides_session04.html#exercises-2",
    "title": "Session 4: Basic Git workflow",
    "section": "Exercises 2",
    "text": "Exercises 2\nAmend a commit\n\nIf needed, navigate to the project folder using the command line.\nMake additional changes to your project text file.\nStage the changes.\nAmend the previous commit to include the new changes.\nCheck the commit history to verify that the last commit message has not changed.\n\nFor example, add a new entry without a title first, commit, then add a title and amend the previous commit to add the title change to the same commit."
  },
  {
    "objectID": "sessions/slides_session04.html#exercises-3",
    "href": "sessions/slides_session04.html#exercises-3",
    "title": "Session 4: Basic Git workflow",
    "section": "Exercises 3",
    "text": "Exercises 3\nCreate a .gitignore file\n\nIf needed, navigate to the project folder using the command line.\nAdd a random file to your repository that you want to ignore, for example an image file like image.jpg.\nCheck the state of your repository to confirm that Git noticed the added file.\nCreate a .gitignore file.\nAdd the random file to the .gitignore file.\nCheck the state of your repository again to confirm that Git now ignores the added file.\nStage the changes in your repository.\nCommit the .gitignore file using a descriptive commit message.\nüöÄ All macOS users: Let your repository ignore .DS_Store."
  },
  {
    "objectID": "sessions/slides_session04.html#solutions-first-steps-with-git",
    "href": "sessions/slides_session04.html#solutions-first-steps-with-git",
    "title": "Session 4: Basic Git workflow",
    "section": "Solutions: First steps with Git",
    "text": "Solutions: First steps with Git\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\ngit init # &lt;2&gt;\ntouch city-guide.txt # &lt;3&gt;\ncat &gt; city-guide.txt &lt;&lt;- EOM # &lt;4&gt;\nHamburg Planetarium\n\n- It is one of the world's oldest, and one of Europe's most visited planetariums.\n- It is located in the district of Winterhude, Hamburg, Germany.\nEOM\ngit add city-guide.txt # &lt;5&gt;\ngit commit -m \"Add Hamburg Planetarium to city-guide.txt\" # &lt;6&gt;\n\n\n\nIf needed, navigate into the city-guide subfolder using cd city-guide (or a similar path).\nInitialize a new Git repository in the city-guide folder using git init.\nCreate a new file called city-guide.txt using touch. Note that you can also use a regular text editor to do this.\nAdd a short entry to city-guide.txt. In this example, cat is used to add text to city-guide.txt. This command would also create the file if city-guide.txt wouldn‚Äôt exist yet. Note that you can also use a regular text editor to do this.\nStage the new city-guide.txt file using git add.\nCommit the changes in city-guide.txt with a descriptive commit message using git commit."
  },
  {
    "objectID": "sessions/slides_session04.html#solutions-amend-a-commit",
    "href": "sessions/slides_session04.html#solutions-amend-a-commit",
    "title": "Session 4: Basic Git workflow",
    "section": "Solutions: Amend a commit",
    "text": "Solutions: Amend a commit\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\necho \"- It is housed in a former water tower at the center of Hamburg Stadtpark.\" &gt;&gt; city-guide.txt # &lt;2&gt;\ngit add city-guide.txt # &lt;3&gt;\ngit commit --amend --no-edit # &lt;4&gt;\ngit log --oneline # &lt;5&gt;\n\n\n\nOptional: Navigate into the project repository using cd (in combination with an absolute or relative path).\nMake an additional change to the project text file. In this example, echo is used to append text to text file. Note that you can also use a regular text editor to do this.\nStage the changes using git add.\nAmend the previous commit to include the new changes using git commit --amend. In this example, the --no-edit flag is used to amend the commit without changing the commit message.\nCheck the commit history using git log to verify that the last commit message has not changed. Here, we add the --oneline flag to show a concise summary of the past commits."
  },
  {
    "objectID": "sessions/slides_session04.html#solutions-create-a-.gitignore-file",
    "href": "sessions/slides_session04.html#solutions-create-a-.gitignore-file",
    "title": "Session 4: Basic Git workflow",
    "section": "Solutions: Create a .gitignore file",
    "text": "Solutions: Create a .gitignore file\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\nwget -nv -O hamburg-planetarium.jpg https://upload.wikimedia.org/wikipedia/commons/3/3a/Hamburg_Planetarium_10881zh.jpg # &lt;2&gt;\ngit status # &lt;3&gt;\ntouch .gitignore # &lt;4&gt;\necho \"*.jpg\" &gt; .gitignore # &lt;5&gt;\ngit status # &lt;6&gt;\ngit add --all # &lt;7&gt;\ngit commit -m \"Add .gitignore and ignore all files that end with .jpg\" # &lt;8&gt;\necho \".DS_Store\" &gt;&gt; .gitignore # &lt;9&gt;\ngit add .gitignore # &lt;9&gt;\ngit commit -m \"Ignore .DS_Store\" # &lt;9&gt;\n\n\n\nOptional: Navigate into the project repository using cd (in combination with an absolute or relative path).\nDownload an image from the internet using wget. This command download a picture of pasta from the internet and saves the output -O as pasta.jpg. The -nv (or --no-verbose) argument makes the command output less text.\nCheck the state of your repository using git status. Git will notice the new file and list it as untracked.\nCreate a .gitignore file using touch. Note that you can also use a regular text editor to do this.\nAdd *.jpg to the .gitignore file to ignore all files that end with the .jpg file extension. In this example, echo is used to append text to the text file. Note that you can also use a regular text editor to do this. This command would also create the file if .gitignore wouldn‚Äôt exist yet.\nCheck the state of your repository again using git status. The new file should disappear from the output and is not listed as untracked anymore.\nStage all changes using git add --all. This command should generally be avoided as it may lead to staging and committing changes that should not added to the repository‚Äôs history. Here, we use it to demonstrate that only the .gitignore will be staged but not the pasta image file because it is ignored.\nCommit the changes in .gitignore with a descriptive commit message using git commit.\nAdd .DS_Store to the .gitignore file to ignore it. Again, echo is used to append text to the text file. Note that you can also use a regular text editor to do this. Stage and commit your changes using a descriptive commit message."
  },
  {
    "objectID": "sessions/slides_session04.html#staging-and-committing",
    "href": "sessions/slides_session04.html#staging-and-committing",
    "title": "Session 4: Basic Git workflow",
    "section": "Staging and Committing",
    "text": "Staging and Committing\n\n\nStaging:\n\nCommand: git add\nPurpose: Preparing and organizing files before they are recorded in the repository‚Äôs history.\n\n\nCommitting:\n\nCommand: git commit -m \"commit message\"\nPurpose: Saving the changes in the staged files to the repository‚Äôs history, creating a snapshot.\n\n\n\n\n\n\n\nSource: git-scm.com"
  },
  {
    "objectID": "sessions/slides_session04.html#git-log",
    "href": "sessions/slides_session04.html#git-log",
    "title": "Session 4: Basic Git workflow",
    "section": "git log",
    "text": "git log\n\ngit log\ne.g:\n\n\n\n\n\ncommit 3f6db14ed93d6e92a207a9a3ac5f8b8c5c5c5c34 (HEAD -&gt; main, origin/master, origin/HEAD)\nAuthor: Jane Doe &lt;jane@example.com&gt;\nDate:   Tue Apr 24 14:24:48 2024 -0700\n\n    Fix the widget rendering issue in the dashboard\n\ncommit a4324f44d3e85723a4d91cb9e07132b7115e4941\nAuthor: John Smith &lt;john@example.com&gt;\nDate:   Mon Apr 23 16:17:59 2024 -0700\n\n    Update dependencies to newer versions\n\ncommit fa204b9145bf7fc7ff226a26b49a567fc2eb1b94\nAuthor: Alice Johnson &lt;alice@example.com&gt;\nDate:   Sun Apr 22 15:08:43 2024 -0700\n\n    Initial commit of project files\n\n\n\n\ncommit b9690b287bdfec6e17af39b7337b84e9ebf6f046\nAuthor: Lennart Wittkuhn &lt;lennart.wittkuhn@tutanota.com&gt;\nDate:   Fri Mar 22 15:19:43 2024 +0100\n\n    move illustration of bad git commits (xkcd comic) and edit sentence\n\ncommit d8d770dd84cd19086f41d8d38752b223c8130859\nAuthor: konradpa &lt;konrad@pagenstedt.de&gt;\nDate:   Wed Mar 6 13:51:13 2024 +0100\n\n    add image to setup chapter\n\ncommit 074c9f6e12dd5fc8cc61de9f31efbdbce41a7583\nAuthor: konradpa &lt;konrad@pagenstedt.de&gt;\nDate:   Wed Mar 6 13:51:07 2024 +0100\n\n    add image to rewriting history chapter"
  },
  {
    "objectID": "sessions/slides_session04.html#terminology-what-are-branches",
    "href": "sessions/slides_session04.html#terminology-what-are-branches",
    "title": "Session 4: Basic Git workflow",
    "section": "Terminology: What are ‚Äúbranches‚Äù?",
    "text": "Terminology: What are ‚Äúbranches‚Äù?\n lennartwittkuhn.com/version-control-book/chapters/branches.html"
  },
  {
    "objectID": "sessions/slides_session04.html#terminology-what-is-head",
    "href": "sessions/slides_session04.html#terminology-what-is-head",
    "title": "Session 4: Basic Git workflow",
    "section": "Terminology: What is HEAD?",
    "text": "Terminology: What is HEAD?\n lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html#head\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/session04.html",
    "href": "sessions/session04.html",
    "title": "Basic Git workflow",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: First steps with Git\n  \n  \n    \n     Chapter: Git Essentials\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session04.html#this-session",
    "href": "sessions/session04.html#this-session",
    "title": "Basic Git workflow",
    "section": "This session",
    "text": "This session\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúFirst steps with Git‚Äù and ‚ÄúGit Essentials‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session04.html#learning-objectives",
    "href": "sessions/session04.html#learning-objectives",
    "title": "Basic Git workflow",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description.\n\n\nGit Essentials\nüí° You know how to explore the commit history. üí° You can compare different commits. üí° You know how to use and create a .gitignore file. üí° You can discuss which files can (not) be tracked well with Git and why. üí° You know how to track empty folders in Git repositories."
  },
  {
    "objectID": "sessions/session04.html#var-course.project-project",
    "href": "sessions/session04.html#var-course.project-project",
    "title": "Basic Git workflow",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nCommit at least three changes in city-guide.txt.\nMake at least one commit using git commit --amend.\n\nFor example, add a a new entry without a title first, commit, then add a title and use git commit --amend to add the title change to the same commit.\n\nCreate a .gitignore file.\n\nEveryone: Create a random file that you want to ignore, for example image.jpg.\nAll macOS users: Let your repository ignore .DS_Store.\n\nüöÄ Optional: Commit .gitkeep in an otherwise empty directory.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session04.html#exercises",
    "href": "sessions/session04.html#exercises",
    "title": "Basic Git workflow",
    "section": "Exercises",
    "text": "Exercises\n\nInitialize a Git repository\n\nIf needed, navigate to the project folder using the command line.\nInitialize a new Git repository in the project folder.\n\n\n\nAdd content and commit changes\n\nCreate a new text file and name it appropriately.\nAdd a short entry to the text file (any favorite or an intriguing AI-generated one).\nStage the new file.\nCommit the changes in the text file with a descriptive commit message.\n\nüöÄ Optional: Commit at least three additional changes in your new file.\n\n\nAmend a commit\n\nIf needed, navigate to the project folder using the command line.\nMake additional changes to your project text file.\nStage the changes.\nAmend the previous commit to include the new changes.\nCheck the commit history to verify that the last commit message has not changed.\n\nFor example, add a new entry without a title first, commit, then add a title and amend the previous commit to add the title change to the same commit.\n\n\nCreate a .gitignore file\n\nIf needed, navigate to the project folder using the command line.\nAdd a random file to your repository that you want to ignore, for example an image file like image.jpg.\nCheck the state of your repository to confirm that Git noticed the added file.\nCreate a .gitignore file.\nAdd the random file to the .gitignore file.\nCheck the state of your repository again to confirm that Git now ignores the added file.\nStage the changes in your repository.\nCommit the .gitignore file using a descriptive commit message.\nüöÄ All macOS users: Let your repository ignore .DS_Store."
  },
  {
    "objectID": "sessions/session04.html#slides",
    "href": "sessions/session04.html#slides",
    "title": "Basic Git workflow",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session04.html#cheatsheet",
    "href": "sessions/session04.html#cheatsheet",
    "title": "Basic Git workflow",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\nFirst steps with Git\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit init\nInitializes a folder as a Git repository\n\n\ngit status\nShows Git tracking status of files in the repository\n\n\ngit add\nAdds file(s) to the staging area\n\n\ngit commit\nCommits staged files\n\n\ngit commit -m \"commit message\"\nCommits staged files with a commit message\n\n\n\n\n\n\n\nGit Essentials\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit log\nViews past commits\n\n\ngit diff\nViews made changes compared to the last commit\n\n\ngit mv\nRenames or moves files and automatically stages the changes"
  },
  {
    "objectID": "sessions/slides_session11.html#schedule-1",
    "href": "sessions/slides_session11.html#schedule-1",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session11.html#last-session-github---collaboration-1",
    "href": "sessions/slides_session11.html#last-session-github---collaboration-1",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Last session: GitHub - Collaboration",
    "text": "Last session: GitHub - Collaboration\n https://lennartwittkuhn.com/version-control-book/chapters/github-advanced.html"
  },
  {
    "objectID": "sessions/slides_session11.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session11.html#last-sessions-learning-objectives",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch."
  },
  {
    "objectID": "sessions/slides_session11.html#reminders-faq",
    "href": "sessions/slides_session11.html#reminders-faq",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Reminders / FAQ",
    "text": "Reminders / FAQ\n\n\n ‚ÄúRemember to cd in your city-guide project folder!‚Äù\n\nEvery time you open the command line, it starts at a default location (likely your home directory).\nCheck in which folder you are, using pwd (‚Äúprint working directory‚Äù).\nUse cd to move to your city-guide project folder before you start running the Git commands.\n\n\n\n\n ‚ÄúRemember to clone your collaborator‚Äôs repository to a different location (not into your city-guide project folder!)‚Äù\n\ncd out of your city-guide project folder\nClone into a different folder git clone git@github.com:partner-name/repo-name.git city-guide-partner"
  },
  {
    "objectID": "sessions/slides_session11.html#more-questions-about-the-last-session",
    "href": "sessions/slides_session11.html#more-questions-about-the-last-session",
    "title": "Session 11: Git(Hub) with the world",
    "section": "More questions about the last session?",
    "text": "More questions about the last session?"
  },
  {
    "objectID": "sessions/slides_session11.html#meta-session-title",
    "href": "sessions/slides_session11.html#meta-session-title",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Git(Hub) with the world",
    "text": "Git(Hub) with the world\n\n\n\n\nImage from Techdobz"
  },
  {
    "objectID": "sessions/slides_session11.html#new-topic-issues",
    "href": "sessions/slides_session11.html#new-topic-issues",
    "title": "Session 11: Git(Hub) with the world",
    "section": "New topic: Issues",
    "text": "New topic: Issues\n\nLink to Issue"
  },
  {
    "objectID": "sessions/slides_session11.html#issues-in-lennarts-recipes-repository",
    "href": "sessions/slides_session11.html#issues-in-lennarts-recipes-repository",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Issues in Lennart‚Äôs recipes repository",
    "text": "Issues in Lennart‚Äôs recipes repository\n\nLink to Issue"
  },
  {
    "objectID": "sessions/slides_session11.html#this-sessions-learning-objectives",
    "href": "sessions/slides_session11.html#this-sessions-learning-objectives",
    "title": "Session 11: Git(Hub) with the world",
    "section": "This session‚Äôs learning objectives",
    "text": "This session‚Äôs learning objectives\nGitHub - Advanced\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch.\nIssues\nüí° You understand the purpose of GitHub Issues. üí° You can create and manage Issues. üí° You can reference an Issue in another issue. üí° You can close an Issue with a commit or pull request."
  },
  {
    "objectID": "sessions/slides_session11.html#reading",
    "href": "sessions/slides_session11.html#reading",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Reading",
    "text": "Reading\n ‚ÄúGitHub - Advanced‚Äù and ‚ÄúIssues‚Äù\nStart at the section on ‚ÄúForking‚Äù."
  },
  {
    "objectID": "sessions/slides_session11.html#tasks",
    "href": "sessions/slides_session11.html#tasks",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúGitHub - Advanced‚Äù and ‚ÄúIssues‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session11.html#lennarts-var-course.project-repo",
    "href": "sessions/slides_session11.html#lennarts-var-course.project-repo",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Lennart‚Äôs city-guide repo",
    "text": "Lennart‚Äôs city-guide repo\n https://lennartwittkuhn.com/city-guide/"
  },
  {
    "objectID": "sessions/slides_session11.html#var-course.project-project",
    "href": "sessions/slides_session11.html#var-course.project-project",
    "title": "Session 11: Git(Hub) with the world",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou contributed successfully to a public project by adding and committing changes to a forked repository.\nYou created and reviewed a pull request to integrate new content from a fork.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs (team) topic\n\nThink about your top recommendation for the city guide.\nAdd your top recommendation to the forked repository.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session11.html#exercises",
    "href": "sessions/slides_session11.html#exercises",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Exercises",
    "text": "Exercises\n‚ÄúPublic‚Äù collaboration with pull requests (using a fork and GitHub Flow)\n\nFind out what forking is.\nFork the project repository of the course instructor or another course participant (ideally, someone who is not your collaborator from the previous exercise).\nCreate an Issue in your new collaborator‚Äôs repository, indicating an entry that you think is still missing in their repository.\nRepeat the steps from the exercise on collaboration with remote repositories using the forked repository:\n\nClone the forked repository to a sensible location on your computer.\nCreate a new branch and make one or multiple commits ‚Äúfixing‚Äù the Issue that you opened. If available, follow the contributing guide of your collaborator‚Äôs repository.\nPush your changes to the remote repository.\nCreate a pull/merge request with your changes (hint: from the forked to the original repository) and refer to the Issue in your pull/merge request."
  },
  {
    "objectID": "sessions/slides_session11.html#oh-another-issue",
    "href": "sessions/slides_session11.html#oh-another-issue",
    "title": "Session 11: Git(Hub) with the world",
    "section": "Oh, another issue!",
    "text": "Oh, another issue!\n\nLink to Issue\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/project/project-github-advanced.html",
    "href": "sessions/project/project-github-advanced.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou collaborated successfully on a shared project by adding and committing changes to a partner‚Äôs repository.\nYou created and reviewed a pull request to integrate new content from a partner.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-tags-releases.html",
    "href": "sessions/project/project-tags-releases.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou created an annotated Tag and a GitHub Release.\nYou linked the release to Zenodo‚Äôs sandbox and minted a DOI.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-basics.html",
    "href": "sessions/project/project-basics.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nYou set up Git.\nYou initialized your city-guide folder as a Git repository.\nYou committed your first file to the city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-quarto.html",
    "href": "sessions/project/project-quarto.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nTask 1\n\nYou created a new quarto branch in your city-guide repository and switched to it.\n\n\n\nTask 2\n\nYou created a new empty Quarto file called city-guide.qmd and saved it in your city-guide repository.\nYou wrote a short introduction note to your city-guide repository.\nYou switched between Quarto‚Äôs visual and source mode.\nYou rendered the file to HTML.\nYou staged and committed your changes.\n\n\n\nTask 2.1\nQuarto and RStudio might create a bunch of extra files:\n.Rproj.user\n.Rhistory\n.RData\n.Ruserdata\n/_site/\n/.quarto/\nThe are temporary or user specific files and should therefore not be tracked in Git.\n\nAdd any file that is not the .qmd file to your .gitignore file.\nStage and commit the changes to your .gitignore file.\n\n\n\nTask 3\n\nYou added a new entry to the city-guide.qmd file.\nTopic: Interview each other about your favorite cinema or theater.\nYou formatted the text by applying at least three types of Markdown syntax.\nYou staged and committed your changes.\n\n\n\nTask 4\n\nYou added a YAML header to your Quarto file.\nYou included your name, a title, an output format (e.g., HTML) and a theme.\nYou staged and committed your changes.\n\n\nTask 5\n\nYou merged your quarto branch into your main branch\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/project/project-essentials.html",
    "href": "sessions/project/project-essentials.html",
    "title": "An introduction to Git for research",
    "section": "",
    "text": "At the end of this session, you should have accomplished the following:\n\nCommit at least three changes in city-guide.txt.\nMake at least one commit using git commit --amend.\n\nFor example, add a a new entry without a title first, commit, then add a title and use git commit --amend to add the title change to the same commit.\n\nCreate a .gitignore file.\n\nEveryone: Create a random file that you want to ignore, for example image.jpg.\nAll macOS users: Let your repository ignore .DS_Store.\n\nüöÄ Optional: Commit .gitkeep in an otherwise empty directory.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session01.html#team",
    "href": "sessions/slides_session01.html#team",
    "title": "Session 1: Introduction to Version Control",
    "section": "Team",
    "text": "Team\n\n\nInstructor\n\nDr.¬†Lennart Wittkuhn\n lennart.wittkuhn@uni-hamburg.de  GitHub  lennartwittkuhn.com\n\nTeaching Assistant\n\nReza Hakimazar\n reza.hakimazar@uni-hamburg.de  GitHub\n\nTeaching Collaborator\n\nDr.¬†Ana Martinovici\n martinovici@rsm.nl  GitHub  anamartinovici.com"
  },
  {
    "objectID": "sessions/slides_session01.html#international-teaching-collaboration",
    "href": "sessions/slides_session01.html#international-teaching-collaboration",
    "title": "Session 1: Introduction to Version Control",
    "section": "International Teaching Collaboration",
    "text": "International Teaching Collaboration\n\n‚ÄúA new funding line allows researchers at University of Hamburg to develop virtual teaching [‚Ä¶] formats with international partner universities. Students can also gain international experience without going abroad.‚Äù\n\n\n\nHamburg, Germany\n\n\n\nDietmar Rabich, Hamburg, Landungsbr√ºcken ‚Äì 2016 ‚Äì 3131-7, CC BY-SA 4.0\n\n\n\nRotterdam, The Netherlands\n\n\n\nZairon, CC BY-SA 4.0, via Wikimedia Commons"
  },
  {
    "objectID": "sessions/slides_session01.html#research-on-cognitive-neuroscience-of-learning-change",
    "href": "sessions/slides_session01.html#research-on-cognitive-neuroscience-of-learning-change",
    "title": "Session 1: Introduction to Version Control",
    "section": "Research on ‚ÄúCognitive Neuroscience of Learning & Change‚Äù",
    "text": "Research on ‚ÄúCognitive Neuroscience of Learning & Change‚Äù\n\n\nHow does the brain use past experience to guide future decisions?\n\n\n\n\n\n\n\n\ntaken from Lake et al. (2016): ‚ÄúBuilding machines that learn and think like people‚Äù\n\n\n\n\nFind out more on our group‚Äôs website: https://schucklab.gitlab.io/\n\n\n\n\nKey research areas\n\nRepresentation of task states\nMemory reactivation and decision-making\nThe influence of task irrelevant information on decision-making\nThe effect of aging, genes and disease on (spatial) memory and learning\n\n\n\n\n\n\n\n\n\nwe heard a lot about artificial intelligence\nwhat does ‚Äúintelligence‚Äù even mean?\nas psychologists & cognitive neuroscientists we are interested in understanding human ‚Äúnatural‚Äù or biological intelligence\nour group is interested in the convergence between neuroscience and artificial intelligence research (‚ÄúNeuro AI‚Äù)\ne.g., ‚Äúwhy are humans so fast in learning a wide range of tasks in complex environments‚Äù\nwe use cognitive and psychological approaches, neural measurement using fMRI and EEG and integrate and compare them with computational approaches from reinforcement learning and artificial neural networks"
  },
  {
    "objectID": "sessions/slides_session01.html#research-profile-of-dr.-ana-martinovici",
    "href": "sessions/slides_session01.html#research-profile-of-dr.-ana-martinovici",
    "title": "Session 1: Introduction to Version Control",
    "section": "Research profile of Dr.¬†Ana Martinovici",
    "text": "Research profile of Dr.¬†Ana Martinovici\n\n\n\nDr.¬†Ana Martinovici\n martinovici@rsm.nl  GitHub  anamartinovici.com\n\nBackground\n\nPhD in Marketing (Tilburg University)\nMSc in Econometrics and Mathematical Economics (Tilburg University)\n\nInterests\n\n(Visual) Attention\nPrivacy and data protection\nOpen Science\n\nExperience with\n\nEye tracking data\nChoice modeling\nR, Stan, Git"
  },
  {
    "objectID": "sessions/slides_session01.html#who-are-you",
    "href": "sessions/slides_session01.html#who-are-you",
    "title": "Session 1: Introduction to Version Control",
    "section": "Who are you?",
    "text": "Who are you?\n\n\n\nYour name?\nYour preferred pronouns?\nOne (fun) fact about you? For example:\n\nWhat did you study before and where?\nWhat do you expect from this course?\nWhat‚Äôs your hobby?\nDo you have a pet?\nWhat‚Äôs your favorite color?\nYour mood on rubber duck scale?"
  },
  {
    "objectID": "sessions/slides_session01.html#course-overview",
    "href": "sessions/slides_session01.html#course-overview",
    "title": "Session 1: Introduction to Version Control",
    "section": "Course overview",
    "text": "Course overview\n\n\n\n Date: Winter semester 2024/25 (October to January)\n Time: Fridays, 10:15 - 11:45 (90 Minutes)\n Room: Online, Zoom\n Instructor: Dr.¬†Lennart Wittkuhn\n Collaborator: Dr.¬†Ana Martinovici\n Assistant: Reza Hakimazar\n\n\n\n Event: Seminar\n Credits: 4,0 (2 SWS)\n Language: English\n Tag: PsyM14-PsyWB-K01"
  },
  {
    "objectID": "sessions/slides_session01.html#what-will-the-average-seminar-session-look-like",
    "href": "sessions/slides_session01.html#what-will-the-average-seminar-session-look-like",
    "title": "Session 1: Introduction to Version Control",
    "section": "What will the average seminar session look like?",
    "text": "What will the average seminar session look like?\n\n The course will consist of up to 13 sessions (90 minutes each)\n\n\n\n Content Review (up to 30 minutes):  Course participants engage with the online materials (aka. our ‚ÄúVersion Control Book‚Äù), supplemented by short presentations by the instructors. Some course preparation may occur outside of the class.\n\n\n\n\n Interactive Discussions & Quizzes (up to 15 minutes): Course participants collectively address any inquiries related to the session‚Äôs content and online materials. Instructor-led quiz questions may also be interspersed throughout.\n\n\n\n\n Exercises & Implementation (up to 60 minutes): Course participants actively delve into hands-on exercises and assignments.\n\n\n\n\nLogistics\n\n You need a laptop. Talk to us if you don‚Äôt have a laptop.\n\n\n\nNote, that course participants are sometimes required to work on course materials outside of class time.\nNot all course contents will be covered during class time."
  },
  {
    "objectID": "sessions/slides_session01.html#schedule",
    "href": "sessions/slides_session01.html#schedule",
    "title": "Session 1: Introduction to Version Control",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session01.html#course-website",
    "href": "sessions/slides_session01.html#course-website",
    "title": "Session 1: Introduction to Version Control",
    "section": "Course Website",
    "text": "Course Website\n https://lennartwittkuhn.com/version-control-course-uhh-eur-ws24\n\n\n\nCourse website is the main entry point for students before, during and after the course\nContents: Overview, course details, schedule, information about the team, additional resources and course mechanics\nPractical advantage: Update course information independently from university websites that are out of your control"
  },
  {
    "objectID": "sessions/slides_session01.html#version-control-book",
    "href": "sessions/slides_session01.html#version-control-book",
    "title": "Session 1: Introduction to Version Control",
    "section": "Version Control Book",
    "text": "Version Control Book\n https://lennartwittkuhn.com/version-control-book/"
  },
  {
    "objectID": "sessions/slides_session01.html#exercises-quizzes-surveys",
    "href": "sessions/slides_session01.html#exercises-quizzes-surveys",
    "title": "Session 1: Introduction to Version Control",
    "section": "Exercises, quizzes & surveys",
    "text": "Exercises, quizzes & surveys\n\n\nWe use online surveys to ask you questions and implement exercises or quizzes\nImplemented in the formr survey framework (open-source, hosted in Germany)\n\n\n\n\nAnonymity & data usage\n\nall raw data are kept anonymous and will only be used for research and educational purposes\nif responses are shared as part of the course, they will be aggregated to ensure anonymity is maintained\nif you want your data to be deleted after the course, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor). Our secretary forwards your codeword to us (without your name)."
  },
  {
    "objectID": "sessions/slides_session01.html#your-role-questions-and-communication",
    "href": "sessions/slides_session01.html#your-role-questions-and-communication",
    "title": "Session 1: Introduction to Version Control",
    "section": "Your role: Questions and communication",
    "text": "Your role: Questions and communication\n\n\nQuestions & discussions during class time\n\nAsk questions! There are no stupid questions!\nParticipate in the discussions\nWe can use Zoom Breakout Rooms to address individual questions\n\n\n\n\nAsk questions! There are no stupid questions!\n\n\n\n\nQuestions & discussions outside of class time\n\nAsk questions! There are no stupid questions!\nSend questions to our mailing list: version-control-course-uhh-eur-ws24.psych@lists.uni-hamburg.de\nSend questions to Lennart and / or Reza\nOffice hours by appointment via email\nBe proactive: Give us feedback!"
  },
  {
    "objectID": "sessions/slides_session01.html#your-role-active-participation",
    "href": "sessions/slides_session01.html#your-role-active-participation",
    "title": "Session 1: Introduction to Version Control",
    "section": "Your role: Active participation",
    "text": "Your role: Active participation\n\n\nActive participation\n\nThis is a pass / fail course. You pass if you fulfill all course requirements:\nRequirement 1: Come to at least 12 out of 14 sessions (85%)\nRequirement 2: Complete all surveys/quizzes\nRequirement 3: Complete all mandatory exercises (implemented in Git)\n\n\n\n\nHow do we verify the course requirements?\n\nRequirement 1: Sign the attendance list\n\nWe take screenshots of the Zoom participants list\nUniversity of Hamburg: You may need to sign the attendance list (at the end of the semester; TBA)\n\nRequirement 2: Provide a personal codeword. At the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor). We will send our secretary a list of personal codewords and she will return a list of names.\nRequirement 3: At the end of the semester, send a link to your completed exercises."
  },
  {
    "objectID": "sessions/slides_session01.html#course-exercise-building-an-online-city-guide",
    "href": "sessions/slides_session01.html#course-exercise-building-an-online-city-guide",
    "title": "Session 1: Introduction to Version Control",
    "section": "Course exercise: Building an online city guide",
    "text": "Course exercise: Building an online city guide\n https://lennartwittkuhn.com/uhh-eur-city-guide/"
  },
  {
    "objectID": "sessions/slides_session01.html#code-of-conduct",
    "href": "sessions/slides_session01.html#code-of-conduct",
    "title": "Session 1: Introduction to Version Control",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nDuring this course, we want to ensure a safe, productive, and welcoming environment for everyone who attends. All participants and speakers are expected to abide by this code of conduct. We do not tolerate any form of discrimination or harassment in any form or by any means. If you experience harassment or hear of any incidents of unacceptable behavior, please reach out to the course instructor, Lennart Wittkuhn (lennart.wittkuhn@uni-hamburg.de), so that we can take the appropriate action.\nUnacceptable behavior is defined as:\n\nHarassment, intimidation, or discrimination in any form, verbal abuse of any attendee, speaker, or other person. Examples include, but are not limited to, verbal comments related to gender, sexual orientation, disability, physical appearance, body size, race, religion, national origin, inappropriate use of nudity and/or sexual images in public spaces or in presentations, or threatening or stalking.\nDisruption of presentations throughout the course. We ask all participants to comply to the instructions of the speaker with regard to dedicated discussion space and time.\nParticipants should not take pictures of any activity in the course room without asking all involved participants for consent and receiving this consent.\n\nA first violation of this code of conduct will result in a warning, and subsequent violations by the same person can result in the immediate removal from the course without further warning. The organizers also reserve the right to prohibit attendance of excluded participants from similar future workshops, courses or meetings they organize."
  },
  {
    "objectID": "sessions/slides_session01.html#learning-objectives",
    "href": "sessions/slides_session01.html#learning-objectives",
    "title": "Session 1: Introduction to Version Control",
    "section": "Learning objectives",
    "text": "Learning objectives\nAt the end of this session, you should be able to answer the following questions and / or achieve the following learning objectives:\nüí° You know what version control is. üí° You can argue why version control is useful (for research). üí° You can name benefits of Git compared to other approaches to version control. üí° You can explain the difference between Git and GitHub."
  },
  {
    "objectID": "sessions/slides_session01.html#your-turn",
    "href": "sessions/slides_session01.html#your-turn",
    "title": "Session 1: Introduction to Version Control",
    "section": "Your turn",
    "text": "Your turn\n\nRead Chapter 1: ‚ÄúIntroduction to Version Control‚Äù in the Version Control Book.\nIntroduce yourself to your course partner.\nDiscuss the learning objectives with your course partner.\n\nLearning objectives\nüí° You know what version control is. üí° You can argue why version control is useful (for research). üí° You can name benefits of Git compared to other approaches to version control. üí° You can explain the difference between Git and GitHub."
  },
  {
    "objectID": "sessions/slides_session01.html#the-issue-of-computational-reproducibility-in-science",
    "href": "sessions/slides_session01.html#the-issue-of-computational-reproducibility-in-science",
    "title": "Session 1: Introduction to Version Control",
    "section": "The issue of computational reproducibility in science",
    "text": "The issue of computational reproducibility in science\n\n\n\n‚Äú‚Ä¶ when the same analysis steps performed on the same dataset consistently produce the same answer.‚Äù 1\n\n\n\nby Scriberia for The Turing Way Community (2022) (Link, CC BY 4.0)\n\n\n\n\n\n\nThe problem\n\n\n\nabout more than half of research is not reproducible 2\n\nresearch data, code, software & materials are often not available ‚Äúupon reasonable [sic] request‚Äù\nif resources are shared, they are often incomplete\n\n90% of researchers: ‚Äúreproducibility crisis‚Äù (N = 1576) 3\n\n\n\n\nWhy?\n\n\n\ncomputational reproducibility is hard\nresearchers lack training\nincentives are not (yet) aligned 4\n‚Äúnatural selection of bad science‚Äù 5\n\n\n\n\n\n‚Äú‚Ä¶ accumulated evidence indicates [‚Ä¶] substantial room for improvement with regard to research practices to maximize the efficiency of the research community‚Äôs use of the public‚Äôs financial investment.‚Äù (Munaf√≤ et al., 2017)\n\n\nWe need a professional toolkit for digital research!\n\n\n\nalso called ‚Äúanalytical reproducibility‚Äù\nin contrast: ‚ÄúReplication‚Äù = same analysis on different data\ncomputational reproducibility should be a minimum requirement\n90% of respondents to a survey in Nature agreed that there is a ‚Äúreproducibility crisis‚Äù\nnon-scientist friends react very surprised at the lack of professionalization in science\nwe are currently violating the public‚Äôs trust = deep ethical problem\nnatural selection: as a researcher, what‚Äôs good for your career is not necessarily good for science (how to get funding, how to get published, how to get cited)\njournals are interested in selling us back our data, not improving the quality of science"
  },
  {
    "objectID": "sessions/slides_session01.html#why-we-need-version-control",
    "href": "sessions/slides_session01.html#why-we-need-version-control",
    "title": "Session 1: Introduction to Version Control",
    "section": "Why we need version control ‚Ä¶",
    "text": "Why we need version control ‚Ä¶\n\n\n\n‚Ä¶ for code (text files) \n\n\n\n‚Ä¶ for data (binary files) \n\n\nWhen everything is relevant ‚Ä¶\n\n\n‚Ä¶ track everything.\n\n\n\n\n\nVersion control is relevant for anyone who wants to track the evolution of digital objects\nCredit: Adapted from Slides on ‚ÄúResearch Data Management with DataLad‚Äù by Adina Wagner & Michael Hanke]"
  },
  {
    "objectID": "sessions/slides_session01.html#what-is-version-control",
    "href": "sessions/slides_session01.html#what-is-version-control",
    "title": "Session 1: Introduction to Version Control",
    "section": "What is version control?",
    "text": "What is version control?\n\n‚ÄúVersion control is a systematic approach to record changes made in a [‚Ä¶] set of files, over time. This allows you and your collaborators to track the history, see what changed, and recall specific versions later [‚Ä¶]‚Äù (Turing Way)\n\n\n\n\n keep track of changes in a directory (a ‚Äúrepository‚Äù)\n take snapshots (‚Äúcommits‚Äù) of your repo at any time\n know the history: what was changed when by whom\n compare commits and go back to any previous state\n work on parallel ‚Äúbranches‚Äù & flexibly ‚Äúmerge‚Äù them\n\n\n\nby Scriberia for The Turing Way community (CC-BY 4.0)\n\n\n\n\n\n ‚Äúpush‚Äù your repo to a ‚Äúremote‚Äù location & share it\n  share repos on platforms like GitHub or GitLab\n work together on the same files at the same time\n others can read, copy, edit and suggest changes\n make your repo public and openly share your work\n\n\n\nby Scriberia for The Turing Way community (CC-BY 4.0)"
  },
  {
    "objectID": "sessions/slides_session01.html#what-is-git",
    "href": "sessions/slides_session01.html#what-is-git",
    "title": "Session 1: Introduction to Version Control",
    "section": "What is Git?",
    "text": "What is Git?\n\n\n\n\n\ngit-scm.com\n\n\n\nmost popular version control system\nfree, open-source command-line tool\ngraphical user interfaces exist, e.g., GitKraken\nstandard tool for most (all?) software developers\n100 million GitHub users 6\n\n\n\n\n\nVersion control is relevant for anyone who wants to track the evolution of digital objects"
  },
  {
    "objectID": "sessions/slides_session01.html#schedule-1",
    "href": "sessions/slides_session01.html#schedule-1",
    "title": "Session 1: Introduction to Version Control",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session01.html#next-week-the-command-line",
    "href": "sessions/slides_session01.html#next-week-the-command-line",
    "title": "Session 1: Introduction to Version Control",
    "section": "Next week: The command line",
    "text": "Next week: The command line\n\nSource: Wikimedia Commons (free license)"
  },
  {
    "objectID": "sessions/slides_session01.html#homework",
    "href": "sessions/slides_session01.html#homework",
    "title": "Session 1: Introduction to Version Control",
    "section": "Homework",
    "text": "Homework\n\n\n1. Check if you have Git / a command line installed\n\n\nWindows Users \n\nDownload and install Git for Windows\nYou can find a tutorial in the Version Control Book\n\n\nApple  or Linux Users \n\nDownload and install Git (might already be installed)\nYou can find a tutorial in our Version Control Book\n\n\n\n\n\n\n2. Install RStudio & Quarto\n\nRStudio Desktop: https://posit.co/download/rstudio-desktop/\nQuarto: https://quarto.org/\nWill be needed from Session 03 (in two weeks) onwards\n\nIf you have any problems with installation, please get in touch!\n\n\n\n3. Complete the pre-course survey"
  },
  {
    "objectID": "sessions/slides_session01.html#references",
    "href": "sessions/slides_session01.html#references",
    "title": "Session 1: Introduction to Version Control",
    "section": "References",
    "text": "References\n\n\nBaker, M. (2016). 1,500 scientists lift the lid on reproducibility. Nature, 533(7604), 452‚Äì454. https://doi.org/10.1038/533452a.\n\n\nCr√ºwell, S., Apthorp, D., Baker, B. J., Colling, L., Elson, M., Geiger, S. J., Lobentanzer, S., Mon√©ger, J., Patterson, A., Schwarzkopf, D. S., Zaneva, M., & Brown, N. J. L. (2023). What‚Äôs in a Badge? A Computational Reproducibility Investigation of the Open Data Badge Policy in One Issue of Psychological Science. Psychological Science, 34(4), 512‚Äì522. https://doi.org/10.1177/09567976221140828.\n\n\nHardwicke, T. E., Bohn, M., MacDonald, K., Hembacher, E., Nuijten, M. B., Peloquin, B. N., deMayo, B. E., Long, B., Yoon, E. J., & Frank, M. C. (2021). Analytic reproducibility in articles receiving open data badges at the journal Psychological Science : an observational study. Royal Society Open Science, 8(1). https://doi.org/10.1098/rsos.201494.\n\n\nLake, B. M., Ullman, T. D., Tenenbaum, J. B., & Gershman, S. J. (2016). Building machines that learn and think like people. Behavioral and Brain Sciences, 40. https://doi.org/10.1017/s0140525x16001837.\n\n\nMunaf√≤, M. R., Nosek, B. A., Bishop, D. V. M., Button, K. S., Chambers, C. D., Percie du Sert, N., Simonsohn, U., Wagenmakers, E.-J., Ware, J. J., & Ioannidis, J. P. A. (2017). A manifesto for reproducible science. Nature Human Behaviour, 1(1). https://doi.org/10.1038/s41562-016-0021.\n\n\nObels, P., Lakens, D., Coles, N. A., Gottfried, J., & Green, S. A. (2020). Analysis of Open Data and Computational Reproducibility in Registered Reports in Psychology. Advances in Methods and Practices in Psychological Science, 3(2), 229‚Äì237. https://doi.org/10.1177/2515245920918872.\n\n\nPoldrack, R. A. (2019). The Costs of Reproducibility. Neuron, 101(1), 11‚Äì14. https://doi.org/10.1016/j.neuron.2018.11.030.\n\n\nSmaldino, P. E., & McElreath, R. (2016). The natural selection of bad science. Royal Society Open Science, 3(9), 160384. https://doi.org/10.1098/rsos.160384.\n\n\nThe Turing Way Community. (2022). The turing way: A handbook for reproducible, ethical and collaborative research. Zenodo. https://doi.org/10.5281/zenodo.3233853.\n\n\nWicherts, J. M., Borsboom, D., Kats, J., & Molenaar, D. (2006). The poor availability of psychological research data for reanalysis. American Psychologist, 61(7), 726‚Äì728. https://doi.org/10.1037/0003-066x.61.7.726.\n\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/slides_session01.html#footnotes",
    "href": "sessions/slides_session01.html#footnotes",
    "title": "Session 1: Introduction to Version Control",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe Turing Way Community (2022), see ‚ÄúGuide on Reproducible Research‚Äù\nfor example, in Psychology: Cr√ºwell et al. (2023); Hardwicke et al. (2021); Obels et al. (2020); Wicherts et al. (2006)\nsee Baker (2016), Nature\nsee e.g., Poldrack (2019)\nsee Smaldino & McElreath (2016)\n(Source: Wikipedia)\npull requests on GitHub, merge requests on GitLab"
  },
  {
    "objectID": "sessions/slides_session12.html#schedule",
    "href": "sessions/slides_session12.html#schedule",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session12.html#last-session-github-with-the-world-1",
    "href": "sessions/slides_session12.html#last-session-github-with-the-world-1",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Last session: Git(Hub) with the world",
    "text": "Last session: Git(Hub) with the world\n https://github.com/lnnrtwttkhn/city-guide/pulls"
  },
  {
    "objectID": "sessions/slides_session12.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session12.html#last-sessions-learning-objectives",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nGitHub Advanced\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch.\nIssues\nüí° You understand the purpose of GitHub Issues. üí° You can create and manage Issues. üí° You can reference an Issue in another issue. üí° You can close an Issue with a commit or pull request."
  },
  {
    "objectID": "sessions/slides_session12.html#questions-about-the-last-session",
    "href": "sessions/slides_session12.html#questions-about-the-last-session",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Questions about the last session?",
    "text": "Questions about the last session?"
  },
  {
    "objectID": "sessions/slides_session12.html#meta-session-title",
    "href": "sessions/slides_session12.html#meta-session-title",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Tags, Releases & Publication",
    "text": "Tags, Releases & Publication"
  },
  {
    "objectID": "sessions/slides_session12.html#example-1-matlab-code-for-an-experimental-task-in-research",
    "href": "sessions/slides_session12.html#example-1-matlab-code-for-an-experimental-task-in-research",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Example 1: MATLAB code for an experimental task in research",
    "text": "Example 1: MATLAB code for an experimental task in research\n\n\n\n\n\n https://github.com/lnnrtwttkhn/highspeed-task\n See Code Availability Statement of paper:\n\nAll code to run the behavioral task can be found at (https://github.com/lnnrtwttkhn/highspeed-task; https://doi.org/10.5281/zenodo.4305888)\n\n\n\nAdvantages\n\nReusability: Code is on GitHub and can be forked, reviewed, reused, extended, etc.\nReproducibility: The specific version that was used in the original study is tagged.\nModularity: Other researchers can independently reuse only the code for the experimental task.\nBackup: Code can be accessedd in at least two locations.\nIndependence: If GitHub disappears, a copy of the code is still on Zenodo.\nRecognition: Other researchers can cite the code + views and downloads metrics on Zenodo."
  },
  {
    "objectID": "sessions/slides_session12.html#example-2-code-releases-in-software-development",
    "href": "sessions/slides_session12.html#example-2-code-releases-in-software-development",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Example 2: Code releases in software development",
    "text": "Example 2: Code releases in software development\n https://github.com/lnnrtwttkhn/version-control-book/releases/tag/v1.0\n\n\nAdvantages (non-exhaustive list)\n\nAutomated Change Log based on PR titles\nAutomated appreciation of new contributors"
  },
  {
    "objectID": "sessions/slides_session12.html#this-sessions-learning-objectives",
    "href": "sessions/slides_session12.html#this-sessions-learning-objectives",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "This session‚Äôs learning objectives",
    "text": "This session‚Äôs learning objectives\nüí° You understand why Git Tags matter in version control and project management. üí° You know the difference between lightweight and annotated tags and how to apply them. üí° You can push and pull tags to a remote repository (e.g., GitHub). üí° You understand how GitHub releases complement Git Tags. üí° You can use Zenodo to archive your repository and make your work citable."
  },
  {
    "objectID": "sessions/slides_session12.html#reading",
    "href": "sessions/slides_session12.html#reading",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Reading",
    "text": "Reading\n ‚ÄúTags & Releases‚Äù"
  },
  {
    "objectID": "sessions/slides_session12.html#tasks",
    "href": "sessions/slides_session12.html#tasks",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúTags & Releases‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session12.html#var-course.project-project",
    "href": "sessions/slides_session12.html#var-course.project-project",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou created an annotated Tag and a GitHub Release.\nYou linked the release to Zenodo‚Äôs sandbox and minted a DOI.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session12.html#exercises",
    "href": "sessions/slides_session12.html#exercises",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\nTask 1: Create a Tag\n\nPreparation: Clean-up your repo, merge any changes that you still want to integrate\nPublish your repo: Go to ‚ÄúSettings‚Äù, click ‚ÄúGeneral‚Äù, scroll down and change repository visibility\nCreate an annotated tag on the main branch in your city-guide repo named v1.0.0.\nPush the Tag to GitHub\n\n\n\n\n\nTask 2: Create a Zenodo account and link it to GitHub\n\nCreate a Zenodo account by visiting the Zenodo website and signing up.\nLink your GitHub account to Zenodo\nGo to the GitHub section in the Zenodo sandbox and enable syncing your city-guide repository\n\n\n\n\n\nTask 2: Create a GitHub Release and mint a DOI\n\nGo to your repository on GitHub.\nClick on ‚ÄúReleases‚Äù then ‚ÄúDraft a new release‚Äù.\nChoose the tag v1.0.0 from the list\nFill in the release title and description.\nClick ‚ÄúPublish release‚Äù.\nGo to the GitHub section in the Zenodo sandbox and look at your DOI"
  },
  {
    "objectID": "sessions/slides_session12.html#solutions",
    "href": "sessions/slides_session12.html#solutions",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Solutions",
    "text": "Solutions\nCreate a lightweight or an annotated tag named v1.0.0.\n\nFor a lightweight tag:\n\ngit tag v1.0.0\nFor an annotated tag:\ngit tag -a v1.0.0 -m \"Release version 1.0.0\"\n\nPush the tag to GitHub:\n\ngit push origin v1.0.0\nCreate a GitHub Release\n\nGo to your repository on GitHub.\nClick on ‚ÄúReleases‚Äù then ‚ÄúDraft a new release‚Äù.\nChoose the tag v1.0.0 from the list\nFill in the release title and description.\nClick ‚ÄúPublish release‚Äù.\n\nLink a Zenodo Record\n\nConnect your GitHub repository to Zenodo.\n\n\nGo to Zenodo and log in.\n\n\nFollow Zenodo‚Äôs instructions to link your repository:\n\n\nGo to the ‚ÄúGitHub‚Äù tab in your Zenodo settings. Navigate to Settings in Zenodo. Click on the GitHub tab.\nEnable the repository for Zenodo integration. Find your GitHub repository in the list and toggle the switch to enable it for Zenodo integration.\n\n\nCreate a new release on GitHub to trigger Zenodo to archive your repository and mint a DOI.\n\n\nGo back to GitHub and create a new release (as described in the Create a GitHub Release section). This will trigger Zenodo to archive your repository and mint a DOI for the release."
  },
  {
    "objectID": "sessions/slides_session12.html#next-week-practice-with-guis-course-evaluation",
    "href": "sessions/slides_session12.html#next-week-practice-with-guis-course-evaluation",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Next week: Practice with GUIs (+ course evaluation!)",
    "text": "Next week: Practice with GUIs (+ course evaluation!)\n‚Ä¶ following popular request\n\n\n\n\nIntegrated Development Environments (IDEs)\nRStudio\n\n\n\n\n\n\n\n\nMATLAB\n\n\n\n\n\n\n\n\n\nGit Clients\nGitKraken\n\n\n\n\n\n\n\n\nGitHub Desktop\n\n\n\n\n\n\n\n\n\nMobile\nWorking Copy (iOS)"
  },
  {
    "objectID": "sessions/slides_session12.html#homework",
    "href": "sessions/slides_session12.html#homework",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Homework",
    "text": "Homework\n\nSign-up for GitHub Education to get access to the Student Developer Pack\nInstall GitKraken and sign-up with your GitHub account\nüöÄ Optional: Check out other Git GUIs that you‚Äôd like to try (e.g., RStudio)"
  },
  {
    "objectID": "sessions/slides_session12.html#from-session-1-your-role",
    "href": "sessions/slides_session12.html#from-session-1-your-role",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "From session 1: Your role",
    "text": "From session 1: Your role\n\n\nActive participation\n\nThis is a pass / fail course. You pass if you fulfill all course requirements:\nRequirement 1: Come to at least 12 out of 14 sessions (85%)\nRequirement 2: Complete all surveys/quizzes\nRequirement 3: Complete all mandatory exercises (implemented in Git)\n\n\n\n\nHow do we verify the course requirements?\n\nRequirement 1: Sign the attendance list\nRequirement 2: Provide a personal codeword. At the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor). We will send our secretary a list of personal codewords and she will return a list of names.\nRequirement 3: We check your GitHub repositories."
  },
  {
    "objectID": "sessions/slides_session12.html#your-tasks",
    "href": "sessions/slides_session12.html#your-tasks",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Your tasks",
    "text": "Your tasks\nIn order to pass this course, you should have accomplished the following tasks:\n\n\nYou have a public city-guide repository on GitHub (Sessions 03, 08, 12).\nYou added a text file (e.g., .qmd or .txt) with at least one city recommendation to the repository (Session 03).\nYou added a .gitignore file (ignoring a random file like an image) to the repository (Sessions 04, 05).\nYou created and merged a branch in your repository (Session 06).\nYou created a pull request in a partner‚Äôs repository, e.g., by adding a new recommendation (Sessions 09, 10).\nYou reviewed and merged the pull request of a partner in your city-guide repository (Sessions 09, 10).\nYou created an issue in Lennart‚Äôs city-guide repository, a pull request from a fork fixing the issue, you implemented all additional requests and your pull request was approved and merged by Lennart (Session 11).\nYou created a release of your city-guide repository on GitHub (Session 12).\nYou completed all quizzes (see next slide).\nYou completed the extra assignment (if necessary, see next slide)."
  },
  {
    "objectID": "sessions/slides_session12.html#quiz-participation",
    "href": "sessions/slides_session12.html#quiz-participation",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Quiz participation",
    "text": "Quiz participation\nIn order to pass this course, you should have completed all quizzes:\n\nIntro\nCommand Line\nGit Basics\nBranches\nGitHub\n\n\n\nHow to verify participation\n\nAt the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor), not to us!\nOur secretary sends us an unsorted list with codewords.\nWe verify the quiz participation for each codeword and send Christine a list with codewords that completed all quizzes.\nChristine compares the codewords with your names and send us an unsorted list with names."
  },
  {
    "objectID": "sessions/slides_session12.html#missed-more-than-two-sessions",
    "href": "sessions/slides_session12.html#missed-more-than-two-sessions",
    "title": "Session 12: Tags, Releases & Publication",
    "section": "Missed more than two sessions?",
    "text": "Missed more than two sessions?\nWe will send you an email with an extra assignment.\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/slides_session10.html#schedule",
    "href": "sessions/slides_session10.html#schedule",
    "title": "Session 9: Repetition & Practice",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session10.html#last-session-github---collaboration-1",
    "href": "sessions/slides_session10.html#last-session-github---collaboration-1",
    "title": "Session 9: Repetition & Practice",
    "section": "Last session: GitHub - Collaboration",
    "text": "Last session: GitHub - Collaboration\n https://lennartwittkuhn.com/version-control-book/chapters/github-advanced.html"
  },
  {
    "objectID": "sessions/slides_session10.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session10.html#last-sessions-learning-objectives",
    "title": "Session 9: Repetition & Practice",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch."
  },
  {
    "objectID": "sessions/slides_session10.html#reminders-faq",
    "href": "sessions/slides_session10.html#reminders-faq",
    "title": "Session 9: Repetition & Practice",
    "section": "Reminders / FAQ",
    "text": "Reminders / FAQ\n\n\n ‚ÄúRemember to cd in your city-guide project folder!‚Äù\n\nEvery time you open the command line, it starts at a default location (likely your home directory).\nCheck in which folder you are, using pwd (‚Äúprint working directory‚Äù).\nUse cd to move to your city-guide project folder before you start running the Git commands.\n\n\n\n\n ‚ÄúMy password is not shown!‚Äù\n\nSometimes, for example, when creating an SSH key, you are asked for a password.\nUsually, a key symbol appears \nThe command line registers your password although you can‚Äôt see it!\nCopy-pasting works too!\n\n\nGenerating public/private ed25519 key pair.\nEnter file in which to save the key (/Users/user/.ssh/id_ed25519):\nCreated directory '/Users/user/.ssh'.\nEnter passphrase (empty for no passphrase): # now just enter your password!"
  },
  {
    "objectID": "sessions/slides_session10.html#questions-from-last-session",
    "href": "sessions/slides_session10.html#questions-from-last-session",
    "title": "Session 9: Repetition & Practice",
    "section": "Questions from last session",
    "text": "Questions from last session\n\n\n ‚ÄúRemember to clone your collaborator‚Äôs repository to a different location (not into your city-guide project folder!)‚Äù\n\ncd out of your city-guide project folder\nClone into a different folder git clone git@github.com:partner-name/repo-name.git city-guide-partner\n\n\n\n\n ‚ÄúRemember to use the SSH URL (not HTTPS) when cloning or configuring the remote repository!‚Äù\n\nWhen you authenticate via SSH, you need to use the SSH URL!\nThis is relevant when your are configuring the remote, cloning a repository ‚Ä¶\n\n\n\n\nCode (HTTPS)\n\ngit remote add origin https://github.com/user-name/repo-name.git\n\n\n\n\n\nCode (SSH)\n\ngit remote add origin git@github.com:user-name/repo-name.git\n\n\n\n\n\n ‚ÄúMy files don‚Äôt all show up on GitHub?!‚Äù\n\nGitHub is no cloud sharing that synchronizes all files in a folder automatically!\nRemember: Only files that are tracked by Git (that you added (git add), committed (git commit) to the repository) and then pushed (git push) are also transferred to GitHub.\nFiles that are untracked (check with git status) or ignored by .gitignore will not be transferred to GitHub, even if they are present in your local Git repository."
  },
  {
    "objectID": "sessions/slides_session10.html#more-questions-about-the-last-session",
    "href": "sessions/slides_session10.html#more-questions-about-the-last-session",
    "title": "Session 9: Repetition & Practice",
    "section": "More questions about the last session?",
    "text": "More questions about the last session?"
  },
  {
    "objectID": "sessions/slides_session10.html#meta-session-title",
    "href": "sessions/slides_session10.html#meta-session-title",
    "title": "Session 9: Repetition & Practice",
    "section": "Repetition & Practice",
    "text": "Repetition & Practice\n\n\n\n\nImage from Techdobz"
  },
  {
    "objectID": "sessions/slides_session10.html#github-flow",
    "href": "sessions/slides_session10.html#github-flow",
    "title": "Session 9: Repetition & Practice",
    "section": "GitHub Flow",
    "text": "GitHub Flow\n\n\n\n\nImage from Sebass van Boxel"
  },
  {
    "objectID": "sessions/slides_session10.html#this-and-last-sessions-learning-objectives",
    "href": "sessions/slides_session10.html#this-and-last-sessions-learning-objectives",
    "title": "Session 9: Repetition & Practice",
    "section": "This and last session‚Äôs learning objectives",
    "text": "This and last session‚Äôs learning objectives\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch."
  },
  {
    "objectID": "sessions/slides_session10.html#reading",
    "href": "sessions/slides_session10.html#reading",
    "title": "Session 9: Repetition & Practice",
    "section": "Reading",
    "text": "Reading\n ‚ÄúGitHub - Advanced‚Äù"
  },
  {
    "objectID": "sessions/slides_session10.html#cheatsheet",
    "href": "sessions/slides_session10.html#cheatsheet",
    "title": "Session 9: Repetition & Practice",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit blame\nShows the authorship and commit information of each line in a file"
  },
  {
    "objectID": "sessions/slides_session10.html#tasks",
    "href": "sessions/slides_session10.html#tasks",
    "title": "Session 9: Repetition & Practice",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúGitHub - Advanced‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session10.html#var-course.project-project",
    "href": "sessions/slides_session10.html#var-course.project-project",
    "title": "Session 9: Repetition & Practice",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou collaborated successfully on a shared project by adding and committing changes to a partner‚Äôs repository.\nYou created and reviewed a pull request to integrate new content from a partner.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your favorite things to do to relax and recharge.\nAdd the recommendation of your partner to your text file or Quarto file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session10.html#exercises",
    "href": "sessions/slides_session10.html#exercises",
    "title": "Session 9: Repetition & Practice",
    "section": "Exercises",
    "text": "Exercises\n‚ÄúPrivate‚Äù collaboration with pull requests (using GitHub Flow)\n\nAdd your exercise partner as a collaborator to your project repository on GitHub.\nClone your partner‚Äôs repository.\nCreate a new branch in your collaborator‚Äôs repository.\nAdd a new entry to your collaborator‚Äôs project file (e.g., .txt or .qmd (if you are unsure, where to add the entry, ask your collaborator!)\nAdd and commit the changes.\nPush the changes on the new branch to the remote repository.\nCreate a Pull Request (on GitLab: Merge Request).\nReview the Pull Request that your collaborator made in your repository.\nüöÄ Optional: Add additional changes on the branch pushed by your collaborator.\nMerge the pull request into your repository.\n\n\n\nAdd a README.md\n\nFind the option to create a new file on your remote repository in the browser.\nName the file README.md, add a brief description, and provide a commit message.\nüöÄ Optional: Play around with Markdown syntax.\nSave the README.md file to the repository.\nPull the changes to your local repository."
  },
  {
    "objectID": "sessions/slides_session10.html#bonus-exercises",
    "href": "sessions/slides_session10.html#bonus-exercises",
    "title": "Session 9: Repetition & Practice",
    "section": "Bonus exercises",
    "text": "Bonus exercises\nüöÄ Optional: Clean up your repository\nFiles that your repository should include:\n\na city-guide.qmd (see exercise in Session 07 on ‚ÄúQuarto‚Äù) or city-guide.txt file (see exercises starting in Session 02), or a similarly named file that includes the entries for the city-guide project\na .gitignore file (see exercise in Session 04 on ‚ÄúBasic Git workflow‚Äù)\na README.md file (see exercise in Session 09 on ‚ÄúRepetition & Practice‚Äù)\n\nWhile this is not mandatory, please try to remove any unnecessary files or clutter, like empty .txt files from your repository. You can delete files directly on GitHub by clicking on the three dots next to the directory or file and selecting ‚ÄúDelete file,‚Äù then commit the changes. This effectively runs git add and git commit on GitHub. Alternatively, delete them from your local repository, add, commit and push the changes to GitHub."
  },
  {
    "objectID": "sessions/slides_session08.html#schedule",
    "href": "sessions/slides_session08.html#schedule",
    "title": "Session 8: Remotes - Introduction",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session08.html#last-session-quarto-workshop-1",
    "href": "sessions/slides_session08.html#last-session-quarto-workshop-1",
    "title": "Session 8: Remotes - Introduction",
    "section": "Last session: Quarto Workshop",
    "text": "Last session: Quarto Workshop\n https://lennartwittkuhn.com/version-control-course-uhh-ss24/sessions/session06"
  },
  {
    "objectID": "sessions/slides_session08.html#last-session-questions-about-quarto",
    "href": "sessions/slides_session08.html#last-session-questions-about-quarto",
    "title": "Session 8: Remotes - Introduction",
    "section": "Last session: Questions about Quarto?",
    "text": "Last session: Questions about Quarto?\n\n\nCool, Quarto, but what now?\n\nWe encourage you do use the city-guide.qmd from now on to develop your city-guide project!\n\nYou can move all content from city-guide.txt to city-guide.qmd.\nMotivation: We can later turn your city-guide repository into a website (see Lennart‚Äôs example)\n\nYou can also just continue using the city-guide.txt file.\nReminder: It‚Äôs about implementing the Git exercises. It does not matter if you use a .qmd, .txt or another file."
  },
  {
    "objectID": "sessions/slides_session08.html#meta-session-title",
    "href": "sessions/slides_session08.html#meta-session-title",
    "title": "Session 8: Remotes - Introduction",
    "section": "Remotes - Introduction",
    "text": "Remotes - Introduction\n\nImage from Techdobz"
  },
  {
    "objectID": "sessions/slides_session08.html#reading",
    "href": "sessions/slides_session08.html#reading",
    "title": "Session 8: Remotes - Introduction",
    "section": "Reading",
    "text": "Reading\n ‚ÄúRemotes: Introduction‚Äù"
  },
  {
    "objectID": "sessions/slides_session08.html#learning-objectives",
    "href": "sessions/slides_session08.html#learning-objectives",
    "title": "Session 8: Remotes - Introduction",
    "section": "Learning objectives",
    "text": "Learning objectives\nRemotes - Introduction\nüí° You can create a remote repository. üí° You can connect your local Git repository to a remote repository service like GitHub or GitLab. üí° You can pull and push changes to and from a remote repository. üí° You can clone a repository from a remote repository."
  },
  {
    "objectID": "sessions/slides_session08.html#cheatsheet",
    "href": "sessions/slides_session08.html#cheatsheet",
    "title": "Session 8: Remotes - Introduction",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit remote\nManages remote repositories\n\n\ngit clone\nCreates a local copy of a repository\n\n\ngit pull\nFetches and merges the latest changes from a remote repository into the current branch\n\n\ngit fetch\nUpdates remote tracking branches\n\n\ngit push\nUploads local commits to a remote repository"
  },
  {
    "objectID": "sessions/slides_session08.html#tasks",
    "href": "sessions/slides_session08.html#tasks",
    "title": "Session 8: Remotes - Introduction",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúRemotes: Introduction‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session08.html#var-course.project-project",
    "href": "sessions/slides_session08.html#var-course.project-project",
    "title": "Session 8: Remotes - Introduction",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou created a new private(!) GitHub repository using SSH.\nYou set the remote URL of your local city-guide Git repository.\nYou uploaded (i.e., ‚Äúpushed‚Äù) the default branch (main or master) of your city-guide project to GitHub.\nYou invited Lennart (lnnrtwttkhn) and Reza (rezahakimazar) to your city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your favorite place for a night out (dinner ü•ò, drinks üçπ , dance üíÉ, concert üéµ).\nAdd the recommendation of your partner to your text file or Quarto file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session08.html#exercises",
    "href": "sessions/slides_session08.html#exercises",
    "title": "Session 8: Remotes - Introduction",
    "section": "Exercises",
    "text": "Exercises\nConnect to remote repositories using SSH\n\nGenerate an SSH key.\nCopy the SSH key to your clipboard.\nAdd the SSH key to the remote repository (for example, GitHub or GitLab).\n\nUpload your local repository to a remote repository\n\nCreate an empty repository on the remote repository hosting platform, for example GitHub or GitLab. Make sure to not initialize the repository with any files!\nIf needed, navigate to your project repository using the command line.\nSet the remote URL of your local repository to your remote repository.\nPush the changes on your default branch (main or master) to your remote repository."
  },
  {
    "objectID": "sessions/slides_session08.html#bonus-exercises",
    "href": "sessions/slides_session08.html#bonus-exercises",
    "title": "Session 8: Remotes - Introduction",
    "section": "Bonus exercises",
    "text": "Bonus exercises\nüöÄ Optional: Add a README.md\n\nFind the option to create a new file on your remote repository in the browser.\nName the file README.md, add a brief description, and provide a commit message.\nüöÄ Optional: Play around with Markdown syntax.\nSave the README.md file to the repository.\nPull the changes to your local repository.\n\nüöÄ Optional: Clone and sync your repository\n\nMove to a location on your computer where you want to clone a repository.\nClone your remote repository to a different location on your computer.\nStage and commit changes in the new location (consider using a new branch).\nPush these new changes to GitHub.\nPull the changes to the repository in the original location.\nDelete your newly cloned repository."
  },
  {
    "objectID": "sessions/slides_session08.html#solutions",
    "href": "sessions/slides_session08.html#solutions",
    "title": "Session 8: Remotes - Introduction",
    "section": "Solutions",
    "text": "Solutions\nConnect to remote repositories using SSH\n\n\n\nCode\n\n#!/bin/bash\n\nssh-keygen -t ed25519 -C \"your_email@example.com\" # &lt;1&gt;\ncat ~/.ssh/id_ed25519.pub # &lt;2&gt;\n# Copy the SSh key to your account # &lt;3&gt;\n\n\n\nIn the command line, create a new SSH key. Make sure to change the example email to your email address. Optionally, provide a passphrase.\nCopy the SSH key to your clipboard. Here, we use cat to print the contents of the SSH key to the command line. Copy the contents displayed in the Terminal to your clipboard.\nAdd the SSH key to your remote repository account."
  },
  {
    "objectID": "sessions/slides_session08.html#solutions-1",
    "href": "sessions/slides_session08.html#solutions-1",
    "title": "Session 8: Remotes - Introduction",
    "section": "Solutions",
    "text": "Solutions\nUpload your local repository to a remote repository\n\n\n\nCode\n\n#!/bin/bash\n\n# create an empty remote repository # &lt;1&gt;\ncd my-project # &lt;2&gt;\ngit remote add origin https://github.com/your-username/your-repo-name.git # &lt;3&gt;\ngit push -u origin main # &lt;4&gt;\n\n\n\nTo create an empty repository on GitHub: (1) Go to GitHub and click the + icon in the upper-right corner, then select New repository. (2) Name your repository. (3) Do not select Initialize this repository with a README. (4) Click Create repository.\nOptional: Navigate into the project repository using cd (or a similar path).\nSet the remote URL of the local repository to the repository using git remote add origin &lt;URL&gt;. Remember to use the correct &lt;URL&gt; depending on whether you authentication method (typically SSH or PAT).\nPush the changes on the default branch (here, main) to the remote repository using git push -u origin main."
  },
  {
    "objectID": "sessions/slides_session08.html#solutions-2",
    "href": "sessions/slides_session08.html#solutions-2",
    "title": "Session 8: Remotes - Introduction",
    "section": "Solutions",
    "text": "Solutions\nüöÄ Optional: Add a README.md\n\nIn your browser, go to your remote repository (for example, on GitHub), click Add file, and select Create new file.\nName the file README.md. Add a brief description of your project. Provide a descriptive commit message at the bottom.\nPlay around with Markdown syntax\nClick the green Commit new file button to save the README.md file to the repository.\nUse git pull origin main to pull the changes to your local repository."
  },
  {
    "objectID": "sessions/slides_session08.html#solutions-3",
    "href": "sessions/slides_session08.html#solutions-3",
    "title": "Session 8: Remotes - Introduction",
    "section": "Solutions",
    "text": "Solutions\nüöÄ Optional: Clone and sync your repository\n\n\n\nCode\n\n#!/bin/bash\n\ncd /new/location/for/repo # &lt;1&gt;\ngit clone https://github.com/your-username/your-repo-name.git /new/location/for/repo # &lt;2&gt;\ngit checkout -b new-branch # &lt;3&gt;\necho \"New Recipe\" &gt;&gt; recipes.txt # &lt;3&gt;\ngit add recipes.txt  # &lt;3&gt;\ngit commit -m \"Add new recipe to recipes.txt\" # &lt;3&gt;\ngit push -u origin new-branch # &lt;4&gt;\ncd /original/location/for/repo # &lt;5&gt;\ngit fetch # &lt;5&gt;\ngit switch new-branch # &lt;5&gt;\nrm -rf /new/location/for/repo # &lt;6&gt;\n\n\n\nMove to the location on your computer where you would like to clone your own repository into, using cd in the command line.\nClone your repository from GitHub to a different location on your computer.\nStage and commit changes in the new location (consider using a new branch).\nPush the new changes to GitHub.\nFetch these new changes to the repository in the original location.\nDelete your newly cloned repository.\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/session03.html",
    "href": "sessions/session03.html",
    "title": "First steps with Git",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: Installation\n  \n  \n    \n     Chapter: Setup\n  \n  \n    \n     Chapter: First steps with Git\n  \n  \n    \n     Survey: Installation"
  },
  {
    "objectID": "sessions/session03.html#this-session",
    "href": "sessions/session03.html#this-session",
    "title": "First steps with Git",
    "section": "This session",
    "text": "This session\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúSetup‚Äù and ‚ÄúFirst steps with Git‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session03.html#learning-objectives",
    "href": "sessions/session03.html#learning-objectives",
    "title": "First steps with Git",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nSetup\nüí° You know how to set up Git for the first time üí° You have set up Git on your computer üí° You understand the difference between the three Git configuration levels üí° You know how to configure your username and email address in Git üí° You have set up your preferred text editor when working with Git üí° You can escape the command-line text editor Vim\n\n\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description."
  },
  {
    "objectID": "sessions/session03.html#var-course.project-project",
    "href": "sessions/session03.html#var-course.project-project",
    "title": "First steps with Git",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou set up Git.\nYou initialized your city-guide folder as a Git repository.\nYou committed your first file to the city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session03.html#exercises",
    "href": "sessions/session03.html#exercises",
    "title": "First steps with Git",
    "section": "Exercises",
    "text": "Exercises\n\nConfigure Git\n\nIf needed, navigate into the project folder using the command line.\nSet your Git username.\nSet your Git email address.\nChange the default name of the initial branch to main\nüöÄ Optional: Change your default text editor.\nList the Git configuration settings.\n\n\n\nInitialize a Git repository\n\nIf needed, navigate to the project folder using the command line.\nInitialize a new Git repository in the project folder.\n\n\n\nAdd content and commit changes\n\nCreate a new text file and name it appropriately.\nAdd a short entry to the text file (any favorite or an intriguing AI-generated one).\nStage the new file.\nCommit the changes in the text file with a descriptive commit message.\n\nüöÄ Optional: Commit at least three additional changes in your new file."
  },
  {
    "objectID": "sessions/session03.html#slides",
    "href": "sessions/session03.html#slides",
    "title": "First steps with Git",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session03.html#cheatsheet",
    "href": "sessions/session03.html#cheatsheet",
    "title": "First steps with Git",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\nSetup\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit config\nGet an overview of Git config commands\n\n\ngit config --global user.name \"user.name\"\nSets Git username\n\n\ngit config --global user.email \"user.email\"\nSets Git email address\n\n\ngit config --global core.editor \"editorname\"\nSets Git text editor\n\n\ngit config --global init.defaultBranch main\nSets default branch name to main\n\n\ngit config --list\nViews set Git configurations\n\n\n\n\n\n\n\nFirst steps with Git\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit init\nInitializes a folder as a Git repository\n\n\ngit status\nShows Git tracking status of files in the repository\n\n\ngit add\nAdds file(s) to the staging area\n\n\ngit commit\nCommits staged files\n\n\ngit commit -m \"commit message\"\nCommits staged files with a commit message"
  },
  {
    "objectID": "sessions/session12.html",
    "href": "sessions/session12.html",
    "title": "Tags, Releases & Publication",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Tags & Releases"
  },
  {
    "objectID": "sessions/session12.html#learning-objectives",
    "href": "sessions/session12.html#learning-objectives",
    "title": "Tags, Releases & Publication",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You understand why Git Tags matter in version control and project management. üí° You know the difference between lightweight and annotated tags and how to apply them. üí° You can push and pull tags to a remote repository (e.g., GitHub). üí° You understand how GitHub releases complement Git Tags. üí° You can use Zenodo to archive your repository and make your work citable."
  },
  {
    "objectID": "sessions/session12.html#var-course.project-project",
    "href": "sessions/session12.html#var-course.project-project",
    "title": "Tags, Releases & Publication",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou created an annotated Tag and a GitHub Release.\nYou linked the release to Zenodo‚Äôs sandbox and minted a DOI.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session12.html#slides",
    "href": "sessions/session12.html#slides",
    "title": "Tags, Releases & Publication",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/slides_session14.html#schedule-1",
    "href": "sessions/slides_session14.html#schedule-1",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session14.html#last-session-tags-releases-and-publishing-1",
    "href": "sessions/slides_session14.html#last-session-tags-releases-and-publishing-1",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Last session: Tags, Releases and Publishing",
    "text": "Last session: Tags, Releases and Publishing\n https://lennartwittkuhn.com/version-control-book/chapters/tags-and-releases.html"
  },
  {
    "objectID": "sessions/slides_session14.html#your-questions-about-the-last-session",
    "href": "sessions/slides_session14.html#your-questions-about-the-last-session",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Your questions about the last session?",
    "text": "Your questions about the last session?"
  },
  {
    "objectID": "sessions/slides_session14.html#from-session-1-your-role",
    "href": "sessions/slides_session14.html#from-session-1-your-role",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "From session 1: Your role",
    "text": "From session 1: Your role\n\n\nActive participation\n\nThis is a pass / fail course. You pass if you fulfill all course requirements:\nRequirement 1: Come to at least 11 out of 13 sessions (85%)\nRequirement 2: Complete all surveys/quizzes\nRequirement 3: Complete all mandatory exercises (implemented in Git)\n\n\n\n\nHow do we verify the course requirements?\n\nRequirement 1: Sign the attendance list\nRequirement 2: Provide a personal codeword. At the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor). We will send our secretary a list of personal codewords and she will return a list of names.\nRequirement 3: We check your GitHub repositories."
  },
  {
    "objectID": "sessions/slides_session14.html#your-tasks",
    "href": "sessions/slides_session14.html#your-tasks",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Your tasks",
    "text": "Your tasks\nIn order to pass this course, you should have accomplished the following tasks:\n\nYou have a public recipes repository on GitHub.\nYou added a text file (e.g., .qmd or .txt) with at least one recipe to the repository.\nYou created a pull request in a partner‚Äôs repository (e.g., adding a new recipe).\nYou reviewed and merged the pull request of a partner in your recipes repository.\nYou create a pull request in Lennart‚Äôs recipes repository, you implemented all additional requests and your pull request was approved and merged by Lennart.\nYou implemented the changes suggested by Konrad in your recipes repository and closed the issue.\nYou created a release of your recipes repository on GitHub.\nYou completed all quizzes (see next slide).\nYou completed the extra assignment (if necessary, see next slide).\n\nDeadline: Please complete these tasks until end of July."
  },
  {
    "objectID": "sessions/slides_session14.html#quiz-participation",
    "href": "sessions/slides_session14.html#quiz-participation",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Quiz participation",
    "text": "Quiz participation\nIn order to pass this course, you should have completed all quizzes:\n\nCommand Line\nGit Basics\nBranches\nGitHub\n\n\n\nHow to verify participation\n\nAt the end of the semester, send an email with your personal codeword to sekretariat-luv.psych@uni-hamburg.de (Christine Manor), not to us!\nOur secretary sends us an unsorted list with codewords.\nWe verify the quiz participation for each codeword and send Christine a list with codewords that completed all quizzes.\nChristine compares the codewords with your names and send us an unsorted list with names."
  },
  {
    "objectID": "sessions/slides_session14.html#missed-more-than-two-sessions",
    "href": "sessions/slides_session14.html#missed-more-than-two-sessions",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Missed more than two sessions?",
    "text": "Missed more than two sessions?\nWe will send you an email with an extra assignment."
  },
  {
    "objectID": "sessions/slides_session14.html#your-feedack",
    "href": "sessions/slides_session14.html#your-feedack",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Your feedack",
    "text": "Your feedack\n‚Ä¶ following popular request\n\n[‚Ä¶] sometimes I loose track of where I am in the Git/GitHub Space. Maybe you can create a ‚Äúmap‚Äù on how the things are related and which codes get me from one point to another?\n\n\n[‚Ä¶] Could you explain how Github enables us to see the version history and how we can access files at different time points?\n\n\n[‚Ä¶] For the last seminar sessions it might be interesting to look more into GUIs for Git.\n\n\n[‚Ä¶] what about GUIs? Which one has which benefits and what are payment options? Git kraken looked really promising, is it worth it?\n\n\n[‚Ä¶] I definitely support the plan to practice what we‚Äôve learned so far so that I don‚Äôt forget about it once the semester is over."
  },
  {
    "objectID": "sessions/slides_session14.html#this-sessions-learning-objectives",
    "href": "sessions/slides_session14.html#this-sessions-learning-objectives",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "This session‚Äôs learning objectives",
    "text": "This session‚Äôs learning objectives\nüí° You understand the benefits of Git GUIs compared to the command line üí° You can name at least two Git operations that can be considered easier in a GUI compared to the command line üí° You try out different GUIs and become familiar with their features üí° You know how to manage branches in a GUI"
  },
  {
    "objectID": "sessions/slides_session14.html#todays-chapter",
    "href": "sessions/slides_session14.html#todays-chapter",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Today‚Äôs chapter",
    "text": "Today‚Äôs chapter\n https://lennartwittkuhn.com/version-control-book/chapters/gui.html"
  },
  {
    "objectID": "sessions/slides_session14.html#your-turn",
    "href": "sessions/slides_session14.html#your-turn",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Your turn",
    "text": "Your turn\n\n\n Content Review: Read the chapter ‚ÄúGUIs‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter! Play around! Have fun!.\nNote: Please complete the implementation exercises on the next slide\n\n\n\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session14.html#implementation-exercise",
    "href": "sessions/slides_session14.html#implementation-exercise",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Implementation Exercise",
    "text": "Implementation Exercise\n\n\nComplete the course requirements\nWe are here to help if you are stuck.\n\n\n\nDone? Collaborate with pull requests (using ‚ÄúGUIs‚Äù)\n\nFind a partner.\nUsing a GUI, clone their repository if not already done (and pull the newest version).\nCreate a new branch.\nCreate a new file called crazy_recipe.txt or crazy_recipe.qmd.\nInput three random ingredients and two kitchen utensils.\nAdd, commit and push the changes.\nCreate a Pull Request.\nReview the Pull Request from your partner and create a coherent recipe.\nMerge the Pull Request."
  },
  {
    "objectID": "sessions/slides_session14.html#graphical-user-interfaces-guis-for-git",
    "href": "sessions/slides_session14.html#graphical-user-interfaces-guis-for-git",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Graphical User Interfaces (GUIs) for Git",
    "text": "Graphical User Interfaces (GUIs) for Git\n\n\n\n\nIntegrated Development Environments (IDEs)\nRStudio\n\n\n\n\n\n\n\n\nMATLAB\n\n\n\n\n\n\n\n\n\nGit Clients\nGitKraken\n\n\n\n\n\n\n\n\nGitHub Desktop\n\n\n\n\n\n\n\n\n\nMobile\nWorking Copy (iOS)"
  },
  {
    "objectID": "sessions/slides_session14.html#continuous-integration-deployment-cicd",
    "href": "sessions/slides_session14.html#continuous-integration-deployment-cicd",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Continuous Integration & Deployment (CI/CD)",
    "text": "Continuous Integration & Deployment (CI/CD)\n\n\n\n\n\nfrom Suresoft\n\n\n\nExample: Lennart‚Äôs recipes repo\n\nAutomated spell check\nRebuilding of project website\n\n github.com/lnnrtwttkhn/recipes"
  },
  {
    "objectID": "sessions/slides_session14.html#version-control-for-data-datalad",
    "href": "sessions/slides_session14.html#version-control-for-data-datalad",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Version Control for data: DataLad",
    "text": "Version Control for data: DataLad\n\n\n\n‚Ä¶ for data (binary files) \n\n\n\nSadly, Git does not handle large files well. \n\n\n\n\n\n\n\n\ndatalad.org (from the DataLad Handbook by Wagner et al.)"
  },
  {
    "objectID": "sessions/slides_session14.html#jobs-1",
    "href": "sessions/slides_session14.html#jobs-1",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Jobs",
    "text": "Jobs"
  },
  {
    "objectID": "sessions/slides_session14.html#thank-you-1",
    "href": "sessions/slides_session14.html#thank-you-1",
    "title": "Session 14: Summary & Wrap-Up",
    "section": "Thank you!",
    "text": "Thank you!\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/session06.html",
    "href": "sessions/session06.html",
    "title": "Branches",
    "section": "",
    "text": "Slides\n  \n  \n    \n     Chapter: Branches\n  \n  \n    \n     Quiz"
  },
  {
    "objectID": "sessions/session06.html#this-session",
    "href": "sessions/session06.html#this-session",
    "title": "Branches",
    "section": "This session",
    "text": "This session\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúBranches‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/session06.html#learning-objectives",
    "href": "sessions/session06.html#learning-objectives",
    "title": "Branches",
    "section": "Learning objectives",
    "text": "Learning objectives\nüí° You understand the purpose and benefits of using branches in Git. üí° You can create and switch between branches. üí° You can merge branches and resolve merge conflicts. üí° You can name at least three best practices when working with branches."
  },
  {
    "objectID": "sessions/session06.html#var-course.project-project",
    "href": "sessions/session06.html#var-course.project-project",
    "title": "Branches",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou created a new branch and merged changes into your default branch (main or master).\nYou created and resolved a merge conflict.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/session06.html#exercises",
    "href": "sessions/session06.html#exercises",
    "title": "Branches",
    "section": "Exercises",
    "text": "Exercises\n\nCreate and merge a new branch\n\nIf needed, navigate to the project repository using the command line.\nCreate a new branch called feature.\nSwitch to the new branch.\nAdd a new entry to your project text file.\nStage and commit the changes to the project text file on the feature branch.\nView the contents of project text file to verify your changes.\nSwitch back to the default branch (main or master).\nView the contents of the project text file again to confirm that the previous changes do not exist on the default branch.\nMerge the feature branch into your default branch.\nDelete the feature branch.\nView the contents of project text file yet again to confirm that the previous changes have been merged into the default branch.\n\n\n\nCreate and resolve a merge conflict\n\nDeliberately create a merge conflict by editing the same section of a file on two separate branches and attempting to merge them. An example can be found in the branches chapter.\nResolve the merge conflict.\nDelete the merged branch afterwards."
  },
  {
    "objectID": "sessions/session06.html#slides",
    "href": "sessions/session06.html#slides",
    "title": "Branches",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\n\nHow can I download the slides as PDF?\n\n\n\n\n\nTo print the slides to PDF, do the following:\n\nToggle into Print View using the E key (or using the Navigation Menu).\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\nNote: This feature has been confirmed to work in Google Chrome, Chromium as well as in Firefox.\nHere‚Äôs what the Chrome print dialog would look like with these settings enabled:\n\nThese instructions were copied from the Quarto documentation (MIT License) and slightly modified."
  },
  {
    "objectID": "sessions/session06.html#cheatsheet",
    "href": "sessions/session06.html#cheatsheet",
    "title": "Branches",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit branch\nLists / creates and deletes branches\n\n\ngit branch feature\nCreates the feature branch\n\n\ngit branch -d feature\nDeletes the feature branch\n\n\ngit switch\nSwitches between branches\n\n\ngit switch feature\nSwitches to the feature branch\n\n\ngit checkout\nSwitches between branches\n\n\ngit checkout -b feature\nCreates and switches to the feature branch\n\n\ngit merge\nMerges branches\n\n\ngit merge feature\nMerges the feature branch into the current branch\n\n\ngit merge --abort\nAborts a merge\n\n\ngit merge --squash\nSquaches commits on branch into a single commit and merge\n\n\ngit stash\nStashes changes for later use\n\n\ngit stash -m \"stashing message\"\nStashes changes and includes a message\n\n\ngit stash list\nShows stored stashes\n\n\ngit stash apply\nApplies the latest stash\n\n\ngit stash apply stash@{n}\nApplies a specific stash\n\n\ngit stash pop\nApplies the latest stash and removes it from stash list\n\n\ngit stash pop stash@{n}\nApplies a specific stash and removes it from stash list\n\n\ngit cherry-pick &lt;commithash&gt;\nApplies changes from &lt;commithash&gt;\n\n\ngit rebase\nDifferent way of integrating changes from two branches"
  },
  {
    "objectID": "sessions/slides_session06.html#schedule",
    "href": "sessions/slides_session06.html#schedule",
    "title": "Session 6: Branches",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session06.html#i-need-help",
    "href": "sessions/slides_session06.html#i-need-help",
    "title": "Session 6: Branches",
    "section": "I need help!",
    "text": "I need help!\n\n\nHelp yourself\n\nLook at the solutions on the exercises page in the Version Control Book (or on each session‚Äôs slides)\nStart fresh with a ‚Äúprepared‚Äù repository: Download from the exercises page in the Version Control Book\n\n\n\n\nWe help you\n\nLet us know! Ask questions!\nSend an email with questions!\nAsk for an office hour!\n\n\n\n\nFellow students help you\n\nThis is a team exercise: We want everyone to keep up!\nDon‚Äôt be shy and ask for help from your session partner.\nIf you notice that your session partner needs help, please help them first (you will also deepen your knowledge by helping others)."
  },
  {
    "objectID": "sessions/slides_session06.html#questions-from-last-session",
    "href": "sessions/slides_session06.html#questions-from-last-session",
    "title": "Session 6: Branches",
    "section": "Questions from last session",
    "text": "Questions from last session\n\n\n ‚ÄúHow do we submit the exercises?‚Äù\n\nDuring later sessions, you will learn how to share your city-guide repository with us via GitHub.\nHow you implemented the exercises should be registered as Git commits in your repository.\nTherefore, we can - retrospectively - check if and how you implemented the exercises (yay, version control!).\n\n\n\n\n ‚ÄúHow can I make changes in a text (.txt) file?‚Äù\n\nRemember: It‚Äôs just a regular text file on your computer.\nOption 1: Use a regular text editor (e.g., TextEdit on macOS, Notepad++ on Windows).\nOption 2: Use vim directly from the command line (see chapter / session on ‚ÄúSetup‚Äù).\nOption 3: Use command line commands like echo \"My text\" &gt;&gt; city-guide.txt.\n\n\n\n\n ‚ÄúI ran git commit but nothing happened?‚Äù\n\nMaybe you forgot to run git add before?"
  },
  {
    "objectID": "sessions/slides_session06.html#staging-and-committing",
    "href": "sessions/slides_session06.html#staging-and-committing",
    "title": "Session 6: Branches",
    "section": "Staging and Committing",
    "text": "Staging and Committing\n\n\nStaging:\n\nCommand: git add\nPurpose: Preparing and organizing files before they are recorded in the repository‚Äôs history.\n\n\nCommitting:\n\nCommand: git commit -m \"commit message\"\nPurpose: Saving the changes in the staged files to the repository‚Äôs history, creating a snapshot.\n\n\n\n\n\n\n\n\n\nSource: git-scm.com\n\n\n\n\n\n\n\n\nSource: Heidi Seibold"
  },
  {
    "objectID": "sessions/slides_session06.html#last-session-git-essentials-1",
    "href": "sessions/slides_session06.html#last-session-git-essentials-1",
    "title": "Session 6: Branches",
    "section": "Last session: Git Essentials",
    "text": "Last session: Git Essentials\n https://lennartwittkuhn.com/version-control-book/chapters/git-essentials.html"
  },
  {
    "objectID": "sessions/slides_session06.html#last-sessionss-learning-objectives",
    "href": "sessions/slides_session06.html#last-sessionss-learning-objectives",
    "title": "Session 6: Branches",
    "section": "Last sessions‚Äôs learning objectives",
    "text": "Last sessions‚Äôs learning objectives\nGit Essentials\nüí° You know how to explore the commit history. üí° You can compare different commits. üí° You know how to use and create a .gitignore file. üí° You can discuss which files can (not) be tracked well with Git and why. üí° You know how to track empty folders in Git repositories.\n\n\ncity-guide project\nAt the end of this session, you should have accomplished the following:\n\nCommit at least three changes in city-guide.txt.\nMake at least one commit using git commit --amend.\n\nFor example, add a a new entry without a title first, commit, then add a title and use git commit --amend to add the title change to the same commit.\n\nCreate a .gitignore file.\n\nEveryone: Create a random file that you want to ignore, for example image.jpg.\nAll macOS users: Let your repository ignore .DS_Store.\n\nüöÄ Optional: Commit .gitkeep in an otherwise empty directory.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session06.html#recap-best-practices-for-commit-messages",
    "href": "sessions/slides_session06.html#recap-best-practices-for-commit-messages",
    "title": "Session 6: Branches",
    "section": "Recap: Best practices for commit messages",
    "text": "Recap: Best practices for commit messages\n\n\n\n\n\nTry to keep commit messages short (less than 72 characters)\nUse present tense and start with an imperative verb to indicate the purpose of the commit, for example ‚Äúadd‚Äù, ‚Äúfix‚Äù, ‚Äúimprove‚Äù (as if you are giving orders to the codebase to change its behavior)\n\n\nIf applied, this commit will ‚Ä¶ [your commit message]\n\n\nTry to describe why a change is being made\nLink specific issues that are addressed by your commit\nUse the description for more explanation and context"
  },
  {
    "objectID": "sessions/slides_session06.html#this-session-meta-session-title-1",
    "href": "sessions/slides_session06.html#this-session-meta-session-title-1",
    "title": "Session 6: Branches",
    "section": "This session: Branches",
    "text": "This session: Branches\n\nFigure¬†1: Image from Chapter ‚ÄúGit Branches‚Äù of the ‚ÄúThe Turing Way handbook to reproducible, ethical and collaborative data science‚Äù, used under a Creative Commons Attribution 4.0 License.\nIllustration of branches in a Git repository. Each circle represents a commit. Commits on the Main branch are shown in gray. The branch Feature A (blue circles) was created from the Main branch and later merged again. In-between, another branch Feature A-1 was created from the Feature A branch (green circles) and merged with that branch again before the Feature A branch was eventually merged with the Main branch. The branch Feature B was created but abandoned and not merged with the Main branch."
  },
  {
    "objectID": "sessions/slides_session06.html#reading",
    "href": "sessions/slides_session06.html#reading",
    "title": "Session 6: Branches",
    "section": "Reading",
    "text": "Reading\n ‚ÄúBranches‚Äù"
  },
  {
    "objectID": "sessions/slides_session06.html#learning-objectives",
    "href": "sessions/slides_session06.html#learning-objectives",
    "title": "Session 6: Branches",
    "section": "Learning objectives",
    "text": "Learning objectives\nBranches\nüí° You understand the purpose and benefits of using branches in Git. üí° You can create and switch between branches. üí° You can merge branches and resolve merge conflicts. üí° You can name at least three best practices when working with branches."
  },
  {
    "objectID": "sessions/slides_session06.html#tasks",
    "href": "sessions/slides_session06.html#tasks",
    "title": "Session 6: Branches",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúBranches‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session06.html#var-course.project-project-1",
    "href": "sessions/slides_session06.html#var-course.project-project-1",
    "title": "Session 6: Branches",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou created a new branch and merged changes into your default branch (main or master).\nYou created and resolved a merge conflict.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your favorite activity involving water.\nAdd the recommendation of your partner to your text file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session06.html#conversation-starter",
    "href": "sessions/slides_session06.html#conversation-starter",
    "title": "Session 6: Branches",
    "section": "Conversation starter",
    "text": "Conversation starter\n\n\n\nYour name?\nAre you based in Hamburg or Rotterdam?\nA (fun) fact about you? For example:\n\nWhat did you study before and where?\nWhat‚Äôs your hobby?\nDo you have a pet?\nWhat‚Äôs your favorite color?\nYour mood on an animals scale?"
  },
  {
    "objectID": "sessions/slides_session06.html#exercises-1",
    "href": "sessions/slides_session06.html#exercises-1",
    "title": "Session 6: Branches",
    "section": "Exercises 1",
    "text": "Exercises 1\nCreate and merge a new branch\n\nIf needed, navigate to the project repository using the command line.\nCreate a new branch called feature.\nSwitch to the new branch.\nAdd a new entry to your project text file.\nStage and commit the changes to the project text file on the feature branch.\nView the contents of project text file to verify your changes.\nSwitch back to the default branch (main or master).\nView the contents of the project text file again to confirm that the previous changes do not exist on the default branch.\nMerge the feature branch into your default branch.\nDelete the feature branch.\nView the contents of project text file yet again to confirm that the previous changes have been merged into the default branch."
  },
  {
    "objectID": "sessions/slides_session06.html#exercises-2",
    "href": "sessions/slides_session06.html#exercises-2",
    "title": "Session 6: Branches",
    "section": "Exercises 2",
    "text": "Exercises 2\nCreate and resolve a merge conflict\n\nDeliberately create a merge conflict by editing the same section of a file on two separate branches and attempting to merge them. An example can be found in the branches chapter.\nResolve the merge conflict.\nDelete the merged branch afterwards."
  },
  {
    "objectID": "sessions/slides_session06.html#solutions-create-and-merge-a-new-branch",
    "href": "sessions/slides_session06.html#solutions-create-and-merge-a-new-branch",
    "title": "Session 6: Branches",
    "section": "Solutions: Create and merge a new branch",
    "text": "Solutions: Create and merge a new branch\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\ngit branch feature # &lt;2&gt;\ngit switch feature # &lt;3&gt;\ncat &gt;&gt; city-guide.txt &lt;&lt;- EOM # &lt;4&gt;\n\nPaddle tour of the Alster canals\n\n- If you're not afraid of the water and would like to enjoy a really super day whilst at the same time doing a bit of upper body exercise, then why not pick up a paddle and work your way down the Alster canals in a canoe.\n- Just go to any one of the countless boat and canoe hire points on the Alster to begin your adventure.\n\ntaken from https://www.hamburg-travel.com/see-explore/sports-recreation/sports-physical-activity/paddle-tour-of-the-alster-canals/\nEOM\ngit add city-guide.txt # &lt;5&gt;\ngit commit -m \"Add paddle tour of the Alster canals to city-guide.txt\" # &lt;5&gt;\ncat city-guide.txt # &lt;6&gt;\ngit checkout main # &lt;7&gt;\ncat city-guide.txt # &lt;8&gt;\ngit merge feature # &lt;9&gt;\ngit branch -d feature # &lt;10&gt; \ncat city-guide.txt # &lt;11&gt;\n\n\n\nOptional: Navigate into the project repository using cd (or a similar path).\nCreate a new branch called feature using git branch feature.\nSwitch to the new branch using git switch feature. You can also create and switch the branch in one step using git checkout -b feature.\nAdd a new entry to your project text file file. You can use your regular text editor. Here, we add a new entry from the command line using cat.\nStage and commit the changes to your project text file using git add and git commit.\nView the contents of your project text file to verify your changes. Here, we use the cat command again.\nSwitch back to the default branch (main in this example). Here, we use git checkout main but you can also use git switch main.\nView the contents of your project text file again to confirm that the previous changes do not exist on the main branch.\nMerge the changes feature branch into the main branch.\nDelete the merged feature branch using git branch -d feature.\nView the contents of your project text file yet again to confirm that the previous changes have been merged into the main branch.\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/slides_session05.html#behind-the-scenes-interview-about-our-course",
    "href": "sessions/slides_session05.html#behind-the-scenes-interview-about-our-course",
    "title": "Session 5: Git Essentials",
    "section": "Behind-the-scenes: Interview about our course",
    "text": "Behind-the-scenes: Interview about our course\n https://lecture2go.uni-hamburg.de/l2go/-/get/v/70364"
  },
  {
    "objectID": "sessions/slides_session05.html#schedule",
    "href": "sessions/slides_session05.html#schedule",
    "title": "Session 5: Git Essentials",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session05.html#last-session-basic-git-workflow-1",
    "href": "sessions/slides_session05.html#last-session-basic-git-workflow-1",
    "title": "Session 5: Git Essentials",
    "section": "Last session: Basic Git workflow",
    "text": "Last session: Basic Git workflow\n lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html"
  },
  {
    "objectID": "sessions/slides_session05.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session05.html#last-sessions-learning-objectives",
    "title": "Session 5: Git Essentials",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nAfter the last session, you should now be able to answer the following questions / do the following:\n\n\nFirst steps with Git\nüí° You can initialize a Git repository. üí° You can check the status of a Git repository. üí° You understand the difference between the staging area and a commit. üí° You can stage and commit changes. üí° You understand the difference between a commit message and a description.\n\n\n\ncity-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou set up Git.\nYou initialized your city-guide folder as a Git repository.\nYou committed your first file to the city-guide repository.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions."
  },
  {
    "objectID": "sessions/slides_session05.html#reading",
    "href": "sessions/slides_session05.html#reading",
    "title": "Session 5: Git Essentials",
    "section": "Reading",
    "text": "Reading\n ‚ÄúGit Essentials‚Äù"
  },
  {
    "objectID": "sessions/slides_session05.html#learning-objectives",
    "href": "sessions/slides_session05.html#learning-objectives",
    "title": "Session 5: Git Essentials",
    "section": "Learning objectives",
    "text": "Learning objectives\nGit Essentials\nüí° You know how to explore the commit history. üí° You can compare different commits. üí° You know how to use and create a .gitignore file. üí° You can discuss which files can (not) be tracked well with Git and why. üí° You know how to track empty folders in Git repositories."
  },
  {
    "objectID": "sessions/slides_session05.html#tasks",
    "href": "sessions/slides_session05.html#tasks",
    "title": "Session 5: Git Essentials",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúGit Essentials‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session05.html#var-course.project-project-1",
    "href": "sessions/slides_session05.html#var-course.project-project-1",
    "title": "Session 5: Git Essentials",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nCommit at least three changes in city-guide.txt.\nMake at least one commit using git commit --amend.\n\nFor example, add a a new entry without a title first, commit, then add a title and use git commit --amend to add the title change to the same commit.\n\nCreate a .gitignore file.\n\nEveryone: Create a random file that you want to ignore, for example image.jpg.\nAll macOS users: Let your repository ignore .DS_Store.\n\nüöÄ Optional: Commit .gitkeep in an otherwise empty directory.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your favorite outdoor activity.\nAdd the recommendation of your partner to your text file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session05.html#conversation-starter",
    "href": "sessions/slides_session05.html#conversation-starter",
    "title": "Session 5: Git Essentials",
    "section": "Conversation starter",
    "text": "Conversation starter\n\n\n\nYour name?\nAre you based in Hamburg or Rotterdam?\nA (fun) fact about you? For example:\n\nWhat did you study before and where?\nWhat‚Äôs your hobby?\nDo you have a pet?\nWhat‚Äôs your favorite color?\nYour mood on a baby yoda scale?"
  },
  {
    "objectID": "sessions/slides_session05.html#exercises-from-last-time",
    "href": "sessions/slides_session05.html#exercises-from-last-time",
    "title": "Session 5: Git Essentials",
    "section": "Exercises (from last time)",
    "text": "Exercises (from last time)\nInitialize a Git repository\n\nIf needed, navigate to the project folder using the command line.\nInitialize a new Git repository in the project folder.\n\nAdd content and commit changes\n\nCreate a new text file and name it appropriately.\nAdd a short entry to the text file (any favorite or an intriguing AI-generated one).\nStage the new file.\nCommit the changes in the text file with a descriptive commit message.\n\nüöÄ Optional: Commit at least three additional changes in your new file."
  },
  {
    "objectID": "sessions/slides_session05.html#exercises-2",
    "href": "sessions/slides_session05.html#exercises-2",
    "title": "Session 5: Git Essentials",
    "section": "Exercises 2",
    "text": "Exercises 2\nAmend a commit\n\nIf needed, navigate to the project folder using the command line.\nMake additional changes to your project text file.\nStage the changes.\nAmend the previous commit to include the new changes.\nCheck the commit history to verify that the last commit message has not changed.\n\nFor example, add a new entry without a title first, commit, then add a title and amend the previous commit to add the title change to the same commit."
  },
  {
    "objectID": "sessions/slides_session05.html#exercises-3",
    "href": "sessions/slides_session05.html#exercises-3",
    "title": "Session 5: Git Essentials",
    "section": "Exercises 3",
    "text": "Exercises 3\nCreate a .gitignore file\n\nIf needed, navigate to the project folder using the command line.\nAdd a random file to your repository that you want to ignore, for example an image file like image.jpg.\nCheck the state of your repository to confirm that Git noticed the added file.\nCreate a .gitignore file.\nAdd the random file to the .gitignore file.\nCheck the state of your repository again to confirm that Git now ignores the added file.\nStage the changes in your repository.\nCommit the .gitignore file using a descriptive commit message.\nüöÄ All macOS users: Let your repository ignore .DS_Store."
  },
  {
    "objectID": "sessions/slides_session05.html#solutions-first-steps-with-git",
    "href": "sessions/slides_session05.html#solutions-first-steps-with-git",
    "title": "Session 5: Git Essentials",
    "section": "Solutions: First steps with Git",
    "text": "Solutions: First steps with Git\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\ngit init # &lt;2&gt;\ntouch city-guide.txt # &lt;3&gt;\ncat &gt; city-guide.txt &lt;&lt;- EOM # &lt;4&gt;\nHamburg Planetarium\n\n- It is one of the world's oldest, and one of Europe's most visited planetariums.\n- It is located in the district of Winterhude, Hamburg, Germany.\nEOM\ngit add city-guide.txt # &lt;5&gt;\ngit commit -m \"Add Hamburg Planetarium to city-guide.txt\" # &lt;6&gt;\n\n\n\nIf needed, navigate into the city-guide subfolder using cd city-guide (or a similar path).\nInitialize a new Git repository in the city-guide folder using git init.\nCreate a new file called city-guide.txt using touch. Note that you can also use a regular text editor to do this.\nAdd a short entry to city-guide.txt. In this example, cat is used to add text to city-guide.txt. This command would also create the file if city-guide.txt wouldn‚Äôt exist yet. Note that you can also use a regular text editor to do this.\nStage the new city-guide.txt file using git add.\nCommit the changes in city-guide.txt with a descriptive commit message using git commit."
  },
  {
    "objectID": "sessions/slides_session05.html#solutions-amend-a-commit",
    "href": "sessions/slides_session05.html#solutions-amend-a-commit",
    "title": "Session 5: Git Essentials",
    "section": "Solutions: Amend a commit",
    "text": "Solutions: Amend a commit\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\necho \"- It is housed in a former water tower at the center of Hamburg Stadtpark.\" &gt;&gt; city-guide.txt # &lt;2&gt;\ngit add city-guide.txt # &lt;3&gt;\ngit commit --amend --no-edit # &lt;4&gt;\ngit log --oneline # &lt;5&gt;\n\n\n\nOptional: Navigate into the project repository using cd (in combination with an absolute or relative path).\nMake an additional change to the project text file. In this example, echo is used to append text to text file. Note that you can also use a regular text editor to do this.\nStage the changes using git add.\nAmend the previous commit to include the new changes using git commit --amend. In this example, the --no-edit flag is used to amend the commit without changing the commit message.\nCheck the commit history using git log to verify that the last commit message has not changed. Here, we add the --oneline flag to show a concise summary of the past commits."
  },
  {
    "objectID": "sessions/slides_session05.html#solutions-create-a-.gitignore-file",
    "href": "sessions/slides_session05.html#solutions-create-a-.gitignore-file",
    "title": "Session 5: Git Essentials",
    "section": "Solutions: Create a .gitignore file",
    "text": "Solutions: Create a .gitignore file\n\n\n\nCode\n\n#!/bin/bash\n\ncd city-guide # &lt;1&gt;\nwget -nv -O hamburg-planetarium.jpg https://upload.wikimedia.org/wikipedia/commons/3/3a/Hamburg_Planetarium_10881zh.jpg # &lt;2&gt;\ngit status # &lt;3&gt;\ntouch .gitignore # &lt;4&gt;\necho \"*.jpg\" &gt; .gitignore # &lt;5&gt;\ngit status # &lt;6&gt;\ngit add --all # &lt;7&gt;\ngit commit -m \"Add .gitignore and ignore all files that end with .jpg\" # &lt;8&gt;\necho \".DS_Store\" &gt;&gt; .gitignore # &lt;9&gt;\ngit add .gitignore # &lt;9&gt;\ngit commit -m \"Ignore .DS_Store\" # &lt;9&gt;\n\n\n\nOptional: Navigate into the project repository using cd (in combination with an absolute or relative path).\nDownload an image from the internet using wget. This command download a picture of pasta from the internet and saves the output -O as pasta.jpg. The -nv (or --no-verbose) argument makes the command output less text.\nCheck the state of your repository using git status. Git will notice the new file and list it as untracked.\nCreate a .gitignore file using touch. Note that you can also use a regular text editor to do this.\nAdd *.jpg to the .gitignore file to ignore all files that end with the .jpg file extension. In this example, echo is used to append text to the text file. Note that you can also use a regular text editor to do this. This command would also create the file if .gitignore wouldn‚Äôt exist yet.\nCheck the state of your repository again using git status. The new file should disappear from the output and is not listed as untracked anymore.\nStage all changes using git add --all. This command should generally be avoided as it may lead to staging and committing changes that should not added to the repository‚Äôs history. Here, we use it to demonstrate that only the .gitignore will be staged but not the pasta image file because it is ignored.\nCommit the changes in .gitignore with a descriptive commit message using git commit.\nAdd .DS_Store to the .gitignore file to ignore it. Again, echo is used to append text to the text file. Note that you can also use a regular text editor to do this. Stage and commit your changes using a descriptive commit message."
  },
  {
    "objectID": "sessions/slides_session05.html#staging-and-committing",
    "href": "sessions/slides_session05.html#staging-and-committing",
    "title": "Session 5: Git Essentials",
    "section": "Staging and Committing",
    "text": "Staging and Committing\n\n\nStaging:\n\nCommand: git add\nPurpose: Preparing and organizing files before they are recorded in the repository‚Äôs history.\n\n\nCommitting:\n\nCommand: git commit -m \"commit message\"\nPurpose: Saving the changes in the staged files to the repository‚Äôs history, creating a snapshot.\n\n\n\n\n\n\n\nSource: git-scm.com"
  },
  {
    "objectID": "sessions/slides_session05.html#git-log",
    "href": "sessions/slides_session05.html#git-log",
    "title": "Session 5: Git Essentials",
    "section": "git log",
    "text": "git log\n\ngit log\ne.g:\n\n\n\n\n\ncommit 3f6db14ed93d6e92a207a9a3ac5f8b8c5c5c5c34 (HEAD -&gt; main, origin/master, origin/HEAD)\nAuthor: Jane Doe &lt;jane@example.com&gt;\nDate:   Tue Apr 24 14:24:48 2024 -0700\n\n    Fix the widget rendering issue in the dashboard\n\ncommit a4324f44d3e85723a4d91cb9e07132b7115e4941\nAuthor: John Smith &lt;john@example.com&gt;\nDate:   Mon Apr 23 16:17:59 2024 -0700\n\n    Update dependencies to newer versions\n\ncommit fa204b9145bf7fc7ff226a26b49a567fc2eb1b94\nAuthor: Alice Johnson &lt;alice@example.com&gt;\nDate:   Sun Apr 22 15:08:43 2024 -0700\n\n    Initial commit of project files\n\n\n\n\ncommit b9690b287bdfec6e17af39b7337b84e9ebf6f046\nAuthor: Lennart Wittkuhn &lt;lennart.wittkuhn@tutanota.com&gt;\nDate:   Fri Mar 22 15:19:43 2024 +0100\n\n    move illustration of bad git commits (xkcd comic) and edit sentence\n\ncommit d8d770dd84cd19086f41d8d38752b223c8130859\nAuthor: konradpa &lt;konrad@pagenstedt.de&gt;\nDate:   Wed Mar 6 13:51:13 2024 +0100\n\n    add image to setup chapter\n\ncommit 074c9f6e12dd5fc8cc61de9f31efbdbce41a7583\nAuthor: konradpa &lt;konrad@pagenstedt.de&gt;\nDate:   Wed Mar 6 13:51:07 2024 +0100\n\n    add image to rewriting history chapter"
  },
  {
    "objectID": "sessions/slides_session05.html#terminology-what-are-branches",
    "href": "sessions/slides_session05.html#terminology-what-are-branches",
    "title": "Session 5: Git Essentials",
    "section": "Terminology: What are ‚Äúbranches‚Äù?",
    "text": "Terminology: What are ‚Äúbranches‚Äù?\n lennartwittkuhn.com/version-control-book/chapters/branches.html"
  },
  {
    "objectID": "sessions/slides_session05.html#terminology-what-is-head",
    "href": "sessions/slides_session05.html#terminology-what-is-head",
    "title": "Session 5: Git Essentials",
    "section": "Terminology: What is HEAD?",
    "text": "Terminology: What is HEAD?\n lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html#head\n\n\n\nVersion Control Course"
  },
  {
    "objectID": "sessions/slides_session09.html#schedule",
    "href": "sessions/slides_session09.html#schedule",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nNo\nDate\nTitle\nContents\nReading\nSurvey/Quiz\n\n\n\n\n1\n2024-10-18\nIntroduction to version control\nOrganizational mattersOverview of seminar sessionsIntroduction to version controlIntroduction to Git and its advantages\n Intro to version control\nCourse introduction Survey\n\n\n2\n2024-10-25\nCommand line\nFile SystemsBenefits of the Command LineBasic Command Line commands\n Command Line\nCommand Line Quiz\n\n\n3\n2024-11-01\nSetup + Git Fundamentals\nInstallation and configuration of GitInitializing a Git repositoryBasic Git commands\n Installation, Setup, First steps with Git\nInstallation Survey, Git Basics Quiz\n\n\n4\n2024-11-08\nBasic Git workflow\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n First steps with Git\nGit Basics Quiz\n\n\n5\n2024-11-15\nGit Essentials (Repetition & Practice)\nPracticing basic Git commandsIgnoring files with .gitignoreGood commit messages\n Git Essentials\nGit Basics Quiz\n\n\n6\n2024-11-22\nGit Branching and Merging\nUnderstanding branches in GitCreating and switching between branchesMerging branchesResolving merge conflict\n Branches\nGit Branches Quiz\n\n\n7\n2024-11-29\nQuarto Workshop\nIntroduction to Quarto\n\n\n\n\n8\n2024-12-06\nIntroduction to GitHub\nIntroduction to remote repositoriesCreating a GitHub accountCreating and managing repositories on GitHubPushing and pulling changes\n GitHub Intro\nGitHub Quiz\n\n\n9\n2024-12-13\nGitHub with collaborators\nCloning a remote repositoryBranching and merging in a collaborative environmentPull RequestsGitHub IssuesGraphical User Interfaces (GUIs), e.g., GitKraken\n GitHub Intro, GitHub Issues\nGitHub Quiz\n\n\n10\n2024-12-20\nRepetition and Practice\nRepetition and Practice\n\n\n\n\n11\n2025-01-10\nGit(Hub) with the world\nForking a remote repositoryREADME filesProject Management\n GitHub Advanced, GitHub Issues\nGitHub Quiz\n\n\n12\n2025-01-17\nPublishing\nCreating Tags with GitCreating Releases with GitHubUsing Zenodo for scientific publishing\n Tags and Releases\n\n\n\n13\n2025-01-24\nGraphical User Interfaces\nCourse evaluationRepetition and practiceIntro to Graphical User Interfaces\n Graphical User Interfaces\n\n\n\n14\n2025-01-31\nSummary & Wrap-Up\nDiscussion of course evaluation‚ú® Surprise ‚ú®Summary & Outlook"
  },
  {
    "objectID": "sessions/slides_session09.html#last-session-github---intro-1",
    "href": "sessions/slides_session09.html#last-session-github---intro-1",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Last session: GitHub - Intro",
    "text": "Last session: GitHub - Intro\n https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html"
  },
  {
    "objectID": "sessions/slides_session09.html#last-sessions-learning-objectives",
    "href": "sessions/slides_session09.html#last-sessions-learning-objectives",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Last session‚Äôs learning objectives",
    "text": "Last session‚Äôs learning objectives\nüí° You can create a remote repository. üí° You can connect your local Git repository to a remote repository service like GitHub or GitLab. üí° You can pull and push changes to and from a remote repository. üí° You can clone a repository from a remote repository."
  },
  {
    "objectID": "sessions/slides_session09.html#questions-about-the-course",
    "href": "sessions/slides_session09.html#questions-about-the-course",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Questions about the course",
    "text": "Questions about the course\n\n\n ‚ÄúI didn‚Äôt yet complete last session‚Äôs exercise. What now?‚Äù\n\nPlease focus on the exercises of the current session.\nExercises build on concepts from previous sessions, but are not dependent on previous exercises.\nRemember: At the end of the semester, you must have completed all mandatory exercises.\n\n\n\n\n ‚ÄúCan I copy everything to the Quarto file?‚Äù\n\nWe encourage you do use the city-guide.qmd from now on to develop your city-guide project!\n\nYou can move all content from city-guide.txt to city-guide.qmd.\nMotivation: We can later turn your city-guide repository into a website (see Lennart‚Äôs example)\n\nYou can also just continue using the city-guide.txt file.\nReminder: It‚Äôs about implementing the Git exercises. It does not matter if you use a .qmd, .txt or another file."
  },
  {
    "objectID": "sessions/slides_session09.html#reminders-faq",
    "href": "sessions/slides_session09.html#reminders-faq",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Reminders / FAQ",
    "text": "Reminders / FAQ\n\n\n ‚ÄúRemember to cd in your city-guide project folder!‚Äù\n\nEvery time you open the command line, it starts at a default location (likely your home directory).\nCheck in which folder you are, using pwd (‚Äúprint working directory‚Äù).\nUse cd to move to your city-guide project folder before you start running the Git commands.\n\n\n\n\n ‚ÄúMy password is not shown!‚Äù\n\nSometimes, for example, when creating an SSH key, you are asked for a password.\nUsually, a key symbol appears \nThe command line registers your password although you can‚Äôt see it!\nCopy-pasting works too!\n\n\nGenerating public/private ed25519 key pair.\nEnter file in which to save the key (/Users/user/.ssh/id_ed25519):\nCreated directory '/Users/user/.ssh'.\nEnter passphrase (empty for no passphrase): # now just enter your password!"
  },
  {
    "objectID": "sessions/slides_session09.html#questions-from-last-session",
    "href": "sessions/slides_session09.html#questions-from-last-session",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Questions from last session",
    "text": "Questions from last session\n\n\n ‚ÄúCan I change my GitHub username later?‚Äù\n\nYes, but consider that URLs to your profile and all your repositories will change.\nFor more details, see the GitHub documentation on ‚ÄúChanging your GitHub username‚Äù.\n\n\n\n\n ‚ÄúWhat is the difference between my local Git user.email configuration and my GitHub email address?‚Äù\n\nThe user.email in Git is the email address used to identify your commits in version control history.\nThe email address on GitHub is associated with your account for notifications, settings, and profile information.\nThey don‚Äôt have to be the same.\nHowever, if you want your GitHub profile to show your commits correctly, the email in your Git config should match an email associated with your GitHub account.\n\n\n\n\n ‚ÄúMy files don‚Äôt all show up on GitHub?!‚Äù\n\nGitHub is no cloud sharing that synchronizes all files in a folder automatically!\nRemember: Only files that are tracked by Git (that you added (git add), committed (git commit) to the repository) and then pushed (git push) are also transferred to GitHub.\nFiles that are untracked (check with git status) or ignored by .gitignore will not be transferred to GitHub, even if they are present in your local Git repository."
  },
  {
    "objectID": "sessions/slides_session09.html#more-questions-about-the-last-session",
    "href": "sessions/slides_session09.html#more-questions-about-the-last-session",
    "title": "Session 9: GitHub - Collaboration",
    "section": "More questions about the last session?",
    "text": "More questions about the last session?"
  },
  {
    "objectID": "sessions/slides_session09.html#meta-session-title",
    "href": "sessions/slides_session09.html#meta-session-title",
    "title": "Session 9: GitHub - Collaboration",
    "section": "GitHub - Collaboration",
    "text": "GitHub - Collaboration\n\n\n\n\nImage from Techdobz"
  },
  {
    "objectID": "sessions/slides_session09.html#github-flow",
    "href": "sessions/slides_session09.html#github-flow",
    "title": "Session 9: GitHub - Collaboration",
    "section": "GitHub Flow",
    "text": "GitHub Flow\n\n\n\n\nImage from Sebass van Boxel"
  },
  {
    "objectID": "sessions/slides_session09.html#this-and-next-sessions-learning-objectives",
    "href": "sessions/slides_session09.html#this-and-next-sessions-learning-objectives",
    "title": "Session 9: GitHub - Collaboration",
    "section": "This and next session‚Äôs learning objectives",
    "text": "This and next session‚Äôs learning objectives\nüí° You know the purpose and components of a Pull Request. üí° You know how to collaborate using the popular workflow strategy GitHub flow. üí° You know the purpose and components of a README file. üí° You can fork a repository. üí° You can create a Pull Request from a forked repository. üí° You can protect your main branch."
  },
  {
    "objectID": "sessions/slides_session09.html#reading",
    "href": "sessions/slides_session09.html#reading",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Reading",
    "text": "Reading\n ‚ÄúGitHub - Advanced‚Äù"
  },
  {
    "objectID": "sessions/slides_session09.html#cheatsheet",
    "href": "sessions/slides_session09.html#cheatsheet",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\n\n\n\nCommand\nDescription\n\n\n\n\ngit blame\nShows the authorship and commit information of each line in a file"
  },
  {
    "objectID": "sessions/slides_session09.html#tasks",
    "href": "sessions/slides_session09.html#tasks",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Tasks",
    "text": "Tasks\nIn this session, you will work on the following tasks:\n\n Reading: Read the chapter(s) ‚ÄúGitHub - Advanced‚Äù in the Version Control Book.\n Implementation: Try out the commands in the chapter.\n Exercises: Work on the exercises for the city-guide project.\n Quiz: Test your knowledge with the quiz.\n\nAs always:\n\nTry out the commands of this session and play around with them.\nCheck whether you have achieved the learning objectives.\nAsk questions!\nLet‚Äôs git started!"
  },
  {
    "objectID": "sessions/slides_session09.html#var-course.project-project",
    "href": "sessions/slides_session09.html#var-course.project-project",
    "title": "Session 9: GitHub - Collaboration",
    "section": "city-guide project",
    "text": "city-guide project\nAt the end of this session, you should have accomplished the following:\n\nYou collaborated successfully on a shared project by adding and committing changes to a partner‚Äôs repository.\nYou created and reviewed a pull request to integrate new content from a partner.\n\nPlease keep the city-guide folder! We will continue to use it in the following sessions.\n\n\nToday‚Äôs team topic\n\nInterview each other about your least favorite place or place to avoid (and, maybe, also why ‚Ä¶)\nAdd the recommendation of your partner to your text file or Quarto file.\nHelp each other in completing the exercises."
  },
  {
    "objectID": "sessions/slides_session09.html#exercises",
    "href": "sessions/slides_session09.html#exercises",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Exercises",
    "text": "Exercises\n‚ÄúPrivate‚Äù collaboration with pull requests (using GitHub Flow)\n\nAdd your exercise partner as a collaborator to your project repository on GitHub.\nClone your partner‚Äôs repository.\nCreate a new branch in your collaborator‚Äôs repository.\nAdd a new entry to your collaborator‚Äôs project file (e.g., .txt or .qmd (if you are unsure, where to add the entry, ask your collaborator!)\nAdd and commit the changes.\nPush the changes on the new branch to the remote repository.\nCreate a Pull Request (on GitLab: Merge Request).\nReview the Pull Request that your collaborator made in your repository.\nüöÄ Optional: Add additional changes on the branch pushed by your collaborator.\nMerge the pull request into your repository.\n\n\n\nAdd a README.md\n\nFind the option to create a new file on your remote repository in the browser.\nName the file README.md, add a brief description, and provide a commit message.\nüöÄ Optional: Play around with Markdown syntax.\nSave the README.md file to the repository.\nPull the changes to your local repository."
  },
  {
    "objectID": "sessions/slides_session09.html#bonus-exercises",
    "href": "sessions/slides_session09.html#bonus-exercises",
    "title": "Session 9: GitHub - Collaboration",
    "section": "Bonus exercises",
    "text": "Bonus exercises\nüöÄ Optional: Clean up your repository\nFiles that your repository should include:\n\na city-guide.qmd (see exercise in Session 07 on ‚ÄúQuarto‚Äù) or city-guide.txt file (see exercises starting in Session 02), or a similarly named file that includes the entries for the city-guide project\na .gitignore file (see exercise in Session 04 on ‚ÄúBasic Git workflow‚Äù)\na README.md file (see exercise in Session 09 on ‚ÄúGitHub - Collaboration‚Äù)\n\nWhile this is not mandatory, please try to remove any unnecessary files or clutter, like empty .txt files from your repository. You can delete files directly on GitHub by clicking on the three dots next to the directory or file and selecting ‚ÄúDelete file,‚Äù then commit the changes. This effectively runs git add and git commit on GitHub. Alternatively, delete them from your local repository, add, commit and push the changes to GitHub."
  }
]