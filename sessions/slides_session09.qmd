---
title: "Session 9: GitHub - Collaboration"
date: 2024-12-13T10:15
format: revealjs
metadata-files:
  - _slides.yml
session-title: "GitHub - Collaboration"
chapter: |
   ["GitHub - Advanced"](https://lennartwittkuhn.com/version-control-book/chapters/github-advanced.html)
quiz-url: https://version-control-github.formr.org
---

# Admin

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

# Last session: GitHub - Intro

## Last session: GitHub - Intro

{{< fa display >}} [https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html](https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html)
```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html" title="Version Control Book"></iframe>
```

## Last session's learning objectives

{{< include ../objectives/_objectives-remotes-intro.qmd >}}

## Questions about the course

::: fragment

#### {{< fa circle-question >}} *"I didn't yet complete last session's exercise. What now?"*

- **Please focus on the exercises of the current session.**
- Exercises build on concepts from previous sessions, but are not dependent on previous exercises.
- Remember: At the *end of the semester*, you must have completed all *mandatory* exercises.

:::

::: fragment

#### {{< fa circle-question >}} *"Can I copy everything to the Quarto file?"*

- We encourage you do use the `{{< var course.project >}}.qmd` from now on to develop your `{{< var course.project >}}` project!
  - You can move all content from `{{< var course.project >}}.txt` to `{{< var course.project >}}.qmd`.
  - Motivation: We can later turn your `{{< var course.project >}}` repository into a website (see [Lennart's example](https://lennartwittkuhn.com/uhh-eur-city-guide/))
- You can also just continue using the `{{< var course.project >}}.txt` file.
- **Reminder:** It's about implementing the Git exercises.
It does not matter if you use a `.qmd`, `.txt` or another file.

:::


## Reminders

::: fragment

#### {{< fa circle-exclamation >}} *"Remember to `cd` in your `{{< var course.project >}}` project folder!"*

- Every time you open the command line, it starts at a default location (likely your home directory).
- Check in which folder you are, using `pwd` ("print working directory").
- Use `cd` to move to your `{{< var course.project >}}` project folder before you start running the Git commands.

:::

::: fragment

#### {{< fa circle-exclamation >}} *"My password is not shown!"*

- Sometimes, for example, when creating an SSH key, you are asked for a password.
- Usually, a key symbol appears {{< fa key >}}
- **The command line registers your password although you can't see it!**
- Copy-pasting works too!

```{zsh}
Generating public/private ed25519 key pair.
Enter file in which to save the key (/Users/user/.ssh/id_ed25519):
Created directory '/Users/user/.ssh'.
Enter passphrase (empty for no passphrase): # now just enter your password
```
:::

## Questions from last session

::: fragment
#### {{< fa circle-question >}} *"Can I change my GitHub username later?"*

- Yes, but consider that URLs to your profile and all your repositories will change.
- For more details, see the GitHub documentation on ["Changing your GitHub username"](https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-user-account-settings/changing-your-github-username).
:::

::: fragment
#### {{< fa circle-question >}} *"What is the difference between my local Git `user.email` configuration and my GitHub email address?"*

- The **`user.email`** in Git is the email address used to identify your commits in version control history.
- The **email address** on **GitHub** is associated with your account for notifications, settings, and profile information.
- They don't have to be the same.
- However, if you want your GitHub profile to show your commits correctly, the email in your Git config should match an email associated with your GitHub account.
:::

::: fragment
#### {{< fa circle-question >}} *"My files don't all show up on GitHub?!"*

- **GitHub is *no* cloud sharing** that synchronizes all files in a folder automatically!
- Remember: Only files that are tracked by Git (that you added (`git add`), committed (`git commit`) to the repository) and then pushed (`git push`) are also transferred to GitHub.
- Files that are untracked (check with `git status`) or ignored by `.gitignore` will not be transferred to GitHub, even if they are present in your local Git repository.
:::

## More questions about the last session?

# This session: {{< meta session-title >}}

## {{< meta session-title >}}

::: fragment
![Image from [Techdobz](https://medium.com/analytics-vidhya/version-control-using-git-github-ff4c3f7c752e)](../images/git-github-integration.png){width="70%"}
:::

## GitHub Flow

::: fragment
![Image from [Sebass van Boxel](https://github.com/SvanBoxel/release-based-workflow/issues/1)](../images/github_flow.png){width="70%"}
:::

## This and next session's learning objectives

{{< include ../objectives/_objectives-github-advanced.qmd >}}

## Reading

{{< fa display >}} {{< meta chapter >}}

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/github-advanced.html" title="Version Control Book"></iframe>
```

## Cheatsheet

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
knitr::kable(table_cheatsheet(name = "github_advanced"), format = "markdown", row.names = FALSE)
```

## Tasks

{{< include tasks-template.qmd >}}

## `{{< var course.project >}}` project

{{< include project/project-github-advanced.qmd >}}

::: {.fragment}

### Today's team topic

- Interview each other about your *least* favorite place or **place to avoid** (and, maybe, also why ...)
- Add the recommendation *of your partner* to your text file **or Quarto file**.
- Help each other in completing the exercises.

:::

## Exercises

### "Private" collaboration with pull requests (using GitHub Flow)

{{< include ../exercises/_exercises-remotes-collaboration.qmd >}}

::: fragment

### Add a `README.md`

{{< include ../exercises/_exercises-remotes-readme.qmd >}}

:::

## Bonus exercises

### :rocket: Optional: Clean up your repository

Files that your repository should include:

- a `{{< var course.project >}}.qmd` (see exercise in [Session 07](session07.qmd) on "Quarto") or `{{< var course.project >}}.txt` file (see exercises starting in [Session 02](session02.qmd)), or a similarly named file that includes the entries for the `{{< var course.project >}}` project
- a `.gitignore` file (see exercise in [Session 04](session04.qmd) on "Basic Git workflow")
- a `README.md` file (see exercise in [Session 09](session09.qmd) on "{{< meta session-title >}}")

While this is not mandatory, please try to remove any unnecessary files or clutter, like empty `.txt` files from your repository.
You can delete files directly on GitHub by clicking on the three dots next to the directory or file and selecting "Delete file," then commit the changes.
This effectively runs `git add` and `git commit` on GitHub.
Alternatively, delete them from your local repository, add, commit and push the changes to GitHub.
