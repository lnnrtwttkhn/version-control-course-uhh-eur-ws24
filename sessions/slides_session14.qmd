---
title: "Session 14: Summary & Outlook"
date: 2025-01-31T10:15
format: revealjs
metadata-files:
  - _slides.yml
---

# Logistics & Admin

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

# Last session: Graphical User Interfaces

## Last session: Graphical User Interfaces

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/gui.html" title="Version Control Book"></iframe>
```

## Last session: Learning objectives

After the last session, you should now be able to answer the following questions / do the following:

{{< include ../objectives/_objectives-gui.qmd >}}

## Your questions about the last session?

# Summary

## Learning Objectives (Preparation)

### Introduction to Version Control

{{< include ../objectives/_objectives-intro.qmd >}}

### Basics of the Command Line

{{< include ../objectives/_objectives-cli.qmd >}}

### Setup & Configuration

{{< include ../objectives/_objectives-setup.qmd >}}

## Learning Objectives (Local Version Control)

### First steps with Git

{{< include ../objectives/_objectives-firststeps.qmd >}}

### Git Essentials

{{< include ../objectives/_objectives-essentials.qmd >}}

### Branches

{{< include ../objectives/_objectives-branches.qmd >}}

## Learning Objectives (Collaboration)

### Integration with GitHub / GitLab

{{< include ../objectives/_objectives-remotes-intro.qmd >}}

### Collaboration on GitHub / GitLab

{{< include ../objectives/_objectives-github-advanced.qmd >}}

### Tags, Releases & Publication

{{< include ../objectives/_objectives-tags-releases.qmd >}}

## Open Questions about Git or GitHub?

# Course evaluation

## Improve: Collaboration between students

::: fragment
- Hard to collaborate when people didn't finish previous exercises.
- Hard to collaborate when people had very different levels of experience and skills.
- Would've been better to work consistently in the same group.
:::

::: fragment
### Suggestions

- Set **deadlines for mandatory tasks** before the next session.
- Have **more participants in each breakout room** for better support from advanced students.
- Offer **two types of assignments**: a basic one for everyone and an optional advanced one.
:::

## Improve: Course structure & setting

::: fragment
- The online format was problematic; the course would be more engaging in person.
- Reading chapters on Zoom while others interacted was distracting.
- Some sessions were mostly just reading, with students working on tasks alone with minimal input.
:::

::: fragment
### Suggestions

- Assign these **chapters as homework** to complete outside of class.
- Split tasks into **smaller parts**, like 20 minutes, with discussions in between.
:::

## Improve: Clarity of instructions

::: fragment
- For some session, instructions were confusing and spread out in different places
- Example: Forking exercise, with slides, book and contributing guidelines to consider
:::

::: fragment
### Suggestions

- Give **clearer guidelines and instructions** for each session
- Help students **track their progress and requirements** from the start
:::

## Improve: Misc

::: fragment
- The course was a bit **too fast**.
- Provide **more foundational (background) knowledge** on the topic.
- Provide **more time for questions** at the end of each session (> 5 minutes).
:::

{{< include _course-requirements.qmd >}}

# Outlook: There's more ...

## Graphical User Interfaces (GUIs) for Git

::: columns
::: {.column width="35%"}
::: fragment
### Integrated Development Environments (IDEs)

#### RStudio

[![](../images/gui-rstudio.png)](https://microsite.geo.uzh.ch/reproducible_research/post/rr-rstudio-git/)
:::

::: fragment
#### MATLAB

[![](../images/gui-matlab.png)](https://de.mathworks.com/help/matlab/matlab_prog/branch-and-merge-with-git.html)
:::
:::

::: {.column width="35%"}
::: fragment
### Git Clients

### GitKraken

[![](../images/gui-gitkraken.png)](https://jonbunator.github.io/gitkraken-custom-themes/)
:::

::: fragment
### GitHub Desktop

[![](../images/gui-githubdesktop.png)](https://desktop.github.com/)
:::
:::

::: {.column width="25%"}
::: fragment
### Mobile

#### Working Copy (iOS)

[![](../images/gui-workingcopy.png)](https://workingcopyapp.com/users-guide)
:::
:::
:::

## Rewriting history

See chapter ["Rewriting History"](https://lennartwittkuhn.com/version-control-book/chapters/rewriting-history.html)

![Credit: [tech_kody](https://www.tiktok.com/@tech_kody) via TikTok](../images/git-revert-meme.png)

## Continuous Integration & Deployment (CI/CD)

::::: columns
:::: {.column width="65%"}
![from [Suresoft](https://suresoft.dev/knowledge-hub/continuous-integration/gitlab-ci/)](../images/gitlab-ci.jpg)
::::
:::: {.column width="35%"}
#### Example: Lennart's `recipes` repo

- Automated spell check
- Rebuilding of project website

{{< fa display >}} [github.com/lnnrtwttkhn/recipes](https://github.com/lnnrtwttkhn/recipes/)
::::
:::::

## Version Control for *data*: DataLad

::::: columns
:::: {.column width="55%"}
::: fragment
... for **data** (binary files) ![Â© Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd052810s.gif)
:::
::::
:::: {.column width="45%"}
::: {.fragment}
Sadly, Git does not handle large files well.
![](../images/git-snapshot.png){fig-align="center" width=100%}
:::
::: {.fragment}
::: {layout-ncol=2}
![[datalad.org](https://www.datalad.org/) (from the [DataLad Handbook](https://handbook.datalad.org/en/latest/index.html) by Wagner et al.)](../images/datalad-logo-full.svg)

[![](../images/datalad-handbook-logo.svg)](https://handbook.datalad.org/en/latest/)
:::
:::
::::
:::::

# :sparkles: Surprise :sparkles:

# Thank you! {.unnumbered}
